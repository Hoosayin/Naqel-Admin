{"version":3,"sources":["res/English.js","res/Urdu.js","res/Arabic.js","res/strings.js","components/shared/Header.js","res/LanguageDispatcher.js","components/landing/Landing.js","components/login/Login.js","components/administrators/AdministratorFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","containers/phoneConfirmationDialog/PhoneConfirmationDialog.js","res/FirebaseApp.js","components/register/Register.js","components/register/SetupAdministratorAccount.js","components/shared/UserFunctions.js","components/register/Congratulations.js","components/administrators/dashboard/profile/settings/GeneralSettings.js","components/administrators/dashboard/profile/ProfilePhoto.js","components/administrators/dashboard/profile/settings/UsernameAndEmailSettings.js","components/administrators/dashboard/profile/settings/PasswordSettings.js","components/administrators/dashboard/profile/settings/NaqellSettings.js","components/administrators/dashboard/profile/settings/AdminSecretSettings.js","components/administrators/dashboard/profile/settings/Settings.js","components/administrators/dashboard/profile/Profile.js","containers/searching/SearchingContainer.js","controls/ProgressBar.js","containers/driver/documents/DrivingLicenceContainer.js","controls/ProgressRing.js","controls/Rating.js","containers/driver/documents/EntryExitCardContainer.js","containers/driver/documents/IdentityCardContainer.js","containers/driver/documents/DocumentsDialog.js","containers/driver/DriverContainer.js","containers/truck/TrailerContainer.js","containers/truck/TrailersDialog.js","containers/truck/TruckContainer.js","components/administrators/dashboard/Drivers/BlockAccountDialog.js","components/administrators/dashboard/Drivers/UnblockAccountDialog.js","components/administrators/dashboard/Drivers/DriverListItem.js","components/administrators/dashboard/Drivers/DriversList.js","controls/PageHeading.js","containers/trader/documents/IdentityCardContainer.js","components/administrators/dashboard/Drivers/Drivers.js","containers/trader/documents/CommercialRegisterCertificateContainer.js","containers/trader/documents/DocumentsDialog.js","containers/trader/TraderContainer.js","components/administrators/dashboard/traders/SetRefundRateDialog.js","components/administrators/dashboard/traders/ChargeTraderDialog.js","components/administrators/dashboard/traders/ExonerateTraderDialog.js","components/administrators/dashboard/traders/TraderListItem.js","components/administrators/dashboard/traders/TradersList.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/AddObjectionReasonDialog.js","components/administrators/dashboard/traders/Traders.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/ObjectionReasonListItem.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/ObjectionReasonsList.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/AddObjectionReasonDialog.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/TraderObjectionReasons.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/ObjectionReasonListItem.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/ObjectionReasonsList.js","components/administrators/dashboard/jobs/objectionReasons/ObjectionReasons.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/DriverObjectionReasons.js","containers/onGoingJob/JobContainer.js","containers/onGoingJob/JobObjectionContainer.js","components/administrators/dashboard/jobs/objectionableJobs/jobObjections/Objections.js","components/administrators/dashboard/jobs/objectionableJobs/DiscardObjectionableJobDialog.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobListItem.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobsList.js","components/administrators/dashboard/jobs/waitingTImes/WaitingTimeRow.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobs.js","components/administrators/dashboard/jobs/waitingTImes/AddWaitingTimeDialog.js","components/administrators/dashboard/jobs/waitingTImes/WaitingTimesTable.js","components/administrators/dashboard/jobs/Jobs.js","components/administrators/dashboard/jobs/waitingTImes/WaitingTimes.js","components/administrators/dashboard/Trucks/truckSizes/TruckSizeRow.js","components/administrators/dashboard/Trucks/truckSizes/AddTruckSizeDialog.js","components/administrators/dashboard/Trucks/truckSizes/TruckSizesTable.js","components/administrators/dashboard/Trucks/truckTypes/TruckTypeRow.js","components/administrators/dashboard/Trucks/truckSizes/TruckSizes.js","components/administrators/dashboard/Trucks/truckTypes/AddTruckTypeDialog.js","components/administrators/dashboard/Trucks/truckTypes/TruckTypesTable.js","components/administrators/dashboard/Trucks/Trucks.js","components/administrators/dashboard/Trucks/truckTypes/TruckTypes.js","components/administrators/dashboard/Permits/permitTypes/PermitTypeRow.js","components/administrators/dashboard/Permits/permitTypes/AddPermitTypeDialog.js","components/administrators/dashboard/Permits/permitTypes/PermitTypesTable.js","containers/driverQuestion/DriverQuestionContainer.js","components/administrators/dashboard/Permits/permitTypes/PermitTypes.js","components/administrators/dashboard/questions/driverQuestions/AnswerDriverQuestionDialog.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionClasses.js","components/administrators/dashboard/questions/driverQuestions/ClassifyDriverQuestionDialog.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionListItem.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionsList.js","containers/traderQuestion/TraderQuestionContainer.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestions.js","components/administrators/dashboard/questions/traderQuestions/AnswerTraderQuestionDialog.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionClasses.js","components/administrators/dashboard/questions/traderQuestions/ClassifyTraderQuestionDialog.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionListItem.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionsList.js","containers/responsibleQuestion/ResponsibleQuestionContainer.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestions.js","components/administrators/dashboard/questions/responsibleQuestions/AnswerResponsibleQuestionDialog.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionClasses.js","components/administrators/dashboard/questions/responsibleQuestions/ClassifyResponsibleQuestionDialog.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionListItem.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionsList.js","components/administrators/dashboard/questions/Questions.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestions.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/SetGlobalFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/SetTemporaryFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/ClearTemporaryFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/GlobalAndTemporaryRates.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/UpdatePriceRangeDialog.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRangeListItem.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/AddPriceRangeDialog.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRangesList.js","components/administrators/dashboard/feeRates/generalRates/GeneralRates.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRanges.js","components/administrators/dashboard/feeRates/traderRates/UpdateTraderRateDialog.js","components/administrators/dashboard/feeRates/traderRates/TraderRateListItem.js","components/administrators/dashboard/feeRates/traderRates/AddTraderRateDialog.js","components/administrators/dashboard/feeRates/traderRates/TraderRatesList.js","components/administrators/dashboard/feeRates/FeeRates.js","components/administrators/dashboard/feeRates/traderRates/TraderRates.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBillListItem.js","containers/payProof/PayProofContainer.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/PayProofDialog.js","containers/payDetails/PayDetailsContainer.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/PayDetailsDialog.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBillsList.js","components/administrators/dashboard/financialAccounts/bills/driversBills/PayProofDialog.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBills.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBillListItem.js","components/administrators/dashboard/financialAccounts/bills/driversBills/PayDetailsDialog.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBillsList.js","components/administrators/dashboard/financialAccounts/bills/Bills.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBills.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/TraderAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/TraderAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/DriverAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/DriverAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/ResponsibleAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/UserAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/ResponsibleAccountStatements.js","components/administrators/dashboard/financialAccounts/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/financialAccounts.js","containers/404/404.js","components/administrators/dashboard/AdministratorsDashboard.js","components/forgotPassword/ForgotPassword.js","components/forgotPassword/RecoverPassword.js","components/forgotPassword/PasswordRecovered.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js"],"names":["module","exports","ApplicationName","Dashboard","Logout","Register","Login","CoreInfinite","Landing_Welcome","Landing_WelcomeSubtitle","Landing_WelcomeDetails1","Landing_WelcomeDetails2","Landing_Privacy","Landing_PrivacySubtitle","Landing_PrivacyDetails1","Landing_PrivacyDetails2","Landing_UserAccounts","Landing_UserAccountsSubtitle","Landing_UserAccountsDetails","Landing_Signup","Landing_Login","Landing_Location","Landing_City","Landing_State","Landing_AroundTheGlobe","Landing_ContactUs","Landing_ContactUsDetails","Login_SignIn","Login_EmailOrUsername","Login_Password","Login_SignInAs","Login_Driver","Login_Trader","Login_Broker","Login_TCResponsible","Login_Administrator","Login_NoAccount","Login_RegisterNow","Register_SignUp","Register_Username","Register_Email","Register_Password","Register_ConfirmPassword","Register_RegisterAs","Register_Driver","Register_Trader","Register_Broker","Register_TCResponsible","Register_Administrator","Register_AgreeWithOur","Register_TermsAndConditions","Register_HaveAnAccount","Register_SignInNow","Register_Next","Register_TermsOfUse","Register_TermsAndConditionsDetails","Register_OK","Register_EmailError","Register_PasswordError","Register_ConfirmPasswordError","Register_EmailUsernameError","Register_TermsError","EmailConfirmation_EmailConfirmation","EmailConfirmation_EmailConfirmationSubtitle","EmailConfirmation_ConfirmationCode","EmailConfirmation_Next","EmailConfirmation_ConfirmationCodeError1","EmailConfirmation_ConfirmationCodeError2","APP_NAME","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD","USERNAME_OR_EMAIL_TAKEN","NAQEL_SERVER","IMAGE_UPLOADER","STRIPE_PUBLISHABLE_KEY","STRIPE_SECRET_KEY","GOOGLE_API_KEY","SAUDI_RIYAL","SANDBOX_API_KEY","Dictionary","LanugageDispatcher","SetLanguage","language","sessionStorage","setItem","GetLanguage","Language","Arabic","Urdu","English","Header","props","logOut","event","preventDefault","Token","removeItem","history","push","state","DriverLoggedIn","ShowDashboardButton","bind","LanguageDispatcher","loginRegisterLinks","className","to","onClick","setState","userLinks","this","type","data-toggle","data-target","NaqelAdministrators","id","Component","withRouter","LangugageDispatcher","Landing","dir","class","style","width","backgroundColor","alt","src","data-source-index","maxWidth","color","AdminAccounts","SignupAndOrLogin","AdminAccountsDetails","LLanguage","registerAdministrator","newCredentials","a","async","axios","post","Strings","Username","PhoneNumber","Password","RegisterAs","then","response","data","setupAdministratorAccount","newAdministrator","Email","FirstName","LastName","AdministratorSecret","loginAdministrator","administrator","console","log","PhoneNumberOrUsername","SignInAs","recoverPassword","recoverPasswordPackage","getData","request","Get","get","params","Params","headers","Authorization","uploadProfilePhoto","profilePhoto","PhotoURL","generalSettings","updatedAdministrator","validateUsername","username","validateEmail","email","validatePhoneNumber","phoneNumber","usernameAndEmailSettings","validatePassword","passwordPackage","passwordSettings","updateNaqelSettings","updatedNaqelSettings","Street","City","Country","ZIPCode","Website","BusinessName","BankName","AccountNumber","updateAdminSecret","updatedAdminSecret","AdminSecret","activateDriverAccount","activatedDriver","DriverID","blockDriverAccount","blockedDriver","BlockDate","Reason","unblockDriverAccount","unblockedDriver","setRefundRate","traderRefundRate","TraderID","RefundRate","exonerateTrader","exoneratedTrader","ExonerateDate","chargeTrader","chargedTrader","addTraderObjectionReason","newTraderObjectionReason","deleteTraderObjectionReason","discardedTraderObjectionReason","delete","DriverObjectionReasonID","verifyTraderObjectionReason","verifiedTraderObjectionReason","addDriverObjectionReason","newDriverObjectionReason","deleteDriverObjectionReason","discardedDriverObjectionReason","verifyDriverObjectionReason","verifiedDriverObjectionReason","discardObjectionableJob","discardedObjectionableJob","OnGoingJobID","addDriverAnswer","driverAnswer","DriverQuestionID","Answer","addDriverQuestionClass","newDriverQuestionClass","Class","classifyDriverQuestion","classifiedDriverQuestion","addTraderAnswer","traderAnswer","TraderQuestionID","addTraderQuestionClass","newTraderQuestionClass","classifyTraderQuestion","classifiedTraderQuestion","addResponsibleAnswer","responsibleAnswer","ResponsibleQuestionID","addResponsibleQuestionClass","newResponsibleQuestionClass","classifyResponsibleQuestion","classifiedResponsibleQuestion","setGlobalFeeRate","feeRate","FeeRate","setTemporaryFeeRate","temporaryFeeRateDate","Date","clearTemporaryFeeRate","clearedtemporaryFeeRate","addPriceRange","newPriceRange","StartRange","EndRange","updatePriceRange","updatedPriceRange","PriceRangeID","deletePriceRange","discardedPriceRange","addTraderRate","newTraderRate","updateTraderRate","updatedTraderRate","TraderRateID","deleteTraderRate","discardedTraderRate","approveDriverPayProof","approvedDriverPayProof","DriverPayProofID","addWaitingTime","newWaitingTime","WaitingTime","deleteWaitingTime","discardedWaitingTime","WaitingTimeID","addTruckSize","newTruckSize","TruckSize","deleteTruckSize","discardedTruckSize","TruckSizeID","addTruckType","newTruckType","TruckType","deleteTruckType","discardedTruckType","TruckTypeID","addPermitType","newPermitType","PermitType","deletePermitType","discardedPermitType","PermitTypeID","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","height","Preloader","textAlign","LoginCardBack","RegisterCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","onChange","name","target","value","validateField","onSubmit","ValidForm","user","Message","LoggedInAsAdministrator","LoginError","ValidPhoneNumberOrUsername","ValidPassword","Errors","jwt_decode","AdministratorID","field","PhoneNumberOrUsernameError","PasswordError","GetDirection","SignIn","noValidate","htmlFor","autocomplete","placeholder","ForgotPassword","NoAccount","RegisterNow","disabled","Driver","Trader","Broker","TCResponsible","Administrator","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","PhoneConfirmationDialog","Code","ShowPreloader","ConfirmationResult","OnOK","confirm","result","ValidCode","cancelButton","click","catch","error","CodeError","tabIndex","role","aria-labelledby","aria-hidden","minWidth","data-dismiss","ref","CodeConfirmation","CodeConfirmationSubtitle","autoComplete","Verify","e","handleResponse","Form","PhoneCodeVerified","newUser","appVerifier","window","recaptchaVerifier","FirebaseApp","auth","languageCode","signInWithPhoneNumber","confirmationResult","SendCodeButton","message","ConfirmPassword","PasswordsMatched","UsernameOrEmailTaken","ValidPhoneNumber","ValidUsername","Agreed","RecaptchaVerifier","UsernameError1","match","UsernameError2","PhoneNumberError1","PhoneNumberError2","PasswordError1","length","PasswordError2","ConfirmPasswordError","refs","agreementCheckBox","checked","SignUp","required","AgreeWithOur","TermsAndConditions","HaveAnAccount","SignInNow","Next","tabindex","TermsOfUse","TermsAndConditionsDetails","OK","sendCodeButton","phoneCodeVerified","EmailUsernameError","TermsError","getPublicData","SetupAdministratorAccount","NewUserToken","errors","ValidEmail","ValidFirstName","ValidLastName","ValidAdministratorSecret","EmailError","FirstNameError1","FirstNameError2","LastNameError1","LastNameError2","SecretCodeError","atl","CreateAccount","CreateAccountSubtitle","SecretCode","Create","EmailConfirmation","IsCreatedSuccessfully","Congratulations","CongratulationsSubtitle","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","onUploadProgress","UploadProgress","imageUrl","OnProfilePhotoUpdated","fileInput","href","border","GeneralSettings","OldPhoneNumber","OldPhoneCodeVerified","VerificationFor","OnSettingsSaved","SettingsSaved","SaveChanges","Undone","Save","NewPhoneNumber","PhoneNumberError","FirstNameError","LastNameError","UsernameAndEmailSettings","NewUsername","NewEmail","ValidNewUsername","ValidNewEmail","EmailError1","EmailError2","UsernameAndEmail","PasswordSettings","CurrentPassword","NewPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","CurrentPasswordError","NewPasswordError","ChangePassword","NaqelSettings","ValidStreet","ValidCity","ValidCountry","ValidZIPCode","ValidWebsite","ValidBusinessName","ValidBankName","ValidAccountNumber","naqelSettings","StreetError","CityError","CountryError","ZIPCodeError","WebsiteError","BusinessNameError","BankNameError","AccountNumberError","AdminSecretSettings","ValidAdminSecret","AdminSecretError","Settings","SettingsSavedButton","settingsSavedButton","SettingsSavedSuccessfully","Profile","componentDidMount","ProgressBar","SearchingContainer","searching","Searching","searchingFor","SearchingFor","NotFound","ProgressRing","Rating","Size","Color","Label","DrivingLicenceContainer","drivingLicence","DrivingLicence","borderTop","overflow","DrivingLicenceSubtitle","LicenceNumber","LicenceType","Type","ReleaseDate","toDateString","ExpiryDate","EntryExitCardContainer","entryExitCard","EntryExitCard","EntryExitCardSubtitle","EntryExitNumber","CardType","NumberOfMonths","IdentityCardContainer","identityCard","IdentityCard","IdentityCardSubtitle","IDNumber","DocumentsDialog","onComponentUpdated","DriverDocuments","driverDocuments","DialogID","Documents","DriverContainer","DriverProfile","refresh","Refresh","driverProfile","driver","ratingAndReviews","RatingAndReviews","onJob","OnJob","dialogID","UUID","substring","toUpperCase","Reviews","NoReviews","Active","Gender","Birthday","DateOfBirth","Nationality","TabView","replace","ChatOnWhatsApp","TrailerContainer","index","Index","trailer","Trailer","MaximumWeight","TrailerType","TrailersDialog","trailers","Trailers","map","key","TruckContainer","OnTrailersFound","TruckProfile","Truck","truckProfile","truck","Brand","Model","PlateNumber","Owner","ProductionYear","TruckModel","BlockAccountDialog","open","ValidBlockDate","ValidReason","BlockDateError1","getTime","BlockDateError2","ReasonError","BlockDriver","YouAreGoingToBlock","BlockTill","rows","BlockNow","UnblockAccountDialog","onUnblock","UnblockDriver","AreYouSure","Unblock","DriverListItem","onActivateAccount","Refreshing","OnAccountActivated","RefreshDriverContainer","IsBlocked","Blocked","Activate","Block","aria-expanded","Details","aria-controls","RefreshTruckContainer","Activatemessage","OnAccountBlocked","DriversList","AllDrivers","Drivers","onSearch","searchString","SearchString","allDrivers","filteredDrivers","count","includes","backgroundImage","backgroundSize","NaqelDrivers","paddingLeft","paddingRight","SearchDriver","drivers","driverItem","isBlocked","CommercialRegisterCertificateContainer","commercialRegisterCertificate","CommercialRegisterCertificate","CertificateNumber","Number","CertificateType","TraderDocuments","traderDocuments","TraderContainer","TraderProfile","trader","SetRefundRateDialog","TraderRefundRate","ValidRefundRate","RefundRateError1","RefundRateError2","ThisSets","RefundRateField","Set","ChargeTraderDialog","onCharge","ChargeTrader","OnCharging","Charge","ExonerateTraderDialog","ValidExonerateDate","ExonerateDateError1","ExonerateDateError2","ExonerateTrader","YouAreGoing","ExonerateTill","ExonerateNow","TraderListItem","NotSet","SetRefundRate","IsExonerated","Exonerate","RefreshTraderContainer","refundRate","OnRefundRateSet","OnTraderExonerated","TradersList","AllTraders","Traders","allTraders","filteredTraders","TradersAndBrokers","NaqelTradersandBrokers","Search","traders","traderItem","isExonerated","AddObjectionReasonDialog","AddNewReason","Add","ObjectionReasonListItem","onDelete","ShowProgressRing","ObjectionReason","OnObjectionReasonUpdated","onVerify","Delete","DeleteMessage","VerifyMessage","ObjectionReasonsList","AllObjectionReasons","ObjectionReasons","allObjectionReasons","filteredObjectionReasons","objectionReason","TraderObjectionReasons","AddNew","Verified","DriverObjectionReasons","JobContainer","onGoingJob","OnGoingJob","loadingDate","LoadingDate","setHours","parseInt","LoadingTime","setMinutes","setSeconds","JobDetails","LoadingPlace","UnloadingPlace","TripType","AcceptedDelay","CargoType","CargoWeight","toTimeString","EntryExit","StartedOn","Created","StartedAt","JobNumber","JobObjectionContainer","JobObjection","createdOn","objectionBy","ObjectionBy","PostedOn","Objection","Comment","Objections","OnObjectionsFound","JobObjections","jobObjection","DiscardObjectionableJobDialog","onDiscard","DiscardJob","DiscardJobDetails","Discard","ObjectionableJobListItem","NumberOfObjections","ObjectionableJob","numberOfObjections","OnJobDiscarded","ObjectionableJobsList","AllObjectionableJobs","ObjectionableJobs","allObjectionableJobs","filteredObjectionableJobs","objectionableJob","SearchByJobNumber","WaitingTimeRow","OnWaitingTimeDeleted","Hours","AddWaitingTimeDialog","ValidWaitingTime","WaitingTimeError1","WaitingTimeError2","AddNewWaitingTime","WaitingTimesTable","WaitingTimes","JobWaitingTimes","waitingTime","Jobs","TruckSizeRow","OnTruckSizeDeleted","ShowDeleteButton","AddTruckSizeDialog","ValidTruckSize","TruckSizeError1","TruckSizeError2","AddNewTruckSize","TruckSizesTable","TruckSizes","truckSize","TruckTypeRow","OnTruckTypeDeleted","AddTruckTypeDialog","ValidTruckType","TruckTypeError","TruckTypesTable","TruckTypes","truckType","Trucks","PermitTypeRow","OnPermitTypeDeleted","AddPermitTypeDialog","ValidPermitType","PermitTypeError","AddNewPermitType","PermitTypeError1","PermitTypesTable","PermitTypes","permitType","DriverQuestionContainer","Question","askedOn","askedBy","AskedBy","DriverAnswer","answeredOn","answeredBy","AnsweredBy","QuestionID","QuestionNumber","At","toLocaleTimeString","Edited","AnswerDetails","AnswerDriverQuestionDialog","ValidAnswer","AnswerError","AnswerQuestion","Share","DriverQuestionClasses","QuestionClasses","NewClass","questionClasses","QuestionClass","NoError","AddPressed","ValidNewClass","NewClassError","AddAClass","questionClass","OnClassSelected","Select","ClassifyDriverQuestionDialog","onClassSelected","ClassifyTheQuestion","CurrentClass","DriverQuestionListItem","Classify","UpdateAnswer","OnQuestionUpdated","DriverQuestionsList","AllQuestions","Questions","allQuestions","filteredQuestions","question","DriversQuestions","SearchAQuestion","DriverQuestions","TraderQuestionContainer","TraderAnswer","AnswerTraderQuestionDialog","TraderQuestionClasses","ClassifyTraderQuestionDialog","TraderQuestionListItem","TraderQuestionsList","TradersQuestions","TraderQuestions","ResponsibleQuestionContainer","ResponsibleAnswer","Name","AnswerResponsibleQuestionDialog","ResponsibleQuestionClasses","ClassifyResponsibleQuestionDialog","ResponsibleQuestionListItem","ResponsibleQuestionsList","ResponsiblesQuestions","ResponsibleQuestions","TCResponsiblesQuestions","SetGlobalFeeRateDialog","ValidFeeRate","FeeRateError1","FeeRateError2","SetGlobalFeeRate","GlobalFeeRate","SetTemporaryFeeRateDialog","temporaryFeeRateData","ValidDate","DateError1","DateError2","SetTemporaryFeeRate","TemporaryFeeRate","DateUpTo","ClearTemporaryFeeRateDialog","onClear","clearedTemporaryFeeRate","ClearFeeRate","ClearFeeRateDetails","Clear","GlobalAndTemporaryRates","TemporaryFeeRateData","dateUpTo","UpTo","UpdatePriceRangeDialog","UpdateFeeRate","PriceRangeListItem","PriceRange","OnPriceRangeDeleted","parseFloat","toFixed","EditFeeRate","OnPriceRangeUpdated","AddPriceRangeDialog","ValidStartRange","ValidEndRange","StartingPriceError1","StartingPriceError2","EndingPriceError2","EndingPriceError1","AddPriceRange","StartingPrice","min","EndingPrice","PriceRangesList","PriceRanges","AddNewRange","priceRange","priceRanges","priceRangeItem","GeneralRates","UpdateTraderRateDialog","TraderRateListItem","TraderRate","OnTraderRateDeleted","OnTraderRateUpdated","AddTraderRateDialog","AddTraderRate","TradersUsername","TraderRatesList","AllTraderRates","TraderRates","allTraderRates","filteredTraderRates","traderRate","TraderFeeRates","traderRates","FeeRates","TraderOrBroker","traderRateItem","PayProofContainer","payProof","PayProof","Approved","PayProofDialog","PayDetailsContainer","PayDetails","OwnerName","OwnerEmail","PayDetailsDialog","TradersBillListItem","Bill","BillNumber","Paid","Amount","TraderPayProof","TraderPayDetails","TradersBillsList","AllBills","Bills","allBills","filteredBills","bill","TradersBills","Payee","GeneratedOn","onApprove","Approve","DriversBillListItem","DriverPayProof","DriverPayDetails","OnPayProofApproved","DriversBillsList","DriversBills","bills","billItem","RowData","toLocaleDateString","PaymentMethod","RecipientAmount","ChargedAmount","AccountStatementData","AccountStatement","NoBillingDetails","fontWeight","Naqel","Address","PayMethod","RecipientCharges","NaqelCharges","Total","TotalRecipientAmount","TotalChargedAmount","TotalAmount","OnSearch","NoAccountStatementFound","trigger","Print","content","TraderAccountStatement","traderAccountStatement","TraderAccountStatementBrowser","SearchAccountStatement","TraderAccountStatements","SearchUsername","AmountEarned","AmountCharged","Earned","NetEarning","NetAmount","DriverAccountStatement","driverAccountStatement","DriverAccountStatementBrowser","DriverAccountStatements","Transaction","TruckNumber","TraderBillNumber","TraderBillPaid","TraderPaymentMethod","DriverBillNumber","DriverBillPaid","DriverPaymentMethod","Charged","transportCompany","TransportCompany","netAmount","netEarned","netCharged","Transactions","transaction","TransportComapanyDetails","CompanyName","InternalNumber","CommercialRegisterNumber","NoTransactionFound","TradePayMethod","DriverPayMethod","ResponsibleAccountStatement","responsibleAccountStatement","ResponsibleAccountStatementBrowser","TCResponsibleAccountStatements","ResponsibleAccountStatements","UserAccountStatements","TCResponsibleAccountStatement","PayeeType","NoTransactionsFound","ZIPs","ZIP","NaqelAccountStatement","NoAccountStatement","accountStatement","FinancialAccounts","PageNotFoundContainer","BlockedUser","PageNotFound","AdministratorsDashboard","Left","Permits","forgotPasswordPackage","JSON","stringify","FormError","RegisteredAs","RecoverPassword","ForgotPasswordPackage","parse","ForgotPasswordPackageToken","Submit","PasswordRecovered","BackToTop","left","bottom","LinkStyle","textDecoration","cursor","Footer","getFullYear","location","reload","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.497e1c16.chunk.js","sourcesContent":["module.exports = {\r\n    // Header\r\n    ApplicationName: \"NAQEL\",\r\n    Dashboard: \"Dashboard\",\r\n    Logout: \"Logout\",\r\n    Register: \"Register\",\r\n    Login: \"Login\",\r\n\r\n    // Footer\r\n    CoreInfinite: \"Core Infinite\",\r\n\r\n    // Landing Page\r\n    Landing_Welcome: \"Welcome to Naqel\",\r\n    Landing_WelcomeSubtitle: \"Transport Services On-The-Go\",\r\n    Landing_WelcomeDetails1: \"Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.\",\r\n    Landing_WelcomeDetails2: \"Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.\",\r\n    Landing_Privacy: \"Privacy\",\r\n    Landing_PrivacySubtitle: \"Your Privacy is Important to Us\",\r\n    Landing_PrivacyDetails1: \"Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.\",\r\n    Landing_PrivacyDetails2: \"Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.\",\r\n    Landing_UserAccounts: \"User Accounts\",\r\n    Landing_UserAccountsSubtitle: \"Signup and/or Login\",\r\n    Landing_UserAccountsDetails: \"Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.\",\r\n    Landing_Signup: \"Signup\",\r\n    Landing_Login: \"Login\",\r\n    Landing_Location: \"LOCATION\",\r\n    Landing_City: \"Wah\",\r\n    Landing_State: \"Punjab, Pakistan\",\r\n    Landing_AroundTheGlobe: \"AROUND THE GLOBE\",\r\n    Landing_ContactUs: \"CONTACT US\",\r\n    Landing_ContactUsDetails: \"Naqel is created by Core Infinite. For more information, visit\",\r\n\r\n    // Login\r\n    Login_SignIn: \"Sign In\",\r\n    Login_EmailOrUsername: \"Email or Username\",\r\n    Login_Password: \"Password\",\r\n    Login_SignInAs: \"Sign In As\",\r\n    Login_Driver: \"Driver\",\r\n    Login_Trader: \"Trader\",\r\n    Login_Broker: \"Broker\",\r\n    Login_TCResponsible: \"TC Responsible\",\r\n    Login_Administrator: \"Administrator\",\r\n    Login_NoAccount: \"No account?\",\r\n    Login_RegisterNow: \"Register now\",\r\n\r\n    // Register\r\n    Register_SignUp: \"Sign Up\",\r\n    Register_Username: \"Username\",\r\n    Register_Email: \"Email\",\r\n    Register_Password: \"Password\",\r\n    Register_ConfirmPassword: \"Confirm Password\",\r\n    Register_RegisterAs: \"Register As\",\r\n    Register_Driver: \"Driver\",\r\n    Register_Trader: \"Trader\",\r\n    Register_Broker: \"Broker\",\r\n    Register_TCResponsible: \"TC Responsible\",\r\n    Register_Administrator: \"Administrator\",\r\n    Register_AgreeWithOur: \"Agree with our\",\r\n    Register_TermsAndConditions: \"Terms and Conditions\",\r\n    Register_HaveAnAccount: \"Have an account?\",\r\n    Register_SignInNow: \"Sign In Now!\", \r\n    Register_Next: \"Next\",\r\n    Register_TermsOfUse: \"Terms of Use\",\r\n    Register_TermsAndConditionsDetails: \"Your privacy is important to us. Naqel's Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel’s collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\",\r\n    Register_OK: \"OK\",\r\n    Register_EmailError: \"Email is invalid.\",\r\n    Register_PasswordError: \"Password is too short.\",\r\n    Register_ConfirmPasswordError: \"Passwords did not match.\",\r\n    Register_EmailUsernameError: \"Username or email is already taken.\",\r\n    Register_TermsError: \"You must agree to our terms and conditions.\",\r\n\r\n    // Email Confirmation\r\n    EmailConfirmation_EmailConfirmation: \"Email Confirmation\",\r\n    EmailConfirmation_EmailConfirmationSubtitle: \"We delivered a confirmation code to your email.\",\r\n    EmailConfirmation_ConfirmationCode: \"Confirmation Code\",\r\n    EmailConfirmation_Next: \"Next\",\r\n    EmailConfirmation_ConfirmationCodeError1: \"Confirmation code is required.\",\r\n    EmailConfirmation_ConfirmationCodeError2: \"Invalid code.\",\r\n};","module.exports = {\r\n    // Header\r\n    ApplicationName: \"نا قل\",\r\n    Dashboard: \"ڈیش بورڈ\",\r\n    Logout: \"لاگ آوٹ\",\r\n    Register: \"رجسٹر کریں\",\r\n    Login: \"لاگ ان کریں\",\r\n\r\n    // Footer\r\n    CoreInfinite: \"کور انفائنیٹ\",\r\n\r\n    // Landing Page\r\n    Landing_Welcome: \"نا قل میں خوش آمدید\",\r\n    Landing_WelcomeSubtitle: \"آمدورفت خدمات\",\r\n    Landing_WelcomeDetails1: \"نا قل میں خوش آمدید! اگر آپ ایک تاجر یا دلال ہیں ، اور آپ قریبی ڈرائیوروں کے لئے ملازمت کے مواقع شائع کرنا چاہتے ہیں تو ، ٹھیک ہے ، آپ صحیح جگہ پر ہیں۔ نقیل تاجروں ، دلالوں اور ڈرائیوروں کے درمیان ثالث ہے ، اور نقل و حمل کی خدمات حاصل کرنے کا بدیہی اور محفوظ طریقہ فراہم کرتا ہے۔\",\r\n    Landing_WelcomeDetails2: \"تاجر یا دلال نہیں۔ کوئی فکر نہیں! نا قل ڈرائیوروں کے لئے بھی خدمات مہیا کرتی ہے۔ اگر آپ ڈرائیور ہیں ، اور آپ ملازمت کے مواقع تلاش کررہے ہیں تو ، آپ صرف ایک قدم دور ہیں۔ ہماری ویب سروس پر اپنا اکاؤنٹ بنائیں ، اور ہم آپ کو اپنے ذاتی اکاؤنٹ میں ملازمت کے مواقع سے آگاہ کریں گے۔\",\r\n    Landing_Privacy: \"رازداری\",\r\n    Landing_PrivacySubtitle: \"آپ کی رازداری ہمارے لئے اہم ہے\",\r\n    Landing_PrivacyDetails1: \"نا قل کا رازداری کا بیان بیان کرتا ہے کہ ہم آپ سے کس طرح کے ڈیٹا اکٹھا کرتے ہیں ، ہم آپ کے ڈیٹا کو کیسے استعمال کرتے ہیں ، اور ہمیں آپ کے ڈیٹا پر کارروائی کرنے کے لئے قانونی اڈوں کی وضاحت کی ہے۔ رازداری کا بیان یہ بھی بیان کرتا ہے کہ نقیل آپ کے مواد کو کس طرح استعمال کرتا ہے ، جو آپ کی خدمات کے ذریعہ نقیل کو پیش کردہ معلومات ہے۔\",\r\n    Landing_PrivacyDetails2: \"جہاں پروسیسنگ رضامندی اور قانون کی اجازت کی حد تک ہوتی ہے ، ان شرائط سے اتفاق کرتے ہوئے ، آپ نیکل کے ذخیرہ کرنے ، استعمال اور ان کے انکشاف پر رضامندی ظاہر کرتے ہیں جیسے رازداری کے بیان میں بیان کیا گیا ہے۔\",\r\n    Landing_UserAccounts: \"صارف اکاؤنٹس\",\r\n    Landing_UserAccountsSubtitle: \"سائن اپ اور / یا لاگ ان\",\r\n    Landing_UserAccountsDetails: \"کیا آپ ابھی ہماری خدمات استعمال کرنا چاہتے ہیں؟ کوئی فکر نہیں! محض عین مطابق فارموں کو پُر کرکے اور / یا اپنے پروفائل میں لاگ ان کرکے سائن اپ کریں۔ ڈرائیور اپنے ڈیش بورڈ پر نوکری کی مخالفت دیکھ سکتے ہیں۔ تاجر اور / یا بروکر اپنے اکاؤنٹ سے مال کی ڑلائ کے لئے ملازمت کی درخواستیں پوسٹ کرسکتے ہیں۔\",\r\n    Landing_Signup: \"سائن اپ\",\r\n    Landing_Login: \"لاگ ان کریں\",\r\n    Landing_Location: \"مقام\",\r\n    Landing_City: \"واہ\",\r\n    Landing_State: \"پنجاب ، پاکستان\",\r\n    Landing_AroundTheGlobe: \"دنیا بھر میں\",\r\n    Landing_ContactUs: \"ہم سے رابطہ کریں\",\r\n    Landing_ContactUsDetails: \"نقیل کور لامحدود نے تخلیق کیا ہے۔ مزید معلومات کے لئے ، اس ملاحظہ کریں.\",\r\n\r\n    // Login\r\n    Login_SignIn: \"سائن ان\",\r\n    Login_EmailOrUsername: \"ای میل یا اسم صارف\",\r\n    Login_Password: \"پاس ورڈ\",\r\n    Login_SignInAs: \"کے طور پر سائن ان کریں\",\r\n    Login_Driver: \"ڈرائیور\",\r\n    Login_Trader: \"تاجر\",\r\n    Login_Broker: \"دلال\",\r\n    Login_TCResponsible: \"ٹی سی ذمہ دار\",\r\n    Login_Administrator: \"ایڈمنسٹریٹر\",\r\n    Login_NoAccount: \"کوئی اکاؤنٹ نہیں ہے؟\",\r\n    Login_RegisterNow: \"ابھی رجسٹر کریں\",\r\n\r\n    // Register\r\n    Register_SignUp: \"سائن اپ\",\r\n    Register_Username: \"صارف نام\",\r\n    Register_Email: \"ای میل\",\r\n    Register_Password: \"پاس ورڈ\",\r\n    Register_ConfirmPassword: \"پاس ورڈ کی تصدیق کریں\",\r\n    Register_RegisterAs: \"کے طور پر رجسٹر\",\r\n    Register_Driver: \"ڈرائیور\",\r\n    Register_Trader: \"تاجر\",\r\n    Register_Broker: \"دلال\",\r\n    Register_TCResponsible: \"ٹی سی ذمہ دار\",\r\n    Register_Administrator: \"ایڈمنسٹریٹر\",\r\n    Register_AgreeWithOur: \"ہمارے ساتھ متفق ہوں\",\r\n    Register_TermsAndConditions: \"شرائط و ضوابط\",\r\n    Register_HaveAnAccount: \"کیا آپ کا اکاؤنٹ ہے؟\",\r\n    Register_SignInNow: \"ابھی سائن ان کریں!\",\r\n    Register_Next: \"اگلا قدم\",\r\n    Register_TermsOfUse: \"استعمال کی شرائط\",\r\n    Register_TermsAndConditionsDetails: \"آپ کی رازداری ہمارے لئے اہم ہے۔ نیکل کے رازداری کا بیان بیان کرتا ہے کہ ہم آپ سے کس طرح کے ڈیٹا اکٹھا کرتے ہیں ، ہم آپ کے ڈیٹا کو کیسے استعمال کرتے ہیں ، اور ہمیں آپ کے ڈیٹا پر کارروائی کرنے کے لئے قانونی اڈوں کی وضاحت کی ہے۔ رازداری کا بیان یہ بھی بیان کرتا ہے کہ نقیل آپ کے مواد کو کس طرح استعمال کرتا ہے ، جو آپ کی خدمات کے ذریعہ نقیل کو پیش کردہ معلومات ہے۔ جہاں پروسیسنگ رضامندی اور قانون کی اجازت کی حد تک ہوتی ہے ، ان شرائط سے اتفاق کرتے ہوئے ، آپ رازداری کے بیان میں بیان کردہ جزو کے مطابق ، اپنے مواد اور اعداد و شمار کو نیکیل کے جمع کرنے ، استعمال اور انکشاف سے اتفاق کرتے ہیں۔ کچھ معاملات میں ، ہم علیحدہ نوٹس فراہم کریں گے اور رازداری کے بیان میں جیسا حوالہ دیا گیا ہے آپ کی رضامندی کی درخواست کریں گے۔آپ کی رازداری ہمارے لئے اہم ہے۔ نیکل کے رازداری کا بیان بیان کرتا ہے کہ ہم آپ سے کس طرح کے ڈیٹا اکٹھا کرتے ہیں ، ہم آپ کے ڈیٹا کو کیسے استعمال کرتے ہیں ، اور ہمیں آپ کے ڈیٹا پر کارروائی کرنے کے لئے قانونی اڈوں کی وضاحت کی ہے۔ رازداری کا بیان یہ بھی بیان کرتا ہے کہ نقیل آپ کے مواد کو کس طرح استعمال کرتا ہے ، جو آپ کی خدمات کے ذریعہ نقیل کو پیش کردہ معلومات ہے۔ جہاں پروسیسنگ رضامندی اور قانون کی اجازت کی حد تک ہوتی ہے ، ان شرائط سے اتفاق کرتے ہوئے ، آپ رازداری کے بیان میں بیان کردہ جزو کے مطابق ، اپنے مواد اور اعداد و شمار کو نیکیل کے جمع کرنے ، استعمال اور انکشاف سے اتفاق کرتے ہیں۔ کچھ معاملات میں ، ہم علیحدہ نوٹس فراہم کریں گے اور رازداری کے بیان میں جیسا حوالہ دیا گیا ہے آپ کی رضامندی کی درخواست کریں گے۔\",\r\n    Register_OK: \"ٹھیک ہے\",\r\n    Register_EmailError: \"ای میل غلط ہے.\",\r\n    Register_PasswordError: \"پاس ورڈ بہت چھوٹا ہے۔\",\r\n    Register_ConfirmPasswordError: \"پاس ورڈ مماثل نہیں ہیں۔\",\r\n    Register_EmailUsernameError: \"صارف نام یا ای میل پہلے ہی لی گئی ہے۔\",\r\n    Register_TermsError: \"آپ کو ہماری شرائط و ضوابط سے اتفاق کرنا چاہئے۔\",\r\n\r\n    // Email Confirmation\r\n    EmailConfirmation_EmailConfirmation: \"ای میل کی تصدیق\",\r\n    EmailConfirmation_EmailConfirmationSubtitle: \"ہم نے آپ کے ای میل پر ایک تصدیقی کوڈ پہنچایا۔\",\r\n    EmailConfirmation_ConfirmationCode: \"تصدیقی کوڈ\",\r\n    EmailConfirmation_Next: \"اگلا قدم\",\r\n    EmailConfirmation_ConfirmationCodeError1: \"تصدیقی کوڈ درکار ہے۔\",\r\n    EmailConfirmation_ConfirmationCodeError2: \"غلط کوڈ\",\r\n};","module.exports = {\r\n    // Header\r\n    ApplicationName: \"نا قل\",\r\n    Dashboard: \"لوحة القيادة\",\r\n    Logout: \"تسجيل خروج\",\r\n    Register: \"تسجيل\",\r\n    Login: \"تسجيل الدخول\",\r\n\r\n    // Footer\r\n    CoreInfinite: \"کور انفائنیٹ\",\r\n\r\n    // Landing Page\r\n    Landing_Welcome: \"مرحبا بكم في نقل\",\r\n    Landing_WelcomeSubtitle: \"خدمات النقل أثناء التنقل\",\r\n    Landing_WelcomeDetails1: \"مرحبا بكم في النقل! إذا كنت تاجرًا أو وسيطًا ، وتريد نشر فرص عمل للسائقين في مكان قريب ، حسنًا ، فأنت في المكان الصحيح. النقل هو وسيط بين التجار والوسطاء والسائقين ، ويوفر وسيلة سهلة وآمنة للحصول على خدمات النقل.\",\r\n    Landing_WelcomeDetails2: \"لست متداول أو وسيط؟ لا داعى للقلق! نقل تقدم خدمات للسائقين أيضا. إذا كنت سائقًا ، وتبحث عن فرص عمل ، فأنت على بعد خطوة واحدة. قم بإنشاء حسابك على خدمة الويب الخاصة بنا ، وسوف نخطرك بفرص العمل على حسابك الشخصي.\",\r\n    Landing_Privacy: \"خصوصية\",\r\n    Landing_PrivacySubtitle: \"خصوصيتك مهمة بالنسبة لنا\",\r\n    Landing_PrivacyDetails1: \"يصف بيان خصوصية النقل أنواع البيانات التي نجمعها منك ، وكيف نستخدم بياناتك ، والأسس القانونية التي يتعين علينا معالجتها لبياناتك. يصف بيان الخصوصية أيضًا كيف يستخدم النقل المحتوى الخاص بك ، وهي المعلومات التي قدمتها للنقل عبر الخدمات.\",\r\n    Landing_PrivacyDetails2: \"عندما تكون المعالجة قائمة على الموافقة وإلى الحد الذي يسمح به القانون ، بالموافقة على هذه الشروط ، فإنك توافق على جمع ونقل واستخدام والكشف عن المحتوى والبيانات الخاصة بك كما هو موضح في بيان الخصوصية.\",\r\n    Landing_UserAccounts: \"حسابات المستخدمين\",\r\n    Landing_UserAccountsSubtitle: \"الاشتراك و / أو تسجيل الدخول\",\r\n    Landing_UserAccountsDetails: \"هل تريد استخدام خدماتنا الآن؟ لا داعى للقلق! ما عليك سوى الاشتراك عن طريق ملء نماذج دقيقة و / أو تسجيل الدخول إلى ملفك الشخصي. يمكن للسائقين عرض فرص العمل على لوحات العدادات الخاصة بهم. يمكن للتجار و / أو السماسرة نشر طلبات العمل للشحن من حساباتهم.\",\r\n    Landing_Signup: \"سجل\",\r\n    Landing_Login: \"تسجيل الدخول\",\r\n    Landing_Location: \"موقعك\",\r\n    Landing_City: \"واه\",\r\n    Landing_State: \"البنجاب ، باكستان\",\r\n    Landing_AroundTheGlobe: \"حول العالم\",\r\n    Landing_ContactUs: \"اتصل بنا\",\r\n    Landing_ContactUsDetails: \"تم إنشاء النقل بواسطة Core Infinite. لمزيد من المعلومات ، قم بزيارة هذا.\",\r\n\r\n    // Login\r\n    Login_SignIn: \"تسجيل الدخول\",\r\n    Login_EmailOrUsername: \"البريد الإلكتروني أو اسم المستخدم\",\r\n    Login_Password: \"كلمه السر\",\r\n    Login_SignInAs: \"تسجيل الدخول باسم\",\r\n    Login_Driver: \"سائق\",\r\n    Login_Trader: \"التاجر\",\r\n    Login_Broker: \"وسيط\",\r\n    Login_TCResponsible: \"مسؤول التعاون الفني\",\r\n    Login_Administrator: \"مدير\",\r\n    Login_NoAccount: \"لا حساب؟\",\r\n    Login_RegisterNow: \"سجل الان\",\r\n\r\n    // Register\r\n    Register_SignUp: \"سجل\",\r\n    Register_Username: \"اسم المستخدم\",\r\n    Register_Email: \"البريد الإلكتروني\",\r\n    Register_Password: \"كلمه السر\",\r\n    Register_ConfirmPassword: \"تأكيد كلمة المرور\",\r\n    Register_RegisterAs: \"تسجيل باسم\",\r\n    Register_Driver: \"سائق\",\r\n    Register_Trader: \"التاجر\",\r\n    Register_Broker: \"وسيط\",\r\n    Register_TCResponsible: \"مسؤول التعاون الفني\",\r\n    Register_Administrator: \"مدير\",\r\n    Register_AgreeWithOur: \"نتفق مع\",\r\n    Register_TermsAndConditions: \"الأحكام والشروط\",\r\n    Register_HaveAnAccount: \"هل لديك حساب؟\",\r\n    Register_SignInNow: \"قم بتسجيل دخولك الآن!\",\r\n    Register_Next: \"التالى\",\r\n    Register_TermsOfUse: \"تعليمات الاستخدام\",\r\n    Register_TermsAndConditionsDetails: \"خصوصيتك مهمة بالنسبة لنا. يصف بيان خصوصية النقل أنواع البيانات التي نجمعها منك ، وكيفية استخدامنا لبياناتك ، والأسس القانونية التي يتعين علينا معالجتها لبياناتك. يصف بيان الخصوصية أيضًا كيف يستخدم النقل المحتوى الخاص بك ، وهي المعلومات التي قدمتها للنقل عبر الخدمات. عندما تستند المعالجة إلى الموافقة وإلى الحد الذي يسمح به القانون ، بالموافقة على هذه الشروط ، فإنك توافق على جمع ونقل واستخدام والكشف عن المحتوى والبيانات الخاصة بك كما هو موضح في بيان الخصوصية. في بعض الحالات ، سنقدم إشعارًا منفصلاً ونطلب موافقتك على النحو المشار إليه في بيان الخصوصية.\",\r\n    Register_OK: \"حسنا\",\r\n    Register_EmailError: \"البريد الإلكتروني غير صالح.\",\r\n    Register_PasswordError: \"كلمة المرور قصيرة جدا.\",\r\n    Register_ConfirmPasswordError: \"كلمتا المرور غير متطابقتين.\",\r\n    Register_EmailUsernameError: \"اسم المستخدم أو البريد الإلكتروني مأخوذ بالفعل.\",\r\n    Register_TermsError: \"يجب أن توافق على الشروط والأحكام الخاصة بنا.\",\r\n\r\n    // Email Confirmation\r\n    EmailConfirmation_EmailConfirmation: \"تأكيد البريد الإلكتروني\",\r\n    EmailConfirmation_EmailConfirmationSubtitle: \"لقد سلمنا رمز التأكيد إلى بريدك الإلكتروني.\",\r\n    EmailConfirmation_ConfirmationCode: \"تأكيد الكود\",\r\n    EmailConfirmation_Next: \"التالى\",\r\n    EmailConfirmation_ConfirmationCodeError1: \"رمز التأكيد مطلوب.\",\r\n    EmailConfirmation_ConfirmationCodeError2: \"Invalid code.\",\r\n};","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"https://naqelserver.azurewebsites.net/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\",\r\n    STRIPE_PUBLISHABLE_KEY: \"pk_test_Wjc5dIC6ytMmH3g1roSUOYcm00FaTN1yBn\",\r\n    STRIPE_SECRET_KEY: \"sk_test_RVhdSfOgg0jQHCYLYH8Z05JM00bkPnPBVg\",\r\n    GOOGLE_API_KEY: \"AIzaSyD_U_2NzdPIL7TWb8ECBHWO1eROR2yrebI\",\r\n    SAUDI_RIYAL: \"SR\",\r\n    SANDBOX_API_KEY: \"049RBmcjsZobtJu6jfqP02r1TNQBjZN8ZfUz25gr8FBBg9dXM8\"\r\n};","import React, { Component } from \"react\";\r\nimport LanguageDispatcher from \"../../res/LanguageDispatcher\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverLoggedIn: false,\r\n            ShowDashboardButton: true\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (sessionStorage.Token) {\r\n            sessionStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        const Language = LanguageDispatcher.GetLanguage();\r\n\r\n        const loginRegisterLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to=\"/register\">{Language.Register}</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            ShowDashboardButton: false\r\n                        });\r\n                    }}>{Language.Login}</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        const userLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            {this.state.ShowDashboardButton && \r\n                <li>\r\n                <Link to=\"/administrators\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            ShowDashboardButton: false\r\n                        });\r\n                    }}>{Language.Dashboard}</Link>\r\n                </li>}\r\n            <li>\r\n                <Link to=\"\" onClick={this.logOut.bind(this)}>{Language.Logout}</Link>\r\n            </li>\r\n        </ul>;\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            ShowDashboardButton: true\r\n                                        });\r\n                                    }}>{Dictionary.NaqelAdministrators}</Link>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\"></ul>\r\n                                {sessionStorage.Token ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        NaqelAdministrators: \"ناقل اداريز\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        NaqelAdministrators: \"NAQEL ADMINISTRATORS\"\r\n    };\r\n}\r\n\r\nexport default withRouter(Header);","import English from \"./English\";\r\nimport Urdu from \"./Urdu\";\r\nimport Arabic from \"./Arabic\";\r\n\r\nconst setLanguage = language => {\r\n    sessionStorage.setItem(\"Language\", language);\r\n};\r\n\r\nconst getLanguage = () => {\r\n    if (sessionStorage.Language) {\r\n        const language = sessionStorage.Language;\r\n\r\n        if (language === \"Arabic\") {\r\n            return Arabic;\r\n        }\r\n        else if (language === \"Urdu\") {\r\n            return Urdu;\r\n        }\r\n        else {\r\n            return English;\r\n        }\r\n\r\n    }\r\n    else {\r\n        return English;\r\n    }\r\n};\r\n\r\nconst LanugageDispatcher = {\r\n    SetLanguage: setLanguage,\r\n    GetLanguage: getLanguage\r\n};\r\n\r\nexport default LanugageDispatcher;","import React, { Component } from \"react\";\r\nimport LangugageDispatcher from \"../../res/LanguageDispatcher\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Language = LangugageDispatcher.GetLanguage();\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return <section dir={(!sessionStorage.Language || sessionStorage.Language === \"English\") ? \"ltr\" : \"rtl\"}>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"admin.svg\" src=\"./images/admin.svg\" data-source-index=\"2\" style={{ maxWidth: \"70%\" }} />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>{Dictionary.AdminAccounts}</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>{Dictionary.SignupAndOrLogin}</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>{Dictionary.AdminAccountsDetails}</p>\r\n                            <div class=\"btn-group\">\r\n                                <Link to=\"/register\" class=\"btn btn-secondary\">{Language.Landing_Signup}</Link>\r\n                                <Link to=\"/login\" class=\"btn btn-primary\">{Language.Landing_Login}</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        AdminAccounts: \"حسابات المشرف\",\r\n        SignupAndOrLogin: \"الاشتراك و / أو تسجيل الدخول\",\r\n        AdminAccountsDetails: \"هل انت نقل محترف؟ ما عليك سوى الاشتراك عن طريق ملء نماذج دقيقة و / أو تسجيل الدخول إلى حسابك. يمكن للمسؤولين مراقبة أنشطة السائقين والتجار والوسطاء. منحهم حق الوصول وعرض كشوف حساباتهم وفواتيرهم ، وإدارة معدلات الرسوم ، ودعم استفسارات المستخدمين ، وأكثر من ذلك بكثير ...\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AdminAccounts: \"Admin Accounts\",\r\n        SignupAndOrLogin: \"Signup and/or Login\",\r\n        AdminAccountsDetails: \"Are you Naqel professional? Just signup by filling up precise forms and/or login to your account. Admins can montior Drivers', Traders', and Brokers' activities. Grant them access, view their account statements and bills, manage fee rates, support user queries, and much more...\"\r\n    };\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginAdministrator } from \"../administrators/AdministratorFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PhoneNumberOrUsername: \"\",\r\n            Password: \"\",\r\n\r\n            ValidPhoneNumberOrUsername: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            LoggedInAsAdministrator: false,\r\n            LoginError: null,\r\n\r\n            Errors: {\r\n                PhoneNumberOrUsername: \"\",\r\n                Password: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.Token) {\r\n            let token = jwt_decode(sessionStorage.Token);\r\n\r\n            if (token.AdministratorID) {\r\n                this.setState({\r\n                    LoggedInAsAdministrator: true\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    LoggedInAsAdministrator: false\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value }, () => {\r\n            this.validateField(name, value)\r\n        });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPhoneNumberOrUsername = this.state.ValidPhoneNumberOrUsername;\r\n        let ValidPassword = this.state.ValidPassword;\r\n\r\n        switch (field) {\r\n            case \"PhoneNumberOrUsername\":\r\n                ValidPhoneNumberOrUsername = value !== \"\";\r\n                Errors.PhoneNumberOrUsername = ValidPhoneNumberOrUsername ? \"\" : Dictionary.PhoneNumberOrUsernameError;\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = (value != \"\");\r\n                Errors.Password = ValidPassword ? \"\" : Dictionary.PasswordError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPhoneNumberOrUsername: ValidPhoneNumberOrUsername,\r\n            ValidPassword: ValidPassword\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPhoneNumberOrUsername &&\r\n                    this.state.ValidPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            PhoneNumberOrUsername: this.state.PhoneNumberOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: \"Administrator\",\r\n        };\r\n\r\n        await loginAdministrator(user).then(response => {\r\n            if (response.Message === \"Login successful.\") {\r\n                sessionStorage.setItem(\"Token\", response.Token);\r\n\r\n                this.setState({\r\n                    LoggedInAsAdministrator: true,\r\n                    Preloader: null\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    LoginError: <div>\r\n                        <label className=\"control-label text-danger\">{response.Message}</label>\r\n                        <br />\r\n                    </div>,\r\n                    Preloader: null,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsAdministrator) {\r\n            return <Redirect to={\"/administrators\"} />;\r\n        }\r\n        else {\r\n            return <div dir={GetDirection()}>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/lock.svg\" alt=\"Login.png\" height=\"60\" />\r\n                            <div className=\"type-h3\" style={CardTitle}>{Dictionary.SignIn}</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"PhoneNumber\" class=\"control-label\">{Dictionary.PhoneNumberOrUsername}</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumberOrUsername\" autocomplete=\"off\" \r\n                                    placeholder=\"+966501234567 | someone\"\r\n                                    value={this.state.PhoneNumberOrUsername} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors.PhoneNumberOrUsername}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Password\" className=\"control-label\">{Dictionary.Password}</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.Password}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {this.state.LoginError}\r\n                                    <label className=\"control-label\"><Link to=\"/forgotPassword\">{Dictionary.ForgotPassword}</Link></label><br />\r\n                                    <label className=\"control-label\">{Dictionary.NoAccount} <span><Link to=\"/register\">{Dictionary.RegisterNow}</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value={Dictionary.SignIn} className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        SignIn: \"تسجيل الدخول\",\r\n        Password: \"كلمه السر\",\r\n        SignInAs: \"تسجيل الدخول باسم\",\r\n        Driver: \"سائق\",\r\n        Trader: \"التاجر\",\r\n        Broker: \"وسيط\",\r\n        TCResponsible: \"مسؤول التعاون الفني\",\r\n        Administrator: \"مدير\",\r\n        ForgotPassword: \"هل نسيت كلمة المرور؟\",\r\n        NoAccount: \"لا حساب؟\",\r\n        RegisterNow: \"سجل الان\",\r\n        PhoneNumberOrUsername: \"رقم الهاتف أو اسم المستخدم\",\r\n        PhoneNumberOrUsernameError: \".مطلوب رقم الهاتف أو اسم المستخدم\",\r\n        PasswordError: \".كلمة المرور مطلوبة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        SignIn: \"Sign In\",\r\n        Password: \"Password\",\r\n        SignInAs: \"Sign In As\",\r\n        Driver: \"Driver\",\r\n        Trader: \"Trader\",\r\n        Broker: \"Broker\",\r\n        TCResponsible: \"TC Responsible\",\r\n        Administrator: \"Administrator\",\r\n        ForgotPassword: \"Forgot Password?\",\r\n        NoAccount: \"No account?\",\r\n        RegisterNow: \"Register now\",\r\n        PhoneNumberOrUsername: \"Phone Number or Username\",\r\n        PhoneNumberOrUsernameError: \"Phone number or username is required.\",\r\n        PasswordError: \"Password is required.\",\r\n    };\r\n}\r\n\r\nexport default Login;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerAdministrator = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/register`, {\r\n        Username: newCredentials.Username,\r\n        PhoneNumber: newCredentials.PhoneNumber,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupAdministratorAccount = async newAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setupAccount`, {\r\n        Username: newAdministrator.Username,\r\n        Email: newAdministrator.Email,\r\n        Password: newAdministrator.Password,\r\n        RegisterAs: newAdministrator.RegisterAs,\r\n        Email: newAdministrator.Email,\r\n        FirstName: newAdministrator.FirstName,\r\n        LastName: newAdministrator.LastName,\r\n        AdministratorSecret: newAdministrator.AdministratorSecret\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginAdministrator = async administrator => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}administrators/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/login`, {\r\n        PhoneNumberOrUsername: administrator.PhoneNumberOrUsername,\r\n        Password: administrator.Password,\r\n        SignInAs: administrator.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// POST: RecoverPassword\r\nexport const recoverPassword = async recoverPasswordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/recoverPassword`, {\r\n        PhoneNumber: recoverPasswordPackage.PhoneNumber,\r\n        Password: recoverPasswordPackage.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}administrators/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}administrators/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: uploadProfilePhoto\r\nexport const uploadProfilePhoto = async profilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/uploadProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/uploadProfilePhoto`, {\r\n        PhotoURL: profilePhoto.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${profilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/generalSettings`, {\r\n        FirstName: updatedAdministrator.FirstName,\r\n        LastName: updatedAdministrator.LastName,\r\n        PhoneNumber: updatedAdministrator.PhoneNumber\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePhoneNumber\r\nexport const validatePhoneNumber = async phoneNumber => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validatePhoneNumber`, {\r\n        PhoneNumber: phoneNumber\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedAdministrator => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/usernameAndEmailSettings`, {\r\n        Username: updatedAdministrator.Username,\r\n        Email: updatedAdministrator.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/passwordSettings`, {\r\n        Password: updatedAdministrator.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateNaqelSettings\r\nexport const updateNaqelSettings = async updatedNaqelSettings => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updateNaqelSettings`, {\r\n        Street: updatedNaqelSettings.Street,\r\n        City: updatedNaqelSettings.City,\r\n        Country: updatedNaqelSettings.Country,\r\n        ZIPCode: updatedNaqelSettings.ZIPCode,\r\n        PhoneNumber: updatedNaqelSettings.PhoneNumber,\r\n        Website: updatedNaqelSettings.Website,\r\n        BusinessName: updatedNaqelSettings.BusinessName,\r\n        BankName: updatedNaqelSettings.BankName,\r\n        AccountNumber: updatedNaqelSettings.AccountNumber,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedNaqelSettings.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateAdminSecret\r\nexport const updateAdminSecret = async updatedAdminSecret => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updateAdminSecret`, {\r\n        AdminSecret: updatedAdminSecret.AdminSecret,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdminSecret.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ActivateDriverAccount\r\nexport const activateDriverAccount = async activatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/activateDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/activateDriverAccount`, {\r\n        DriverID: activatedDriver.DriverID\r\n    }, {\r\n        headers: { Authorization: `JWT ${activatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: BlockDriverAccount\r\nexport const blockDriverAccount = async blockedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/blockDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/blockDriverAccount`, {\r\n        DriverID: blockedDriver.DriverID,\r\n        BlockDate: blockedDriver.BlockDate,\r\n        Reason: blockedDriver.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${blockedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UnblockDriverAccount\r\nexport const unblockDriverAccount = async unblockedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/unblockDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/unblockDriverAccount`, {\r\n        DriverID: unblockedDriver.DriverID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${unblockedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetRefundRate\r\nexport const setRefundRate = async traderRefundRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setRefundRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setRefundRate`, {\r\n        TraderID: traderRefundRate.TraderID,\r\n        RefundRate: traderRefundRate.RefundRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderRefundRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ExonerateTrader\r\nexport const exonerateTrader = async exoneratedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/exonerateTrader`, {\r\n        TraderID: exoneratedTrader.TraderID,\r\n        ExonerateDate: exoneratedTrader.ExonerateDate,\r\n        Reason: exoneratedTrader.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${exoneratedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ChargeTrader\r\nexport const chargeTrader = async chargedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/chargeTrader`, {\r\n        TraderID: chargedTrader.TraderID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${chargedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderObjectionReason\r\nexport const addTraderObjectionReason = async newTraderObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderObjectionReason`, {\r\n        Reason: newTraderObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTraderObjectionReason\r\nexport const deleteTraderObjectionReason = async discardedTraderObjectionReason => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTraderObjectionReason...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTraderObjectionReason`, {\r\n        headers: { Authorization: `JWT ${discardedTraderObjectionReason.Token}` },\r\n        data: { DriverObjectionReasonID: discardedTraderObjectionReason.DriverObjectionReasonID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: verifyTraderObjectionReason\r\nexport const verifyTraderObjectionReason = async verifiedTraderObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/verifyTraderObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/verifyTraderObjectionReason`, {\r\n        DriverObjectionReasonID: verifiedTraderObjectionReason.DriverObjectionReasonID\r\n    }, {\r\n        headers: { Authorization: `JWT ${verifiedTraderObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverObjectionReason\r\nexport const addDriverObjectionReason = async newDriverObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverObjectionReason`, {\r\n        Reason: newDriverObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteDriverObjectionReason\r\nexport const deleteDriverObjectionReason = async discardedDriverObjectionReason => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteDriverObjectionReason...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteDriverObjectionReason`, {\r\n        headers: { Authorization: `JWT ${discardedDriverObjectionReason.Token}` },\r\n        data: { DriverObjectionReasonID: discardedDriverObjectionReason.DriverObjectionReasonID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: verifyDriverObjectionReason\r\nexport const verifyDriverObjectionReason = async verifiedDriverObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/verifyDriverObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/verifyDriverObjectionReason`, {\r\n        DriverObjectionReasonID: verifiedDriverObjectionReason.DriverObjectionReasonID\r\n    }, {\r\n        headers: { Authorization: `JWT ${verifiedDriverObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DiscardObjectionableJob\r\nexport const discardObjectionableJob = async discardedObjectionableJob => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/discardObjectionableJob...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/discardObjectionableJob`, {\r\n        headers: { Authorization: `JWT ${discardedObjectionableJob.Token}` },\r\n        data: { OnGoingJobID: discardedObjectionableJob.OnGoingJobID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverAnswer\r\nexport const addDriverAnswer = async driverAnswer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverAnswer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverAnswer`, {\r\n        DriverQuestionID: driverAnswer.DriverQuestionID,\r\n        Answer: driverAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverQuestionClass\r\nexport const addDriverQuestionClass = async newDriverQuestionClass => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverQuestionClass...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverQuestionClass`, {\r\n        Class: newDriverQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyDriverQuestion\r\nexport const classifyDriverQuestion = async classifiedDriverQuestion => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/classifyDriverQuestion...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyDriverQuestion`, {\r\n        DriverQuestionID: classifiedDriverQuestion.DriverQuestionID,\r\n        Class: classifiedDriverQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedDriverQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderAnswer\r\nexport const addTraderAnswer = async traderAnswer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderAnswer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderAnswer`, {\r\n        TraderQuestionID: traderAnswer.TraderQuestionID,\r\n        Answer: traderAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderQuestionClass\r\nexport const addTraderQuestionClass = async newTraderQuestionClass => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderQuestionClass...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderQuestionClass`, {\r\n        Class: newTraderQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyTraderQuestion\r\nexport const classifyTraderQuestion = async classifiedTraderQuestion => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/classifyTraderQuestion...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyTraderQuestion`, {\r\n        TraderQuestionID: classifiedTraderQuestion.TraderQuestionID,\r\n        Class: classifiedTraderQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedTraderQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddResponsibleAnswer\r\nexport const addResponsibleAnswer = async responsibleAnswer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addResponsibleAnswer`, {\r\n        ResponsibleQuestionID: responsibleAnswer.ResponsibleQuestionID,\r\n        Answer: responsibleAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${responsibleAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddResponsibleQuestionClass\r\nexport const addResponsibleQuestionClass = async newResponsibleQuestionClass => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addResponsibleQuestionClass`, {\r\n        Class: newResponsibleQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newResponsibleQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyResponsibleQuestion\r\nexport const classifyResponsibleQuestion = async classifiedResponsibleQuestion => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyResponsibleQuestion`, {\r\n        ResponsibleQuestionID: classifiedResponsibleQuestion.ResponsibleQuestionID,\r\n        Class: classifiedResponsibleQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedResponsibleQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetGlobalFeeRate\r\nexport const setGlobalFeeRate = async feeRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setGlobalFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setGlobalFeeRate`, {\r\n        FeeRate: feeRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${feeRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetTemporaryFeeRate\r\nexport const setTemporaryFeeRate = async temporaryFeeRateDate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setTemporaryFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setTemporaryFeeRate`, {\r\n        FeeRate: temporaryFeeRateDate.FeeRate,\r\n        Date: temporaryFeeRateDate.Date\r\n    }, {\r\n        headers: { Authorization: `JWT ${temporaryFeeRateDate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClearTemporaryFeeRate\r\nexport const clearTemporaryFeeRate = async clearedtemporaryFeeRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/clearTemporaryFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/clearTemporaryFeeRate`, {}, {\r\n        headers: { Authorization: `JWT ${clearedtemporaryFeeRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddPriceRange\r\nexport const addPriceRange = async newPriceRange => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addPriceRange...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addPriceRange`, {\r\n        StartRange: newPriceRange.StartRange,\r\n        EndRange: newPriceRange.EndRange,\r\n        FeeRate: newPriceRange.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPriceRange.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdatePriceRange\r\nexport const updatePriceRange = async updatedPriceRange => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/updatePriceRange...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updatePriceRange`, {\r\n        PriceRangeID: updatedPriceRange.PriceRangeID,\r\n        FeeRate: updatedPriceRange.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPriceRange.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeletePriceRange\r\nexport const deletePriceRange = async discardedPriceRange => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deletePriceRange...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deletePriceRange`, {\r\n        headers: { Authorization: `JWT ${discardedPriceRange.Token}` },\r\n        data: { PriceRangeID: discardedPriceRange.PriceRangeID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderRate\r\nexport const addTraderRate = async newTraderRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderRate`, {\r\n        Username: newTraderRate.Username,\r\n        FeeRate: newTraderRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTraderRate\r\nexport const updateTraderRate = async updatedTraderRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/updateTraderRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updateTraderRate`, {\r\n        TraderRateID: updatedTraderRate.TraderRateID,\r\n        FeeRate: updatedTraderRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTraderRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTraderRate\r\nexport const deleteTraderRate = async discardedTraderRate => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTraderRate...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTraderRate`, {\r\n        headers: { Authorization: `JWT ${discardedTraderRate.Token}` },\r\n        data: { TraderRateID: discardedTraderRate.TraderRateID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ApproveDiverPayProof\r\nexport const approveDriverPayProof = async approvedDriverPayProof => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/approveDriverPayProof...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/approveDriverPayProof`, {\r\n        DriverPayProofID: approvedDriverPayProof.DriverPayProofID\r\n    }, {\r\n        headers: { Authorization: `JWT ${approvedDriverPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddWaitingTime\r\nexport const addWaitingTime = async newWaitingTime => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addWaitingTime...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addWaitingTime`, {\r\n        WaitingTime: newWaitingTime.WaitingTime\r\n    }, {\r\n        headers: { Authorization: `JWT ${newWaitingTime.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteWaitingTime\r\nexport const deleteWaitingTime = async discardedWaitingTime => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteWaitingTime...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteWaitingTime`, {\r\n        headers: { Authorization: `JWT ${discardedWaitingTime.Token}` },\r\n        data: { WaitingTimeID: discardedWaitingTime.WaitingTimeID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruckSize\r\nexport const addTruckSize = async newTruckSize => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTruckSize...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTruckSize`, {\r\n        TruckSize: newTruckSize.TruckSize\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruckSize.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTruckSize\r\nexport const deleteTruckSize = async discardedTruckSize => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTruckSize...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTruckSize`, {\r\n        headers: { Authorization: `JWT ${discardedTruckSize.Token}` },\r\n        data: { TruckSizeID: discardedTruckSize.TruckSizeID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruckType\r\nexport const addTruckType = async newTruckType => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTruckType...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTruckType`, {\r\n        TruckType: newTruckType.TruckType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruckType.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTruckType\r\nexport const deleteTruckType = async discardedTruckType => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTruckType...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTruckType`, {\r\n        headers: { Authorization: `JWT ${discardedTruckType.Token}` },\r\n        data: { TruckTypeID: discardedTruckType.TruckTypeID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddPermitType\r\nexport const addPermitType = async newPermitType => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addPermitType...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addPermitType`, {\r\n        PermitType: newPermitType.PermitType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPermitType.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeletePermitType\r\nexport const deletePermitType = async discardedPermitType => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deletePermitType...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deletePermitType`, {\r\n        headers: { Authorization: `JWT ${discardedPermitType.Token}` },\r\n        data: { PermitTypeID: discardedPermitType.PermitTypeID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    {/*<img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />*/}\r\n                    <div class=\"progress-ring progress-large\">\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","//export const LoginCardBack = {\r\n//    backgroundImage: \"url(/images/login_back.jpg)\",\r\n//    backgroundAttachment: \"fixed\",\r\n//    backgroundRepeat: \"no-repeat\",\r\n//    backgroundSize: \"cover\",\r\n//    height: \"110vh\"\r\n//};\r\n\r\nexport const LoginCardBack = {\r\n    background: \"linear-gradient(to right bottom, #0F6F6F, #003640)\",\r\n    height: \"110vh\"\r\n};\r\n\r\n//export const RegisterCardBack = {\r\n//    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n//    backgroundAttachment: \"fixed\",\r\n//    backgroundRepeat: \"no-repeat\",\r\n//    backgroundSize: \"cover\",\r\n//    height: \"130vh\"\r\n//};\r\n\r\nexport const RegisterCardBack = {\r\n    background: \"linear-gradient(to right bottom, #0F6F6F, #003640)\",\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\n//export const AccountSetupCardBack = {\r\n//    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n//    backgroundAttachment: \"fixed\",\r\n//    backgroundRepeat: \"no-repeat\",\r\n//    backgroundSize: \"cover\",\r\n//    height: \"150vh\"\r\n//};\r\n\r\nexport const AccountSetupCardBack = {\r\n    background: \"linear-gradient(to right bottom, #0F6F6F, #003640)\",\r\n};\r\n\r\n//export const CongratulationsCardBack = {\r\n//    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n//    backgroundAttachment: \"fixed\",\r\n//    backgroundRepeat: \"no-repeat\",\r\n//    backgroundSize: \"cover\",\r\n//    height: \"100vh\"\r\n//};\r\n\r\nexport const CongratulationsCardBack = {\r\n    background: \"linear-gradient(to right bottom, #0F6F6F, #003640)\",\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nclass PhoneConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Code: \"\",\r\n\r\n            ValidCode: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Code: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCode\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : Dictionary.CodeError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCode: ValidCode\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {\r\n            Code,\r\n            ValidForm\r\n        } = this.state;\r\n\r\n        if (!ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const {\r\n            ConfirmationResult,\r\n            OnOK\r\n        } = this.props;\r\n\r\n        ConfirmationResult.confirm(Code).then(result => {\r\n            this.setState({\r\n                Code: \"\",\r\n                ValidCode: false,\r\n                ValidForm: false,\r\n                ShowPreloader: false,\r\n                Errors: {\r\n                    Code: \"\"\r\n                },\r\n            });\r\n\r\n            this.cancelButton.click();\r\n            OnOK(true);\r\n        }).catch(error => {\r\n            this.setState({\r\n                Code: \"\",\r\n                ValidCode: false,\r\n                ValidForm: false,\r\n                ShowPreloader: false,\r\n                Errors: {\r\n                    Code: \"\"\r\n                },\r\n            });\r\n\r\n            this.cancelButton.click();\r\n            OnOK(false);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Code,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            PhoneNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"phone-confirmation-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">{Dictionary.CodeConfirmation}</div>\r\n                                        <div className=\"type-sh3\" dir={GetDirection()}>{`${Dictionary.CodeConfirmationSubtitle} ${PhoneNumber}.`}</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Code}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Code} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Code}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Verify} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        CodeConfirmation: \"تأكيد الرمز\",\r\n        CodeConfirmationSubtitle: \"أدخل الرمز المكون من 6 أرقام الذي تم إرساله\",\r\n        Code: \"الشفرة\",\r\n        Verify: \"تحقق\",\r\n        CodeError: \".الرمز مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        CodeConfirmation: \"Code Confirmation\",\r\n        CodeConfirmationSubtitle: \"Enter 6-Digit Code sent on\",\r\n        Code: \"Code\",\r\n        Verify: \"Verify\",\r\n        CodeError: \"Code is required.\",\r\n    };\r\n}\r\n\r\nexport default PhoneConfirmationDialog;","import firebase from \"firebase\";\r\nimport { auth } from \"firebase\";\r\n\r\nconst FirebaseConfiguration = {\r\n    apiKey: \"AIzaSyCeVZ0rXxY1ZVX_6O3N9UkxBByQXnNKWMo\",\r\n    authDomain: \"naqel-transport-jobs.firebaseapp.com\",\r\n    databaseURL: \"https://naqel-transport-jobs.firebaseio.com\",\r\n    projectId: \"naqel-transport-jobs\",\r\n    storageBucket: \"naqel-transport-jobs.appspot.com\",\r\n    messagingSenderId: \"331974863267\",\r\n    appId: \"1:331974863267:web:9a8f80195b8bc8e9b5d216\",\r\n    measurementId: \"G-Q3X399QB20\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(FirebaseConfiguration);\r\n\r\nexport default firebaseApp;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../res/FirebaseApp\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { registerAdministrator } from \"../administrators/AdministratorFunctions\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            PhoneNumber: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Administrator\",\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidPhoneNumber: false,\r\n            ValidPassword: false,\r\n            ValidUsername: false,\r\n\r\n            ConfirmationResult: null,\r\n            PhoneCodeVerified: false,\r\n\r\n            ValidForm: false,\r\n            Agreed: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Username: \"\",\r\n                PhoneNumber: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n                Form: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            ValidUsername,\r\n            ValidPhoneNumber,\r\n            ValidPassword,\r\n            PasswordsMatched,\r\n            Agreed,\r\n            Errors\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Username\":\r\n                ValidUsername = (value !== \"\");\r\n                Errors.Username = ValidUsername ? \"\" : Dictionary.UsernameError1;\r\n\r\n                if (!ValidUsername) {\r\n                    break;\r\n                }\r\n\r\n                ValidUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.Username = ValidUsername ? \"\" : Dictionary.UsernameError2;\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value !== \"\";\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : Dictionary.PhoneNumberError1;\r\n\r\n                if (!ValidPhoneNumber) {\r\n                    break;\r\n                }\r\n\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : Dictionary.PhoneNumberError2;\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value != \"\";\r\n                Errors.Password = ValidPassword ? \"\" : Dictionary.PasswordError1;\r\n\r\n                if (!ValidPassword) {\r\n                    break;\r\n                }\r\n\r\n                ValidPassword = value.length >= 6;\r\n                Errors.Password = ValidPassword ? \"\" : Dictionary.PasswordError2;\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                Errors.ConfirmPassword = PasswordsMatched ? \"\" : Dictionary.ConfirmPasswordError;\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidUsername: ValidUsername,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidPhoneNumber &&\r\n                    ValidPassword &&\r\n                    PasswordsMatched &&\r\n                    Agreed &&\r\n                    ValidUsername\r\n            });\r\n        });\r\n    }\r\n\r\n    handleResponse = (response) => {\r\n        if (response.Message === \"Token received.\") {\r\n            sessionStorage.setItem(\"NewUserToken\", response.Token);\r\n            this.props.history.push(\"/setupAdministratorAccount\");\r\n        }\r\n        else {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.Form = response.Message;\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n        }\r\n    };\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.PhoneCodeVerified) {\r\n            const newUser = {\r\n                Username: this.state.Username,\r\n                Password: this.state.Password,\r\n                PhoneNumber: this.state.PhoneNumber,\r\n                RegisterAs: \"Administrator\",\r\n            };\r\n\r\n            await registerAdministrator(newUser).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.handleResponse(response);\r\n            });\r\n        }\r\n        else {\r\n            const appVerifier = window.recaptchaVerifier;\r\n\r\n            FirebaseApp.auth().languageCode = \"en\";\r\n            FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    ConfirmationResult: confirmationResult\r\n                });\r\n\r\n                this.SendCodeButton.click();\r\n            }).catch(error => {\r\n                let {\r\n                    Errors\r\n                } = this.state;\r\n\r\n                Errors.Form = error.message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: Errors\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Username,\r\n            PhoneNumber,\r\n            Password,\r\n            ConfirmPassword,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors,\r\n        } = this.state;\r\n\r\n        return <div dir={GetDirection()}>\r\n            <div class=\"middle\" style={RegisterCardBack}>\r\n                <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                    <div style={CardChild}>\r\n                        <img src=\"./images/spaceship.svg\" alt=\"signup.png\" height=\"60\" />\r\n                        <div class=\"type-h3\" style={CardTitle}>{Dictionary.SignUp}</div>\r\n                        <br />\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"Username\" class=\"control-label\">{Dictionary.Username}</label>\r\n                                <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                    value={Username} onChange={this.onChange} required />\r\n                                <span class=\"text-danger\">{Errors.Username}</span>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"PhoneNumber\" class=\"control-label\">{Dictionary.PhoneNumber}</label>\r\n                                <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                    placeholder=\"+966501234567\" value={PhoneNumber} onChange={this.onChange} />\r\n                                <span class=\"text-danger\">{Errors.PhoneNumber}</span>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"Password\" class=\"control-label\">{Dictionary.Password}</label>\r\n                                <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                    value={Password} onChange={this.onChange} />\r\n                                <span class=\"text-danger\">{Errors.Password}</span>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"ConfirmPassword\" class=\"control-label\">{Dictionary.ConfirmPassword}</label>\r\n                                <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                    value={ConfirmPassword} onChange={this.onChange} />\r\n                                <span class=\"text-danger\">{Errors.ConfirmPassword}</span>\r\n                            </div>\r\n                            <div>\r\n                                <div class=\"checkbox\">\r\n                                    <label class=\"control-label\">\r\n                                        <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                        <span>{Dictionary.AgreeWithOur} </span>\r\n                                        <span>\r\n                                            <Link data-toggle=\"modal\" data-target=\"#terms\">{Dictionary.TermsAndConditions}</Link>\r\n                                        </span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                {Errors.Form ? <div>\r\n                                    <label class=\"text-danger\">{Errors.Form}</label>\r\n                                    <br />\r\n                                </div> : null}\r\n                                <label class=\"control-label\">{Dictionary.HaveAnAccount} <span><Link to=\"/login\">{Dictionary.SignInNow}</Link></span></label>\r\n                            </div>\r\n\r\n                            <input type=\"submit\" value={Dictionary.Next} class=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\" id=\"modal-sample-label\">{Dictionary.TermsOfUse}</h4>\r\n                        </div>\r\n                        <div class=\"modal-body text-justify\">{Dictionary.TermsAndConditionsDetails}</div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">{Dictionary.OK}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                style={{ display: \"none\" }}\r\n                data-toggle=\"modal\"\r\n                data-target=\"#phone-confirmation-dialog\"\r\n                ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n\r\n            <PhoneConfirmationDialog ConfirmationResult={this.state.ConfirmationResult}\r\n                PhoneNumber={this.state.PhoneNumber}\r\n                OnOK={phoneCodeVerified => {\r\n                    if (phoneCodeVerified) {\r\n                        this.setState({\r\n                            PhoneCodeVerified: true\r\n                        });\r\n\r\n                        this.onSubmit();\r\n                    }\r\n                    else {\r\n                        let {\r\n                            Errors\r\n                        } = this.state;\r\n\r\n                        Errors.Form = Dictionary.CodeError;\r\n\r\n                        this.setState({\r\n                            ValidForm: false,\r\n                            Errors: Errors\r\n                        });\r\n                    }\r\n                }} />\r\n\r\n            <div id=\"recaptcha\" />\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </div>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        SignUp: \"سجل\",\r\n        Username: \"اسم المستخدم\",\r\n        PhoneNumber: \"رقم الهاتف\",\r\n        Password: \"كلمه السر\",\r\n        ConfirmPassword: \"تأكيد كلمة المرور\",\r\n        RegisterAs: \"تسجيل باسم\",\r\n        Driver: \"سائق\",\r\n        Trader: \"التاجر\",\r\n        Broker: \"وسيط\",\r\n        TCResponsible: \"مسؤول التعاون الفني\",\r\n        Administrator: \"مدير\",\r\n        AgreeWithOur: \"نتفق مع\",\r\n        TermsAndConditions: \"الأحكام والشروط\",\r\n        HaveAnAccount: \"هل لديك حساب؟\",\r\n        SignInNow: \"قم بتسجيل دخولك الآن!\",\r\n        Next: \"التالى\",\r\n        TermsOfUse: \"تعليمات الاستخدام\",\r\n        TermsAndConditionsDetails: \".خصوصيتك مهمة بالنسبة لنا. يصف بيان خصوصية النقل أنواع البيانات التي نجمعها منك ، وكيفية استخدامنا لبياناتك ، والأسس القانونية التي يتعين علينا معالجتها لبياناتك. يصف بيان الخصوصية أيضًا كيف يستخدم النقل المحتوى الخاص بك ، وهي المعلومات التي قدمتها للنقل عبر الخدمات. عندما تستند المعالجة إلى الموافقة وإلى الحد الذي يسمح به القانون ، بالموافقة على هذه الشروط ، فإنك توافق على جمع ونقل واستخدام والكشف عن المحتوى والبيانات الخاصة بك كما هو موضح في بيان الخصوصية. في بعض الحالات ، سنقدم إشعارًا منفصلاً ونطلب موافقتك على النحو المشار إليه في بيان الخصوصية\",\r\n        OK: \"حسنا\",\r\n        UsernameError1: \".اسم المستخدم مطلوب\",\r\n        UsernameError2: \".إسم المستخدم غير صحيح\",\r\n        PhoneNumberError1: \".رقم الهاتف مطلوب\",\r\n        PhoneNumberError2: \".رقم الهاتف غير صالح\",\r\n        CodeError: \".رمز التأكيد غير صالح\",\r\n        PasswordError1: \".كلمة المرور مطلوبة\",\r\n        PasswordError2: \"كلمة المرور قصيرة جدا.\",\r\n        ConfirmPasswordError: \"كلمتا المرور غير متطابقتين.\",\r\n        EmailUsernameError: \".اسم المستخدم أو البريد الإلكتروني مأخوذ بالفعل\",\r\n        TermsError: \"يجب أن توافق على الشروط والأحكام الخاصة بنا.\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        SignUp: \"Sign Up\",\r\n        Username: \"Username\",\r\n        PhoneNumber: \"Phone Number\",\r\n        Password: \"Password\",\r\n        ConfirmPassword: \"Confirm Password\",\r\n        RegisterAs: \"Register As\",\r\n        Driver: \"Driver\",\r\n        Trader: \"Trader\",\r\n        Broker: \"Broker\",\r\n        TCResponsible: \"TC Responsible\",\r\n        Administrator: \"Administrator\",\r\n        AgreeWithOur: \"Agree with our\",\r\n        TermsAndConditions: \"Terms and Conditions\",\r\n        HaveAnAccount: \"Have an account?\",\r\n        SignInNow: \"Sign In Now!\",\r\n        Next: \"Next\",\r\n        TermsOfUse: \"Terms of Use\",\r\n        TermsAndConditionsDetails: \"Your privacy is important to us. Naqel's Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel’s collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\",\r\n        OK: \"OK\",\r\n        UsernameError1: \"Username is required.\",\r\n        UsernameError2: \"Username is invalid.\",\r\n        PhoneNumberError1: \"Phone number is required.\",\r\n        PhoneNumberError2: \"Phone number is invalid.\",\r\n        CodeError: \"Confirmation code is invalid.\",\r\n        PasswordError1: \"Password is required.\",\r\n        PasswordError2: \"Password is too short.\",\r\n        ConfirmPasswordError: \"Passwords did not match.\",\r\n        EmailUsernameError: \"Username or email is already taken.\",\r\n        TermsError: \"You must agree to our terms and conditions.\",\r\n    };\r\n}\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport { setupAdministratorAccount, validateEmail } from \"../administrators/AdministratorFunctions\";\r\nimport { vlaidateEmail } from \"../shared/UserFunctions\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass SetupAdministratorAccount extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            AdministratorSecret: \"\",\r\n\r\n            ValidEmail: false,\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidAdministratorSecret: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                AdministratorSecret: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidAdministratorSecret = this.state.ValidAdministratorSecret;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                Errors.Email = ValidEmail ? \"\" : Dictionary.EmailError;\r\n                break;\r\n            case \"FirstName\":\r\n                ValidFirstName = (value !== \"\");\r\n                Errors.FirstName = ValidFirstName ? \"\" : Dictionary.FirstNameError1;\r\n\r\n                if (Errors.FirstName !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFirstName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.FirstName = ValidFirstName ? \"\" : Dictionary.FirstNameError2;\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = (value !== \"\");\r\n                Errors.LastName = ValidLastName ? \"\" : Dictionary.LastNameError1;\r\n\r\n                if (Errors.LastName !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLastName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.LastName = ValidLastName ? \"\" : Dictionary.LastNameError2;\r\n                break;\r\n            case \"AdministratorSecret\":\r\n                ValidAdministratorSecret = (value !== \"\");\r\n                Errors.AdministratorSecret = ValidAdministratorSecret ? \"\" : Dictionary.SecretCodeError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEmail: ValidEmail,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidAdministratorSecret: ValidAdministratorSecret\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEmail &&\r\n                    this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidAdministratorSecret\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await validateEmail(this.state.Email).then(async response => {\r\n            if (response.Message === \"Email is valid.\") {\r\n                const newUser = jwt_decode(sessionStorage.NewUserToken);\r\n\r\n        const newAdministrator = {\r\n            Username: newUser.Username,\r\n            PhoneNumber: newUser.PhoneNumber,\r\n            Password: newUser.Password,\r\n            RegisterAs: newUser.RegisterAs,\r\n            Email: this.state.Email,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            AdministratorSecret: this.state.AdministratorSecret\r\n        }\r\n\r\n        await setupAdministratorAccount(newAdministrator).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message == \"Administrator created.\") {\r\n                sessionStorage.removeItem(\"NewUserToken\");\r\n                sessionStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            }\r\n            else {\r\n                let errors = this.state.Errors;\r\n                errors.AdministratorSecret = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n            }\r\n        });\r\n            }\r\n            else {\r\n                let errors = this.state.Errors;\r\n                errors.Email = \"Email is already taken.\";\r\n\r\n                this.setState({\r\n                    Errors: errors,\r\n                    ShowPreloader: false,\r\n                    ValidForm: false,\r\n                    ValidEmail: false,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!sessionStorage.NewUserToken) {\r\n            return <Redirect to={\"/register\"} />;\r\n        }\r\n        else {\r\n            return <section dir={GetDirection()}>\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.svg\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>{Dictionary.CreateAccount}</div>\r\n                            <div class=\"type-sh3\">{Dictionary.CreateAccountSubtitle}</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-24\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Email\" class=\"control-label\">{Dictionary.Email}</label>\r\n                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                                value={this.state.Email} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Email}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label\">{Dictionary.FirstName}</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label\">{Dictionary.LastName}</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label\">{Dictionary.SecretCode}</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"AdministratorSecret\" autocomplete=\"off\"\r\n                                                value={this.state.AdministratorSecret} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.AdministratorSecret}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value={Dictionary.Create} class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        CreateAccount: \"إنشاء حساب\",\r\n        CreateAccountSubtitle: \"فقط خطوة أخرى ، لقد انتهيت!\",\r\n        Email: \"البريد الإلكتروني\",\r\n        FirstName: \"الاسم الاول\",\r\n        LastName: \"الكنية\",\r\n        SecretCode: \"الرمز السري\",\r\n        Create: \"خلق\",\r\n        EmailError: \".البريد الإلكتروني غير صالح\",\r\n        FirstNameError1: \".الإسم الأول مطلوب\",\r\n        FirstNameError2: \".الاسم الأول غير صالح\",\r\n        LastNameError1: \".إسم العائلة مطلوب\",\r\n        LastNameError2: \".اسم العائلة غير صالح\",\r\n        SecretCodeError: \".الرمز السري مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        CreateAccount: \"Create Account\",\r\n        CreateAccountSubtitle: \"Just one more step, and you're done!\",\r\n        Email: \"Email\",\r\n        FirstName: \"First Name\",\r\n        LastName: \"Last Name\",\r\n        SecretCode: \"Secret Code\",\r\n        Create: \"Create\",\r\n        EmailError: \"Email is invalid.\",\r\n        FirstNameError1: \"First name is required.\",\r\n        FirstNameError2: \"First name is invalid.\",\r\n        LastNameError1: \"Last name is required.\",\r\n        LastNameError2: \"Last name is invalid.\",\r\n        SecretCodeError: \"Secret code is required.\",\r\n    };\r\n}\r\n\r\nexport default SetupAdministratorAccount;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        sessionStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!sessionStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return <div class=\"middle\" style={CongratulationsCardBack}>\r\n                <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"congrats.svg\" src=\"./images/congrats.png\" data-source-index=\"2\" style={{ maxWidth: \"70%\" }} />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">{Dictionary.Congratulations}</div>\r\n                                <div class=\"type-sh3\">{Dictionary.CongratulationsSubtitle}</div>\r\n                                <br />\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <input type=\"submit\" value={Dictionary.SignIn} class=\"btn btn-primary\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Congratulations: \"تهانينا\",\r\n        CongratulationsSubtitle: \"تم إنشاء حسابك بنجاح.\",\r\n        SignIn: \"تسجيل الدخول\"\r\n    };\r\n}\r\nelse if (Language === \"Urdu\") {\r\n    Dictionary = {\r\n        Congratulations: \"مبارک ہو\",\r\n        CongratulationsSubtitle: \"آپ کا اکاؤنٹ کامیابی کے ساتھ تشکیل دے دیا گیا ہے۔\",\r\n        SignIn: \"سائن ان\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Congratulations: \"Congratulations\",\r\n        CongratulationsSubtitle: \"Your account has been created successfully.\",\r\n        SignIn: \"Sign In\"\r\n    };\r\n}\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../../../../res/FirebaseApp\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../../../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { getData, validatePhoneNumber, generalSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            OldPhoneNumber: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ConfirmationResult: null,\r\n            OldPhoneCodeVerified: false,\r\n            PhoneCodeVerified: false,\r\n            VerificationFor: \"Old Phone Number\",\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        FirstName: administrator.FirstName,\r\n                        LastName: administrator.LastName,\r\n                        OldPhoneNumber: administrator.PhoneNumber,\r\n                        PhoneNumber: administrator.PhoneNumber,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        OldPhoneNumber: \"\",\r\n                        PhoneNumber: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.PhoneNumber !== this.state.OldPhoneNumber) {\r\n            const response = await validatePhoneNumber(this.state.PhoneNumber);\r\n\r\n            if (response.Message === \"Phone number is already used.\") {\r\n                let errors = this.state.Errors;\r\n                errors.PhoneNumber = response.Message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: errors,\r\n                    ValidForm: false,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.PhoneNumber !== this.state.OldPhoneNumber &&\r\n            !this.state.OldPhoneCodeVerified) {\r\n                const appVerifier = window.recaptchaVerifier;\r\n\r\n            FirebaseApp.auth().languageCode = \"en\";\r\n            FirebaseApp.auth().signInWithPhoneNumber(this.state.OldPhoneNumber, appVerifier).then(confirmationResult => {\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    ConfirmationResult: confirmationResult,\r\n                    VerificationFor: \"Old Phone Number\"\r\n                });\r\n\r\n                this.SendCodeButton.click();\r\n            }).catch(error => {\r\n                let {\r\n                    Errors\r\n                } = this.state;\r\n\r\n                Errors.PhoneNumber = error.message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: Errors,\r\n                    ValidForm: false,\r\n                });\r\n            });\r\n\r\n        }\r\n        else if (this.state.PhoneCodeVerified) {\r\n            const updatedAdministrator = {\r\n                Token: sessionStorage.Token,\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                PhoneNumber: this.state.PhoneNumber,\r\n            };\r\n\r\n            await generalSettings(updatedAdministrator).then(response => {\r\n                if (response.Message === \"Administrator is updated.\") {\r\n                    this.setState({\r\n                        OldPhoneNumber: this.state.PhoneNumber,\r\n                        ShowPreloader: false\r\n                    });\r\n\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            const appVerifier = window.recaptchaVerifier;\r\n\r\n            FirebaseApp.auth().languageCode = \"en\";\r\n            FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    ConfirmationResult: confirmationResult,\r\n                    VerificationFor: \"New Phone Number\"\r\n                });\r\n\r\n                this.SendCodeButton.click();\r\n            }).catch(error => {\r\n                let {\r\n                    Errors\r\n                } = this.state;\r\n\r\n                Errors.PhoneNumber = error.message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: Errors,\r\n                    ValidForm: false,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FirstName,\r\n            LastName,\r\n            PhoneNumber,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>{Dictionary.GeneralSettings}</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.FirstName}</div>\r\n                            <div className=\"text-danger\">{Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.LastName}</div>\r\n                            <div className=\"text-danger\">{Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    placeholder=\"+966501234567\" value={PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.PhoneNumber}</div>\r\n                            <div className=\"text-danger\">{Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.SaveChanges}</div>\r\n                            <div className=\"content-text-secondary\">{Dictionary.Undone}</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value={Dictionary.Save} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <button\r\n                style={{ display: \"none\" }}\r\n                data-toggle=\"modal\"\r\n                data-target=\"#phone-confirmation-dialog\"\r\n                ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n            <PhoneConfirmationDialog ConfirmationResult={this.state.ConfirmationResult}\r\n                PhoneNumber={this.state.VerificationFor === \"Old Phone Number\" ? \r\n                this.state.OldPhoneNumber : \r\n            this.state.NewPhoneNumber}\r\n                OnOK={phoneCodeVerified => {\r\n                    if (phoneCodeVerified) {\r\n                        if (this.state.VerificationFor === \"Old Phone Number\") {\r\n                            this.setState({\r\n                                OldPhoneCodeVerified: true,\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                PhoneCodeVerified: true\r\n                            });\r\n                        }\r\n\r\n                        this.onSubmit();\r\n                    }\r\n                    else {\r\n                        let {\r\n                            Errors\r\n                        } = this.state;\r\n\r\n                        Errors.PhoneNumber = Dictionary.PhoneNumberError;\r\n\r\n                        this.setState({\r\n                            ValidForm: false,\r\n                            Errors: Errors\r\n                        });\r\n                    }\r\n                }} />\r\n            <div id=\"recaptcha\"></div>\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        GeneralSettings: \"الاعدادات العامة\",\r\n        FirstName: \"الاسم الاول\",\r\n        LastName: \"الكنية\",\r\n        PhoneNumber: \"رقم الهاتف\",\r\n        SaveChanges: \"حفظ التغييرات؟\",\r\n        Undone: \".هذا لا يمكن التراجع عنها\",\r\n        Save: \"حفظ\",\r\n        FirstNameError: \".الاسم الأول غير صالح\",\r\n        LastNameError: \".اسم العائلة غير صالح\",\r\n        PhoneNumberError: \".رقم الهاتف غير صالح\", \r\n        CodeError: \".رمز التأكيد غير صالح\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        GeneralSettings: \"General Settings\",\r\n        FirstName: \"First Name\",\r\n        LastName: \"Last Name\",\r\n        PhoneNumber: \"Phone Number\",\r\n        SaveChanges: \"Save Changes?\",\r\n        Undone: \"This cannot be undone.\",\r\n        Save: \"Save\",\r\n        FirstNameError: \"First name is invalid.\",\r\n        LastNameError: \"Last name is invalid.\",\r\n        PhoneNumberError: \"Phone number is invalid.\", \r\n        CodeError: \"Confirmation code is invalid.\",\r\n    };\r\n}\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { uploadProfilePhoto } from \"../../AdministratorFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: this.props.PhotoURL,\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const profilePhoto = {\r\n                        Token: sessionStorage.Token,\r\n                        PhotoURL: response.imageUrl\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadProfilePhoto(profilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\") {\r\n                            this.setState({\r\n                                UploadProgress: null\r\n                            });\r\n\r\n                            this.props.OnProfilePhotoUpdated();\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img style={{\r\n                            border: \"5px solid #3A3A3C\"\r\n                        }}\r\n                            src={this.props.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\n\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    usernameAndEmailSettings\r\n} from \"../../../AdministratorFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        Username: administrator.Username,\r\n                        NewUsername: administrator.Username,\r\n                        Email: administrator.Email,\r\n                        NewEmail: administrator.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : Dictionary.UsernameError1;\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : Dictionary.UsernameError2;\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : Dictionary.EmailError1;\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : Dictionary.EmailError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewUsername = response.Message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: errors,\r\n                    ValidForm: false,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewEmail = response.Message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: errors,\r\n                    ValidForm: false,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedAdministrator = {\r\n            Token: sessionStorage.Token,\r\n            Username: this.state.NewUsername,\r\n            Email: this.state.NewEmail,\r\n        };\r\n\r\n        await usernameAndEmailSettings(updatedAdministrator).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false,\r\n                ValidForm: false,\r\n            });\r\n\r\n            if (response.Message === \"Administrator is updated.\") {\r\n                this.setState({\r\n                    Username: this.state.NewUsername,\r\n                    Email: this.state.NewEmail\r\n                });\r\n\r\n                this.props.OnSettingsSaved();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NewUsername,\r\n            NewEmail,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>{Dictionary.UsernameAndEmail}</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{Dictionary.Username}</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{Dictionary.Email}</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{Dictionary.SaveChanges}</div>\r\n                                <div className=\"content-text-secondary\">{Dictionary.Undone}</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value={Dictionary.Save} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n                {ShowPreloader ? <Preloader /> : null}\r\n            </section> \r\n        );\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        UsernameAndEmail: \"اسم المستخدم والبريد الإلكتروني\",\r\n        Username: \"اسم المستخدم\",\r\n        Email: \"البريد الإلكترونيl\",\r\n        SaveChanges: \"حفظ التغييرات؟\",\r\n        Undone: \".هذا لا يمكن التراجع عنها\",\r\n        Save: \"حفظ\",\r\n        UsernameError1: \".اسم المستخدم مطلوب\",\r\n        UsernameError2: \".إسم المستخدم غير صحيح\",\r\n        EmailError1: \".البريد الالكتروني مطلوب\",\r\n        EmailError2: \".البريد الإلكتروني غير صالح\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        UsernameAndEmail: \"Username and Email\",\r\n        Username: \"Username\",\r\n        Email: \"Email\",\r\n        SaveChanges: \"Save Changes?\",\r\n        Undone: \"This cannot be undone.\",\r\n        Save: \"Save\",\r\n        UsernameError1: \"Username is required.\",\r\n        UsernameError2: \"Username is invalid.\",\r\n        EmailError1: \"Email is required.\",\r\n        EmailError2: \"Email is invalid.\",\r\n    };\r\n}\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { validatePassword, passwordSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : Dictionary.CurrentPasswordError;\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : Dictionary.NewPasswordError;\r\n\r\n                if (Errors.NewPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmPassword = value === this.state.ConfirmPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : Dictionary.ConfirmPasswordError;\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : Dictionary.ConfirmPasswordError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: sessionStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                let errors = this.state.Errors;\r\n                errors.CurrentPassword = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors,\r\n                    ValidForm: false,\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const updatedAdministrator = {\r\n                    Token: sessionStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                await passwordSettings(updatedAdministrator).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        CurrentPassword: \"\",\r\n                        NewPassword: \"\",\r\n                        ConfirmPassword: \"\",\r\n                        ValidForm: false,\r\n                    });\r\n\r\n                    if (response.Message === \"Administrator is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            CurrentPassword,\r\n            NewPassword,\r\n            ConfirmPassword,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>{Dictionary.ChangePassword}</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.ChangePassword}</div>\r\n                            <div className=\"text-danger\">{Errors.CurrentPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.NewPassword}</div>\r\n                            <div className=\"text-danger\">{Errors.NewPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.ConfirmPassword}</div>\r\n                            <div className=\"text-danger\">{Errors.ConfirmPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.SaveChanges}</div>\r\n                            <div className=\"content-text-secondary\">{Dictionary.Undone}</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value={Dictionary.Save} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ChangePassword: \"غير كلمة السر\",\r\n        CurrentPassword: \"كلمة المرور الحالي\",\r\n        NewPassword: \"كلمة سر جديدة\",\r\n        ConfirmPassword: \"تأكيد كلمة المرور\",\r\n        SaveChanges: \"حفظ التغييرات؟\",\r\n        Undone: \".هذا لا يمكن التراجع عنها\",\r\n        Save: \"حفظ\",  \r\n        CurrentPasswordError: \".كلمة المرور الحالية مطلوبة\",\r\n        NewPasswordError: \".كلمة المرور قصيرة جدا\",\r\n        ConfirmPasswordError: \".كلمتا المرور غير متطابقتين\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ChangePassword: \"Change Password\",\r\n        CurrentPassword: \"Current Password\",\r\n        NewPassword: \"New Password\",\r\n        ConfirmPassword: \"Confirm Password\",\r\n        SaveChanges: \"Save Changes?\",\r\n        Undone: \"This cannot be undone.\",\r\n        Save: \"Save\",  \r\n        CurrentPasswordError: \"Current password is required.\",\r\n        NewPasswordError: \"Password is too short.\",\r\n        ConfirmPasswordError: \"Passwords did not match.\",\r\n    };\r\n}\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { getData, updateNaqelSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass NaqelSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Street: \"\",\r\n            City: \"\",\r\n            Country: \"\",\r\n            ZIPCode: \"\",\r\n            PhoneNumber: \"\",\r\n            Website: \"\",\r\n            BusinessName: \"\",\r\n            BankName: \"\",\r\n            AccountNumber: \"\",\r\n\r\n            ValidStreet: true,\r\n            ValidCity: true,\r\n            ValidCountry: true,\r\n            ValidZIPCode: true,\r\n            ValidPhoneNumber: true,\r\n            ValidWebsite: true,\r\n            ValidBusinessName: true,\r\n            ValidBankName: true,\r\n            ValidAccountNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Street: \"\",\r\n                City: \"\",\r\n                Country: \"\",\r\n                ZIPCode: \"\",\r\n                PhoneNumber: \"\",\r\n                Website: \"\",\r\n                BusinessName: \"\",\r\n                BankName: \"\",\r\n                AccountNumber: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"NaqelSettings\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Naqel settings found.\") {\r\n                    let naqelSettings = response.NaqelSettings;\r\n\r\n                    this.setState({\r\n                        Street: naqelSettings.Street,\r\n                        City: naqelSettings.City,\r\n                        Country: naqelSettings.Country,\r\n                        ZIPCode: naqelSettings.ZIPCode,\r\n                        PhoneNumber: naqelSettings.PhoneNumber,\r\n                        Website: naqelSettings.Website,\r\n                        BusinessName: naqelSettings.BusinessName,\r\n                        BankName: naqelSettings.BankName,\r\n                        AccountNumber: naqelSettings.AccountNumber,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Street: \"\",\r\n                        City: \"\",\r\n                        Country: \"\",\r\n                        ZIPCode: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Website: \"\",\r\n                        BusinessName: \"\",\r\n                        BankName: \"\",\r\n                        AccountNumber: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidStreet,\r\n            ValidCity,\r\n            ValidCountry,\r\n            ValidZIPCode,\r\n            ValidPhoneNumber,\r\n            ValidWebsite,\r\n            ValidBusinessName,\r\n            ValidBankName,\r\n            ValidAccountNumber,\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Street\":\r\n                ValidStreet = value !== \"\";\r\n                Errors.Street = ValidStreet ? \"\" : Dictionary.StreetError;\r\n                break;\r\n            case \"City\":\r\n                ValidCity = value !== \"\";\r\n                Errors.City = ValidCity ? \"\" : Dictionary.CityError;\r\n                break;\r\n            case \"Country\":\r\n                ValidCountry = value !== \"\";\r\n                Errors.Country = ValidCountry ? \"\" : Dictionary.CountryError;\r\n                break;\r\n            case \"ZIPCode\":\r\n                ValidZIPCode = value !== \"\";\r\n                Errors.ZIPCode = ValidZIPCode ? \"\" : Dictionary.ZIPCodeError;\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value !== \"\";\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : Dictionary.PhoneNumberError;\r\n                break;\r\n            case \"Website\":\r\n                ValidWebsite = value !== \"\";\r\n                Errors.Website = ValidWebsite ? \"\" : Dictionary.WebsiteError;\r\n                break;\r\n            case \"BusinessName\":\r\n                ValidBusinessName = value !== \"\";\r\n                Errors.BusinessName = ValidBusinessName ? \"\" : Dictionary.BusinessNameError;\r\n                break;\r\n            case \"BankName\":\r\n                ValidBankName = value !== \"\";\r\n                Errors.BankName = ValidBankName ? \"\" : Dictionary.BankNameError;\r\n                break;\r\n            case \"AccountNumber\":\r\n                ValidAccountNumber = value !== \"\";\r\n                Errors.AccountNumber = ValidAccountNumber ? \"\" : Dictionary.AccountNumberError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidStreet: ValidStreet,\r\n            ValidCity: ValidCity,\r\n            ValidCountry: ValidCountry,\r\n            ValidZIPCode: ValidZIPCode,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n            ValidWebsite: ValidWebsite,\r\n            ValidBusinessName: ValidBusinessName,\r\n            ValidBankName: ValidBankName,\r\n            ValidAccountNumber: ValidAccountNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidStreet &&\r\n                    ValidCity &&\r\n                    ValidCountry &&\r\n                    ValidZIPCode &&\r\n                    ValidPhoneNumber &&\r\n                    ValidWebsite &&\r\n                    ValidBusinessName &&\r\n                    ValidBankName &&\r\n                    ValidAccountNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedNaqelSettings = {\r\n            Token: sessionStorage.Token,\r\n            Street: this.state.Street,\r\n            City: this.state.City,\r\n            Country: this.state.Country,\r\n            ZIPCode: this.state.ZIPCode,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Website: this.state.Website,\r\n            BusinessName: this.state.BusinessName,\r\n            BankName: this.state.BankName,\r\n            AccountNumber: this.state.AccountNumber,\r\n        };\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await updateNaqelSettings(updatedNaqelSettings).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Naqel settings are updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Street,\r\n            City,\r\n            Country,\r\n            ZIPCode,\r\n            PhoneNumber,\r\n            Website,\r\n            BusinessName,\r\n            BankName,\r\n            AccountNumber,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>{Dictionary.NaqelSettings}</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Street\" autoComplete=\"off\"\r\n                                    value={Street} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.Street}</div>\r\n                            <div className=\"text-danger\">{Errors.Street}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"City\" autoComplete=\"off\"\r\n                                    value={City} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.City}</div>\r\n                            <div className=\"text-danger\">{Errors.City}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Country\" autoComplete=\"off\"\r\n                                    value={Country} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.Country}</div>\r\n                            <div className=\"text-danger\">{Errors.Country}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"ZIPCode\" autoComplete=\"off\"\r\n                                    value={ZIPCode} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.ZIPCode}</div>\r\n                            <div className=\"text-danger\">{Errors.ZIPCode}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    value={PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.PhoneNumber}</div>\r\n                            <div className=\"text-danger\">{Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-globe\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Website\" autoComplete=\"off\"\r\n                                    value={Website} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.Website}</div>\r\n                            <div className=\"text-danger\">{Errors.Website}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"BusinessName\" autoComplete=\"off\"\r\n                                    value={BusinessName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.BusinessName}</div>\r\n                            <div className=\"text-danger\">{Errors.BusinessName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"BankName\" autoComplete=\"off\"\r\n                                    value={BankName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.BankName}</div>\r\n                            <div className=\"text-danger\">{Errors.BankName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-list\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"AccountNumber\" autoComplete=\"off\"\r\n                                    value={AccountNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.AccountNumber}</div>\r\n                            <div className=\"text-danger\">{Errors.AccountNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.SaveChanges}</div>\r\n                            <div className=\"content-text-secondary\">{Dictionary.Undone}</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value={Dictionary.Save} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        NaqelSettings: \"إعدادات ناقل\",\r\n        Street: \"شارع\",\r\n        City: \"مدينة\",\r\n        Country: \"بلد\",\r\n        ZIPCode: \"الرمز البريدي\",\r\n        PhoneNumber: \"رقم الهاتف\",\r\n        Website: \"موقع الكتروني\",\r\n        BusinessName: \"الاسم التجاري\",\r\n        BankName: \"اسم البنك\",\r\n        AccountNumber: \"رقم حساب\",\r\n        SaveChanges: \"حفظ التغييرات؟\",\r\n        Undone: \".هذا لا يمكن التراجع عنها\",\r\n        Save: \"حفظ\",\r\n        StreetError: \".الشارع مطلوب\",\r\n        CityError: \".المدينة مطلوبة\",\r\n        CountryError: \".الدولة مطلوبة\",\r\n        ZIPCodeError: \".الرمز البريدي مطلوب\",\r\n        PhoneNumberError: \".رقم الهاتف مطلوب\",\r\n        WebsiteError: \".الموقع الإلكتروني مطلوب\",\r\n        BusinessNameError: \".اسم العمل مطلوب\",\r\n        BankNameError: \".اسم البنك مطلوب\",\r\n        AccountNumberError: \".رقم الحساب مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        NaqelSettings: \"Naqel Settings\",\r\n        Street: \"Street\",\r\n        City: \"City\",\r\n        Country: \"Country\",\r\n        ZIPCode: \"ZIP Code\",\r\n        PhoneNumber: \"Phone Number\",\r\n        Website: \"Website\",\r\n        BusinessName: \"Business Name\",\r\n        BankName: \"Bank Name\",\r\n        AccountNumber: \"Account Number\",\r\n        SaveChanges: \"Save Changes?\",\r\n        Undone: \"This cannot be undone.\",\r\n        Save: \"Save\",\r\n        StreetError: \"Street is required.\",\r\n        CityError: \"City is required.\",\r\n        CountryError: \"Country is required.\",\r\n        ZIPCodeError: \"ZIP code is required.\",\r\n        PhoneNumberError: \"Phone number is required.\",\r\n        WebsiteError: \"Website is required.\",\r\n        BusinessNameError: \"Business name is required.\",\r\n        BankNameError: \"Bank name is required.\",\r\n        AccountNumberError: \"Account number is required.\",\r\n    };\r\n}\r\n\r\nexport default NaqelSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { getData, updateAdminSecret } from \"../../../AdministratorFunctions\";\r\n\r\nclass AdminSecretSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AdminSecret: \"\",\r\n\r\n            ValidAdminSecret: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                AdminSecret: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"AdminSecret\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Admin secret found.\") {\r\n                    this.setState({\r\n                        AdminSecret: response.AdminSecret\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AdminSecret: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidAdminSecret\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"AdminSecret\":\r\n                ValidAdminSecret = value !== \"\";\r\n                Errors.AdminSecret = ValidAdminSecret ? \"\" : Dictionary.AdminSecretError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAdminSecret: ValidAdminSecret,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidAdminSecret\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedAdminSecret = {\r\n            Token: sessionStorage.Token,\r\n            AdminSecret: this.state.AdminSecret\r\n        };\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await updateAdminSecret(updatedAdminSecret).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Admin secret is updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AdminSecret,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>{Dictionary.AdminSecretSettings}</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"AdminSecret\" autoComplete=\"off\"\r\n                                    value={AdminSecret} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.AdminSecret}</div>\r\n                            <div className=\"text-danger\">{Errors.AdminSecret}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">{Dictionary.SaveChanges}</div>\r\n                            <div className=\"content-text-secondary\">{Dictionary.Undone}</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value={Dictionary.Save} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AdminSecretSettings: \"إعدادات سر المسؤول\",\r\n        AdminSecret: \"سر المسؤول\",\r\n        SaveChanges: \"حفظ التغييرات؟\",\r\n        Undone: \".هذا لا يمكن التراجع عنها\",\r\n        Save: \"حفظ\",\r\n        AdminSecretError: \".السر مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AdminSecretSettings: \"Admin Secret Settings\",\r\n        AdminSecret: \"Admin Secret\",\r\n        SaveChanges: \"Save Changes?\",\r\n        Undone: \"This cannot be undone.\",\r\n        Save: \"Save\",\r\n        AdminSecretError: \"Secret is required.\",\r\n    };\r\n}\r\n\r\nexport default AdminSecretSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport NaqelSettings from \"./NaqellSettings\";\r\nimport AdminSecretSettings from \"./AdminSecretSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <GeneralSettings OnSettingsSaved={() => {\r\n                this.SettingsSavedButton.click();\r\n                this.props.OnSettingsSaved();\r\n            }} />\r\n            <UsernameAndEmailSettings OnSettingsSaved={() => {\r\n                this.SettingsSavedButton.click();\r\n                this.props.OnSettingsSaved();\r\n            }} />\r\n            <PasswordSettings OnSettingsSaved={() => {\r\n                this.SettingsSavedButton.click();\r\n                this.props.OnSettingsSaved();\r\n            }} />\r\n            <NaqelSettings OnSettingsSaved={() => {\r\n                this.SettingsSavedButton.click();\r\n                this.props.OnSettingsSaved();\r\n            }} />\r\n            <AdminSecretSettings OnSettingsSaved={() => {\r\n                this.SettingsSavedButton.click();\r\n                this.props.OnSettingsSaved();\r\n            }}/>\r\n\r\n            <button\r\n                style={{ display: \"none\" }}\r\n                data-toggle=\"modal\"\r\n                data-target=\"#settings-saved-dialog\"\r\n                ref={settingsSavedButton => this.SettingsSavedButton = settingsSavedButton}></button>\r\n\r\n            <div className=\"modal modal-center-vertical\" id=\"settings-saved-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-sh3 m-b-xxs\">{Dictionary.SettingsSavedSuccessfully}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        SettingsSavedSuccessfully: \".تم حفظ الإعدادات بنجاح\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        SettingsSavedSuccessfully: \"Settings saved successfully.\"\r\n    };\r\n}\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Email: \"\",\r\n            Username: \"\",\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        FirstName: administrator.FirstName,\r\n                        LastName: administrator.LastName,\r\n                        Email: administrator.Email,\r\n                        Username: administrator.Username,\r\n                        PhoneNumber: administrator.PhoneNumber,\r\n                        PhotoURL: administrator.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Email: \"\",\r\n                        Username: \"\",\r\n                        PhoneNumber: \"\",\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FirstName,\r\n            LastName,\r\n            Email,\r\n            Username,\r\n            PhoneNumber,\r\n            PhotoURL\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ProfilePhoto PhotoURL={PhotoURL}\r\n                                OnProfilePhotoUpdated={async () => { await this.componentDidMount(); }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3 color-default p-t-xxs\">{FirstName + \" \" + LastName}</div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-user-shield m-r-xxs\" style={{ color: \"#606060\" }}></span>{Dictionary.Administrator}\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-at\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.Username}</div>\r\n                                                    <div className=\"content-text-secondary\">{Username}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">{Dictionary.Email}</div>\r\n                                                <div className=\"content-text-secondary\">{Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">{Dictionary.PhoneNumber}</div>\r\n                                                <div className=\"content-text-secondary\">{PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Settings OnSettingsSaved={async () => { await this.componentDidMount(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Administrator: \"مدير\",\r\n        Username: \"اسم المستخدم\",\r\n        Email: \"البريد الإلكتروني\",\r\n        PhoneNumber: \"رقم الهاتف\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Administrator: \"Administrator\",\r\n        Username: \"Username\",\r\n        Email: \"Email\",\r\n        PhoneNumber: \"Phone Number\"\r\n    };\r\n}\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../controls/ProgressBar\";\r\n\r\nclass SearchingContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const searching = this.props.Searching;\r\n        const searchingFor = this.props.SearchingFor;\r\n\r\n        return <section dir={GetDirection()}>\r\n            <div className=\"jumbotron theme-default\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {searching ? <div className=\"col-md-24 text-center\">\r\n                            <div>\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\" }}>{Dictionary.Searching}</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div> : <div className=\"col-md-24 text-center\">\r\n                                <h3><span className=\"fas fa-exclamation-triangle m-r-xxs m-l-xxs\" style={{ color: \"#FFBF15\" }}></span>{searchingFor} {Dictionary.NotFound}</h3>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Searching: \"يبحث\",\r\n        NotFound: \"غير معثور عليه\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Searching: \"Searching\",\r\n        NotFound: \"Not Found\"\r\n    };\r\n}\r\n\r\nexport default SearchingContainer;","import React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component {\r\n    render() {\r\n        return <div className=\"progress-bar\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\n\r\nclass DrivingLicenceContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const drivingLicence = this.props.DrivingLicence;\r\n\r\n        return drivingLicence ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={drivingLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.DrivingLicenceSubtitle}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.LicenceNumber}</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.LicenceNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.LicenceType}</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.ReleaseDate}</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.ExpiryDate}</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ExpiryDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        DrivingLicenceSubtitle: \"رخصة قيادة\",\r\n        LicenceNumber: \"رقم الرخصة\",\r\n        LicenceType: \"نوع الترخيص\",\r\n        ReleaseDate: \"يوم الاصدار\",\r\n        ExpiryDate: \"تاريخ الانتهاء\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        DrivingLicenceSubtitle: \"Driving Licence\",\r\n        LicenceNumber: \"Licence Number\",\r\n        LicenceType: \"Licence Type\",\r\n        ReleaseDate: \"Release Date\",\r\n        ExpiryDate: \"Expiry Date\",\r\n    };\r\n}\r\n\r\nexport default DrivingLicenceContainer;","import React, { Component } from \"react\";\r\n\r\nclass ProgressRing extends Component {\r\n    render() {\r\n        return <div className=\"progress-ring\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressRing;","import React, { Component } from \"react\";\r\n\r\nclass Rating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class={`rating ${this.props.Size} ${this.props.Color}`}>\r\n                <div class=\"rating-stars\">\r\n            <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.props.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                </div>\r\n                {this.props.Label ? <div class=\"rating-label rating-label-right\">{this.props.Label}</div> : null}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Rating;","import React, { Component } from \"react\";\r\n\r\nclass EntryExitCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const entryExitCard = this.props.EntryExitCard;\r\n\r\n        return entryExitCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.EntryExitCardSubtitle}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.EntryExitCard}</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.CardType}</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.ReleaseDate}</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(entryExitCard.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.NumberOfMonths}</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        EntryExitCardSubtitle: \"بطاقة الدخول / الخروج\",\r\n        CardType: \"نوع البطاقة\",\r\n        ReleaseDate: \"يوم الاصدار\",\r\n        NumberOfMonths: \"عدد الأشهر\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        EntryExitCardSubtitle: \"Entry/Exit Card\",\r\n        EntryExitNumber: \"Entry/Exit Number\",\r\n        CardType: \"Card Type\",\r\n        ReleaseDate: \"Release Date\",\r\n        NumberOfMonths: \"Number of Months\",\r\n    };\r\n}\r\n\r\nexport default EntryExitCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.IdentityCardSubtitle}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.IDNumber}</div>\r\n                                                    <div class=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        IdentityCardSubtitle: \"البطاقة الشخصية\",\r\n        IDNumber: \"رقم الهوية\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        IdentityCardSubtitle: \"Identity Card\",\r\n        IDNumber: \"ID Number\",\r\n    };\r\n}\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.Documents}</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !driverDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor={Dictionary.Documents} /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Documents: \"مستندات\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Documents: \"Documents\",\r\n    };\r\n}\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Rating from \"../../controls/Rating\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass DriverContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.Driver,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (sessionStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.Driver\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.DriverProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor={Dictionary.Driver} />;\r\n        }\r\n        else {\r\n            const driverProfile = this.state.DriverProfile;\r\n            const driver = driverProfile;\r\n            const ratingAndReviews = driverProfile.RatingAndReviews\r\n            const onJob = driverProfile.OnJob;\r\n            const profilePhoto = driverProfile.PhotoURL ?\r\n                driverProfile.PhotoURL :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${driver.FirstName} ${driver.LastName} `}\r\n                                    {onJob ? <span class=\"badge back-color-golden\">{Dictionary.OnJob}</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\"><span className=\"fas fa-car m-r-xxs\" style={{ color: \"#606060\" }}></span>{Dictionary.Driver}</div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span><Rating Rating={ratingAndReviews.Reviews > 0 ? ratingAndReviews.Rating : 0}\r\n                                        Color=\"\" Size=\"rating-small\"\r\n                                        Label={ratingAndReviews.Reviews > 0 ?\r\n                                            `(${ratingAndReviews.Reviews} ${Dictionary.Reviews})` : `${Dictionary.NoReviews}`} /></span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.Active}</div>\r\n                                                    <div className=\"content-text-secondary\">{(driver.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class={(driver.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.Gender}</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.Birthday}</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.Email}</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.PhoneNumber}</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.Nationality}</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                {this.props.TabView ?\r\n                                    null : \r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>{Dictionary.Documents}</button>}\r\n                                        <a dir={GetDirection()} href={`https://api.whatsapp.com/send?phone=${driver.PhoneNumber.replace(\"+\", \"\")}`} \r\n                                        target=\"_blank\" className=\"btn btn-primary\">{Dictionary.ChatOnWhatsApp}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        DriverID={this.props.DriverID} />}\r\n            </section>;\r\n        } \r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        OnJob: \"في العمل\",\r\n        Driver: \"سائق\",\r\n        Reviews: \"المراجعات\",\r\n        NoReviews: \"لم يتم تقديم تعليقات\",\r\n        Active: \"نشيط\",\r\n        Gender: \"جنس\",\r\n        Birthday: \"عيد الميلاد\",\r\n        Email: \"البريد الإلكتروني\",\r\n        PhoneNumber: \"رقم الهاتف\",\r\n        Nationality: \"الجنسية\",\r\n        Documents: \"مستندات\",\r\n        ChatOnWhatsApp: \"الدردشة على WhatsApp\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        OnJob: \"ON JOB\",\r\n        Driver: \"Driver\",\r\n        Reviews: \"Review(s)\",\r\n        NoReviews: \"No Reviews\",\r\n        Active: \"Active\",\r\n        Gender: \"Gender\",\r\n        Birthday: \"Birthday\",\r\n        Email: \"Email\",\r\n        PhoneNumber: \"Phone Number\",\r\n        Nationality: \"Nationality\",\r\n        Documents: \"Documents\",\r\n        ChatOnWhatsApp: \"Chat on WhatsApp\"\r\n    };\r\n}\r\n\r\nexport default DriverContainer;","import React, { Component } from \"react\";\r\n\r\nclass TrailerContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const trailer = this.props.Trailer;\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={trailer.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.MaximumWeight}</div>\r\n                                                    <div class=\"content-text-secondary\">{`${trailer.MaximumWeight} KG`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.TrailerType}</div>\r\n                                                    <div class=\"content-text-secondary\">{trailer.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        MaximumWeight: \"الوزن الأقصى\",\r\n        TrailerType: \"نوع المقطورة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        MaximumWeight: \"Maximum Weight\",\r\n        TrailerType: \"Trailer Type\",\r\n\r\n    };\r\n}\r\n\r\nexport default TrailerContainer;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        let Trailers = (trailers.length > 0) ?\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {trailers.map((trailer, index) => {\r\n                    return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                })}\r\n            </ol> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trailers-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.Trailers}</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(trailers.length === 0) ?\r\n                                <SearchingContainer Searching={false}\r\n                                    SearchingFor={Dictionary.Trailers} /> : Trailers}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Trailers: \"المقطورات\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Trailers: \"Trailers\",\r\n    };\r\n}\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport TrailersDialog from \"./TrailersDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass TruckContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckProfile: null,\r\n            Searching: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n   onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (sessionStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TruckProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor={Dictionary.Truck} />;\r\n        }\r\n        else {\r\n            const truckProfile = this.state.TruckProfile;\r\n            const truck = truckProfile.Truck;\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={truck.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${truck.Brand} ${truck.Model}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-truck m-r-xxs\" style={{ color: \"#606060\" }}></span>{truck.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-list-ol\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.PlateNumber}</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-user\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.Owner}</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.Owner}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar-day\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.ProductionYear}</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">{Dictionary.MaximumWeight}</div>\r\n                                                    <div class=\"content-text-secondary\">{`${truck.MaximumWeight} KG`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#trailers-dialog-${dialogID}`}>{Dictionary.Trailers}</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <TrailersDialog Trailers={truckProfile.Trailers} DialogID={dialogID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Truck: \"شاحنة\",\r\n        PlateNumber: \"رقم لوحة\",\r\n        Owner: \"صاحب\",\r\n        ProductionYear: \"سنة الإنتاج\",\r\n        Brand: \"العلامة التجارية\",\r\n        TruckModel: \"نموذج الشاحنة\",\r\n        TruckType: \"نوع الشاحنة\",\r\n        MaximumWeight: \"الوزن الأقصى\",\r\n        Trailers: \"المقطورات\",\r\n\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Truck: \"Truck\",\r\n        PlateNumber: \"Plate Number\",\r\n        Owner: \"Owner\",\r\n        ProductionYear: \"Production Year\",\r\n        Brand: \"Brand\",\r\n        TruckModel: \"Truck Model\",\r\n        TruckType: \"Truck Type\",\r\n        MaximumWeight: \"Maximum Weight\",\r\n        Trailers: \"Trailers\",\r\n    };\r\n}\r\n\r\nexport default TruckContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { blockDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass BlockAccountDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BlockDate: \"\",\r\n            Reason: \"\",\r\n\r\n            ValidBlockDate: false,\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                BlockDate: \"\",\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidBlockDate = this.state.ValidBlockDate;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"BlockDate\":\r\n                ValidBlockDate = (value !== \"\");\r\n                Errors.BlockDate = ValidBlockDate ? \"\" : Dictionary.BlockDateError1;\r\n\r\n                if (Errors.BlockDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidBlockDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.BlockDate = ValidBlockDate ? \"\" : Dictionary.BlockDateError2;\r\n                break;\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : Dictionary.ReasonError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidBlockDate: ValidBlockDate,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidBlockDate &&\r\n                        this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const blockedDriver = {\r\n            Token: sessionStorage.Token,\r\n            DriverID: this.props.Driver.DriverID,\r\n            BlockDate: this.state.BlockDate,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await blockDriverAccount(blockedDriver).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is blocked.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                const {\r\n                    Driver\r\n                } = this.props;\r\n\r\n                let phoneNumber = Driver.PhoneNumber.replace(\"+\", \"\");\r\n                let message = `Hi ${Driver.FirstName} ${Driver.LastName}! We have blocked your NAQEL account up to ${new Date(this.state.BlockDate).toDateString()}. REASON: ${this.state.Reason}. ~ Team NAQEL`;\r\n                message = message.replace(\" \", \"%20\");\r\n\r\n                window.open(`https://api.whatsapp.com/send?phone=${phoneNumber}&text=${message}`, \"_blank\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            BlockDate,\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`block-account-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.BlockDriver}</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\" dir={GetDirection()}>{Dictionary.YouAreGoingToBlock}\r\n                                                    <span className=\"color-default\">{` ${Driver.FirstName} ${Driver.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.BlockTill}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"BlockDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={BlockDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.BlockDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Reason}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.BlockNow} className=\"btn btn-danger\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        BlockDriver: \"سائق كتلة\",\r\n        YouAreGoingToBlock: \"أنت ذاهب لمنع\",\r\n        BlockTill: \"كتلة حتى\",\r\n        Reason: \"السبب\",\r\n        BlockNow: \"حظر الآن\",\r\n        BlockDateError1: \".التاريخ مطلوب\",\r\n        BlockDateError2: \".يجب أن يكون التاريخ بعد يوم أمس\",\r\n        ReasonError: \".السبب مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        BlockDriver: \"Block Driver\",\r\n        YouAreGoingToBlock: \"You are going to block\",\r\n        BlockTill: \"Block Till\",\r\n        Reason: \"Reason\",\r\n        BlockNow: \"Block Now\",\r\n        BlockDateError1: \"Date is required\",\r\n        BlockDateError2: \"Date must be later than yesterday.\",\r\n        ReasonError: \"Reason is required.\",\r\n    };\r\n}\r\n\r\nexport default BlockAccountDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { unblockDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass UnblockAccountDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onUnblock = this.onUnblock.bind(this);\r\n    }\r\n\r\n    onUnblock = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const unblockedDriver = {\r\n            Token: sessionStorage.Token,\r\n            DriverID: this.props.Driver.DriverID\r\n        };\r\n\r\n        await unblockDriverAccount(unblockedDriver).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is unblocked.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                const {\r\n                    Driver\r\n                } = this.props;\r\n\r\n                let phoneNumber = Driver.PhoneNumber.replace(\"+\", \"\");\r\n                let message = `Hi ${Driver.FirstName} ${Driver.LastName}! Your account has been unblocked. You can continue to use are services by now. ~ Team NAQEL`;\r\n                message = message.replace(\" \", \"%20\");\r\n\r\n                window.open(`https://api.whatsapp.com/send?phone=${phoneNumber}&text=${message}`, \"_blank\");\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`unblock-account-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{Dictionary.UnblockDriver}</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\" dir={GetDirection()}>{Dictionary.AreYouSure}\r\n                                                <span className=\"color-default\">{` ${Driver.FirstName} ${Driver.LastName}`}</span>.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onUnblock}>{Dictionary.Unblock}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        UnblockDriver: \"سائق فك الحظر\",\r\n        AreYouSure: \"هل أنت متأكد أنك تريد إلغاء الحظر\",\r\n        Unblock: \"رفع الحظر\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        UnblockDriver: \"Unblock Driver\",\r\n        AreYouSure: \"Are you sure you want to unblock\",\r\n        Unblock: \"Unblock\",\r\n    };\r\n}\r\n\r\nexport default UnblockAccountDialog;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../containers/truck/TruckContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport BlockAccountDialog from \"./BlockAccountDialog\";\r\nimport UnblockAccountDialog from \"./UnblockAccountDialog\";\r\nimport { activateDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass DriverListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onActivateAccount = this.onActivateAccount.bind(this);\r\n    }\r\n\r\n    onActivateAccount = async () => {\r\n        this.setState({\r\n            Refreshing: true\r\n        });\r\n\r\n        const activatedDriver = {\r\n            Token: sessionStorage.Token,\r\n            DriverID: this.props.Driver.DriverID\r\n        };\r\n\r\n        await activateDriverAccount(activatedDriver).then(async response => {\r\n            this.setState({\r\n                Refreshing: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is activated.\") {\r\n                this.props.OnAccountActivated(this.props.Driver);\r\n                await this.RefreshDriverContainer();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default p-xxs\">\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <img src={Driver.PhotoURL ? Driver.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                height=\"34\"\r\n                                width=\"34\"\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                    margin: \"0px\",\r\n                                    border: \"3px solid #3A3A3C\"\r\n                                }}/>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}\r\n                                {Refreshing ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                {Driver.IsBlocked ? <span class=\"type-h8 badge back-color-danger m-l-xxxs\">{Dictionary.Blocked}</span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-primary\">{`${Driver.FirstName} ${Driver.LastName}`}\r\n                                {Driver.Active ? <span className=\"fa fa-check-circle m-l-xxxs\" style={{ color: \"#25AE88\" }}></span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-secondary color-default\">{Driver.Username}</div>\r\n                            <div className=\"content-text-secondary\">{Driver.Email}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                {Driver.Active ? null : <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#activate-driver-dialog-${Index}`}>{Dictionary.Activate}</button>}\r\n\r\n                {Driver.IsBlocked ?\r\n                    <button className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#unblock-account-dialog-${Index}`}>{Dictionary.Unblock}</button> : \r\n                    <button className=\"btn btn-danger\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#block-account-dialog-${Index}`}>{Dictionary.Block}</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driver-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">{Dictionary.Details}\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`driver-list-item-${Index}`}>\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href={`#driver-${Index}`} aria-controls={`driver-${Index}`} role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshDriverContainer(); }}>{Dictionary.Driver}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href={`#truck-${Index}`} aria-controls={`truck-${Index}`} role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTruckContainer(); }}>{Dictionary.Truck}</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-${Index}`}>\r\n                        <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={Driver.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${Index}`}>\r\n                        <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={Driver.DriverID} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {Driver.Active ? \r\n                null : \r\n                <div className=\"modal modal-center-vertical\" id={`activate-driver-dialog-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.Activatemessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-primary\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onActivateAccount();\r\n                                                    }}>{Dictionary.Activate}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            {Driver.IsBlocked ?\r\n                <UnblockAccountDialog Index={Index}\r\n                    Driver={Driver}\r\n                    OnOK={() => {\r\n                        this.props.OnAccountBlocked(Driver, false);\r\n                    }} /> :\r\n                <BlockAccountDialog Index={Index}\r\n                    Driver={Driver}\r\n                    OnOK={() => {\r\n                        this.props.OnAccountBlocked(Driver, true);\r\n                    }} />}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        Blocked: \"محظور\",\r\n        Activate: \"تفعيل\",\r\n        Unblock: \"رفع الحظر\",\r\n        Block: \"منع\",\r\n        Details: \"تفاصيل\",\r\n        Driver: \"سائق\",\r\n        Truck: \"شاحنة\",\r\n        Activatemessage: \"هل أنت متأكد من أنك تريد تنشيط برنامج التشغيل هذا؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Blocked: \"BLOCKED\",\r\n        Activate: \"Activate\",\r\n        Unblock: \"Unblock\",\r\n        Block: \"Block\",\r\n        Details: \"Details\",\r\n        Driver: \"Driver\",\r\n        Truck: \"Truck\",\r\n        Activatemessage: \"Are you sure you want to activate this driver?\",\r\n    };\r\n}\r\n\r\nexport default DriverListItem;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport DriverListItem from \"./DriverListItem\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass DriversList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllDrivers: [],\r\n            Drivers: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"Drivers\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Drivers found.\") {\r\n                    this.setState({\r\n                        AllDrivers: response.Drivers,\r\n                        Drivers: response.Drivers,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllDrivers: [],\r\n                        Drivers: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Drivers: this.state.AllDrivers\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allDrivers = this.state.AllDrivers;\r\n        let filteredDrivers = [];\r\n        let count = 0;\r\n\r\n        for (let driver of allDrivers) {\r\n            if (driver.FirstName.includes(searchString) ||\r\n                driver.LastName.includes(searchString) ||\r\n                driver.Email.includes(searchString) ||\r\n                driver.Username.includes(searchString)) {\r\n                filteredDrivers[count++] = driver;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Drivers: filteredDrivers\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Drivers,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"DRIVERS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-car m-r-xxs m-l-xxs\"></span>{Dictionary.Drivers}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.NaqelDrivers}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchDriver}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(Drivers.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.Drivers} /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Drivers.map((driver, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <DriverListItem Index={index}\r\n                                Driver={driver}\r\n                                OnAccountActivated={driver => {\r\n                                    let drivers = Drivers;\r\n\r\n                                    for (let driverItem of drivers) {\r\n                                        if (driverItem === driver) {\r\n                                            driverItem.Active = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Drivers: drivers\r\n                                    });\r\n\r\n                                }}\r\n                                OnAccountBlocked={(driver, isBlocked) => {\r\n                                    let drivers = Drivers;\r\n\r\n                                    for (let driverItem of drivers) {\r\n                                        if (driverItem === driver) {\r\n                                            driverItem.IsBlocked = isBlocked;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Drivers: drivers\r\n                                    });\r\n                                }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        Drivers: \"السائقين\",\r\n        NaqelDrivers: \"سائقي النقل\",\r\n        SearchDriver: \"ابحث عن سائق\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Drivers: \"Drivers\",\r\n        NaqelDrivers: \"Naqel Drivers\",\r\n        SearchDriver: \"Search a Driver\"\r\n    };\r\n}\r\n\r\nexport default DriversList;","import React, { Component } from \"react\";\r\n\r\nclass PageHeading extends Component {\r\n    render() {\r\n        return <section>\r\n            <div style={{ backgroundColor: \"#1C6D6E\", padding: \"5px 5px 5px 20px\" }}>\r\n                <div className=\"sh1 color-light\" style={{ fontWeight: \"bold\" }}>{`/ ${this.props.Heading}`}</div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#26525F\" }}></div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PageHeading;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.IdentityCard}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.IDNumber}</div>\r\n                                                    <div className=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        IdentityCard: \"البطاقة الشخصية\",\r\n        IDNumber: \"رقم الهوية\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        IdentityCard: \"Identity Card\",\r\n        IDNumber: \"ID Number\"\r\n    };\r\n}\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\nimport DriversList from \"./DriversList\";\r\n\r\nclass Drivers extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriversList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Drivers;","import React, { Component } from \"react\";\r\n\r\nclass CommercialRegisterCertificateContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const commercialRegisterCertificate = this.props.CommercialRegisterCertificate;\r\n\r\n        return commercialRegisterCertificate ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={commercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.CommercialRegisterCertificate}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.CertificateNumber}</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Number}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.CertificateType}</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        CommercialRegisterCertificate: \"شهادة السجل التجاري\",\r\n        CertificateNumber: \"رقم شهادة\",\r\n        CertificateType: \"نوع الشهادة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        CommercialRegisterCertificate: \"Commercial Register Certificate\",\r\n        CertificateNumber: \"Certificate Number\",\r\n        CertificateType: \"Certificate Type\",\r\n    };\r\n}\r\n\r\nexport default CommercialRegisterCertificateContainer;","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{Dictionary.Documents}</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !traderDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Documents: \"مستندات\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Documents: \"Documents\"\r\n    };\r\n}\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass TraderContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.Refresh) {\r\n            this.props.Refresh(this.refresh);\r\n        }\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.Trader,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.Trader\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TraderProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor={Dictionary.Trader} />;\r\n        }\r\n        else {\r\n            const traderProfile = this.state.TraderProfile;\r\n            const trader = traderProfile;\r\n            const onJob = trader.OnJob;\r\n            const profilePhoto = trader.PhotoURL ?\r\n                trader.PhotoURL :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${trader.FirstName} ${trader.LastName}`}\r\n                                    {onJob ? <span class=\"badge back-color-golden m-l-xxs\">{Dictionary.OnJob}</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>{trader.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.Active}</div>\r\n                                                    <div className=\"content-text-secondary\">{(trader.Active) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className={(trader.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.Gender}</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.Birthday}</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.Nationality}</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.Email}</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">{Dictionary.PhoneNumber}</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                {this.props.TabView ? \r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>{Dictionary.Documents}</button>}\r\n                                        <a dir={GetDirection()} href={`https://api.whatsapp.com/send?phone=${trader.PhoneNumber.replace(\"+\", \"\")}`} \r\n                                        target=\"_blank\" className=\"btn btn-primary\">{Dictionary.ChatOnWhatsApp}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null : \r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        TraderID={this.props.TraderID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Trader: \"التاجر\",\r\n        OnJob: \"على الوظيفة\",\r\n        Active: \"نشيط\",\r\n        Gender: \"جنس\",\r\n        Birthday: \"عيد الميلاد\",\r\n        Nationality: \"الجنسية\",\r\n        Email: \"البريد الإلكتروني\",\r\n        PhoneNumber: \"رقم الهاتف\",\r\n        Documents: \"مستندات\",\r\n        ChatOnWhatsApp: \"الدردشة على WhatsApp\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Trader: \"Trader\",\r\n        OnJob: \"ON JOB\",\r\n        Active: \"Active\",\r\n        Gender: \"Gender\",\r\n        Birthday: \"Birthday\",\r\n        Nationality: \"Nationality\",\r\n        Email: \"Email\",\r\n        PhoneNumber: \"Phone Number\",\r\n        Documents: \"Documents\",\r\n        ChatOnWhatsApp: \"Chat on WhatsApp\"\r\n    };\r\n}\r\n\r\nexport default TraderContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { setRefundRate } from \"../../AdministratorFunctions\";\r\n\r\nclass SetRefundRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            RefundRate: this.props.Trader.TraderRefundRate ? this.props.Trader.TraderRefundRate.RefundRate : 0,\r\n\r\n            ValidRefundRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                RefundRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidRefundRate = this.state.ValidRefundRate;\r\n\r\n        switch (field) {\r\n            case \"RefundRate\":\r\n                ValidRefundRate = (value !== \"\");\r\n                Errors.RefundRate = ValidRefundRate ? \"\" : Dictionary.RefundRateError1;\r\n\r\n                if (Errors.RefundRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidRefundRate = (value >= 0 && value <= 100);\r\n                Errors.RefundRate = ValidRefundRate ? \"\" : Dictionary.RefundRateError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidRefundRate: ValidRefundRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidRefundRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const traderRefundRate = {\r\n            Token: sessionStorage.Token,\r\n            TraderID: this.props.Trader.TraderID,\r\n            RefundRate: this.state.RefundRate\r\n        };\r\n\r\n        await setRefundRate(traderRefundRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Refund rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.RefundRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            RefundRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-refund-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.RefundRate}</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\" dir={GetDirection()}>{Dictionary.ThisSets} \r\n                                                    <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.RefundRateField}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"RefundRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={RefundRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.RefundRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Set} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        RefundRate: \"معدل الاسترداد\",\r\n        ThisSets: \"يؤدي هذا إلى تعيين معدل النسبة المئوية للرد\",\r\n        RefundRateField: \"(٪)معدل الاسترداد\",\r\n        Set: \"Set\",\r\n        RefundRateError1: \".مطلوب سعر الاسترداد\",\r\n        RefundRateError2: \".يجب أن يكون معدل رد الأموال بين 0 و 100\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        RefundRate: \"Refund Rate\",\r\n        ThisSets: \"This sets refund percentage rate for\",\r\n        RefundRateField: \"Refund Rate (%)\",\r\n        Set: \"Set\",\r\n        RefundRateError1: \"Refund Rate is required.\",\r\n        RefundRateError2: \"Refund rate must be between 0 and 100.\"\r\n    };\r\n}\r\n\r\nexport default SetRefundRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { chargeTrader } from \"../../AdministratorFunctions\";\r\n\r\nclass ChargeTraderDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onCharge = this.onCharge.bind(this);\r\n    }\r\n\r\n    onCharge = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const chargedTrader = {\r\n            Token: sessionStorage.Token,\r\n            TraderID: this.props.Trader.TraderID\r\n        };\r\n\r\n        await chargeTrader(chargedTrader).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader is charged.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                const {\r\n                    Trader\r\n                } = this.props;\r\n\r\n                let phoneNumber = Trader.PhoneNumber.replace(\"+\", \"\");\r\n                let message = `Hi ${Trader.FirstName} ${Trader.LastName}! Your account has been removed form Exonerated Traders. Now, you will be charged. ~ Team NAQEL`;\r\n                message = message.replace(\" \", \"%20\");\r\n\r\n                window.open(`https://api.whatsapp.com/send?phone=${phoneNumber}&text=${message}`, \"_blank\");\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`charge-trader-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{Dictionary.ChargeTrader}</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\" dir={GetDirection()}>{Dictionary.AreYouSure}\r\n                                                <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>? {Dictionary.OnCharging}.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onCharge}>{Dictionary.Charge}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        ChargeTrader: \"تاجر المسؤول\",\r\n        AreYouSure: \"هل أنت متأكد من أنك تريد شحن\",\r\n        OnCharging: \"عند الشحن ، سيتم إزالة هذا التاجر من القائمة المبرئة\",\r\n        Charge: \"الشحنة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ChargeTrader: \"Charge Trader\",\r\n        AreYouSure: \"Are you sure you want to charge\",\r\n        OnCharging: \"On charging will remove this trader from exonerated list\",\r\n        Charge: \"Charge\",\r\n    };\r\n}\r\n\r\nexport default ChargeTraderDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { exonerateTrader } from \"../../AdministratorFunctions\";\r\n\r\nclass ExonerateTraderDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ExonerateDate: \"\",\r\n            Reason: \"\",\r\n\r\n            ValidExonerateDate: false,\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                ExonerateDate: \"\",\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidExonerateDate,\r\n            ValidReason\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"ExonerateDate\":\r\n                ValidExonerateDate = (value !== \"\");\r\n                Errors.ExonerateDate = ValidExonerateDate ? \"\" : Dictionary.ExonerateDateError1;\r\n\r\n                if (Errors.ExonerateDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidExonerateDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExonerateDate = ValidExonerateDate ? \"\" : Dictionary.ExonerateDateError2;\r\n                break;\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : Dictionary.ReasonError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidExonerateDate: ValidExonerateDate,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidExonerateDate &&\r\n                        this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const exoneratedTrader = {\r\n            Token: sessionStorage.Token,\r\n            TraderID: this.props.Trader.TraderID,\r\n            ExonerateDate: this.state.ExonerateDate,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await exonerateTrader(exoneratedTrader).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader is exonerated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                const {\r\n                    Trader\r\n                } = this.props;\r\n\r\n                let phoneNumber = Trader.PhoneNumber.replace(\"+\", \"\");\r\n                let message = `Hi ${Trader.FirstName} ${Trader.LastName}! We have exonerated your NAQEL account up to ${new Date(this.state.ExonerateDate).toDateString()}. REASON: ${this.state.Reason}. ~ Team NAQEL`;\r\n                message = message.replace(\" \", \"%20\");\r\n\r\n                window.open(`https://api.whatsapp.com/send?phone=${phoneNumber}&text=${message}`, \"_blank\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ExonerateDate,\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`exonerate-trader-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.ExonerateTrader}</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.YouAreGoing}\r\n                                                    <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.ExonerateTill}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ExonerateDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={ExonerateDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.ExonerateDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Reason}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.ExonerateNow} className=\"btn btn-danger\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        ExonerateTrader: \"تبرئ التاجر\",\r\n        YouAreGoing: \"سوف تبرئ\",\r\n        ExonerateTill: \"تبرئ حتى\",\r\n        Reason: \"السبب\",\r\n        ExonerateNow: \"تبرئ الآن\",\r\n        ExonerateDateError1: \".التاريخ مطلوب\",\r\n        ExonerateDateError2: \".يجب أن يكون التاريخ بعد يوم أمس\",\r\n        ReasonError: \".السبب مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ExonerateTrader: \"Exonerate Trader\",\r\n        YouAreGoing: \"You are going to exonerate\",\r\n        ExonerateTill: \"Exonerate Till\",\r\n        Reason: \"Reason\",\r\n        ExonerateNow: \"Exonerate Now\",\r\n        ExonerateDateError1: \"Date is required.\",\r\n        ExonerateDateError2: \"Date must be later than yesterday.\",\r\n        ReasonError: \"Reason is required.\",\r\n    };\r\n}\r\n\r\nexport default ExonerateTraderDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport TraderContainer from \"../../../../containers/trader/TraderContainer\";\r\nimport SetRefundRateDialog from \"./SetRefundRateDialog\";\r\nimport ChargeTraderDialog from \"./ChargeTraderDialog\";\r\nimport ExonerateTraderDialog from \"./ExonerateTraderDialog\";\r\n\r\nclass TraderListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default p-xxs\">\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <img src={Trader.PhotoURL ? Trader.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                height=\"34\"\r\n                                width=\"34\"\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                    margin: \"0px\",\r\n                                    border: \"3px solid #3A3A3C\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}\r\n                                {Refreshing ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-primary\">{`${Trader.FirstName} ${Trader.LastName}`}</div>\r\n                            <div className=\"content-text-secondary color-default\">{Trader.Username}</div>\r\n                            <div className=\"content-text-secondary\">{Trader.Email}</div>\r\n                            <div className=\"content-text-secondary\">{Trader.Type}</div>\r\n                            <div className=\"content-text-secondary\" dir={GetDirection()}>\r\n                                {Trader.TraderRefundRate ?\r\n                                    `${Dictionary.RefundRate}: ${Trader.TraderRefundRate.RefundRate}%` :\r\n                                    `${Dictionary.RefundRate}: ${Dictionary.NotSet}`}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#set-refund-rate-dialog-${Index}`}>{Dictionary.SetRefundRate}</button>\r\n\r\n                {Trader.IsExonerated ?\r\n                    <button className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#charge-trader-dialog-${Index}`}>{Dictionary.Charge}</button> :\r\n                    <button className=\"btn btn-danger\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#exonerate-trader-dialog-${Index}`}>{Dictionary.Exonerate}</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#trader-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">{Dictionary.Details}\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`trader-list-item-${Index}`}>\r\n                <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={Trader.TraderID} />\r\n            </div>\r\n\r\n            <SetRefundRateDialog Index={Index}\r\n                Trader={Trader}\r\n                OnOK={refundRate => {\r\n                    this.props.OnRefundRateSet(Trader, refundRate);\r\n                }} />\r\n\r\n            {Trader.IsExonerated ?\r\n                <ChargeTraderDialog Index={Index}\r\n                    Trader={Trader}\r\n                    OnOK={() => {\r\n                        this.props.OnTraderExonerated(Trader, false);\r\n                    }} /> :\r\n                <ExonerateTraderDialog Index={Index}\r\n                    Trader={Trader}\r\n                    OnOK={() => {\r\n                        this.props.OnTraderExonerated(Trader, true);\r\n                    }} />}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        RefundRate: \"معدل الاسترداد\",\r\n        NotSet: \"غير مضبوط\",\r\n        SetRefundRate: \"تعيين معدل الاسترداد\",\r\n        Charge: \"الشحنة\",\r\n        Exonerate: \"برأ\",\r\n        Details: \"تفاصيل\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        RefundRate: \"Refund Rate\",\r\n        NotSet: \"Not Set\",\r\n        SetRefundRate: \"Set Refund Rate\",\r\n        Charge: \"Charge\",\r\n        Exonerate: \"Exonerate\",\r\n        Details: \"Details\"\r\n    };\r\n}\r\n\r\nexport default TraderListItem;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport TraderListItem from \"./TraderListItem\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass TradersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTraders: [],\r\n            Traders: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"Traders\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Traders found.\") {\r\n                    this.setState({\r\n                        AllTraders: response.Traders,\r\n                        Traders: response.Traders,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTraders: [],\r\n                        Traders: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Traders: this.state.AllTraders\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allTraders = this.state.AllTraders;\r\n        let filteredTraders = [];\r\n        let count = 0;\r\n\r\n        for (let trader of allTraders) {\r\n            if (trader.FirstName.includes(searchString) ||\r\n                trader.LastName.includes(searchString) ||\r\n                trader.Email.includes(searchString) ||\r\n                trader.Username.includes(searchString)) {\r\n                filteredTraders[count++] = trader;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Traders: filteredTraders\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Traders,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"TRADERS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs m-l-xxs\"></span>{Dictionary.TradersAndBrokers}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.NaqelTradersandBrokers}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.Search}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Traders.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.TradersAndBrokers} /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Traders.map((trader, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <TraderListItem Index={index}\r\n                                Trader={trader}\r\n                                OnRefundRateSet={(trader, refundRate) => {\r\n                                    let traders = Traders;\r\n\r\n                                    for (let traderItem of traders) {\r\n                                        if (traderItem === trader) {\r\n                                            traderItem.TraderRefundRate = refundRate;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Traders: traders\r\n                                    });\r\n                                }}\r\n                                OnTraderExonerated={(trader, isExonerated) => {\r\n                                    let traders = Traders;\r\n\r\n                                    for (let traderItem of traders) {\r\n                                        if (traderItem === trader) {\r\n                                            traderItem.IsExonerated = isExonerated;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Traders: traders\r\n                                    });\r\n                                }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        TradersAndBrokers: \"التجار والوسطاء\",\r\n        NaqelTradersandBrokers: \"ناقيل للتجار والوسطاء\",\r\n        Search: \"بحث\",    \r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TradersAndBrokers: \"Traders and Brokers\",\r\n        NaqelTradersandBrokers: \"Naqel Traders and Brokers\",\r\n        Search: \"Search\",    \r\n    };\r\n}\r\n\r\nexport default TradersList;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addTraderObjectionReason } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddObjectionReasonDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"\",\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : Dictionary.ReasonError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTraderObjectionReason = {\r\n            Token: sessionStorage.Token,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await addTraderObjectionReason(newTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-trader-objection-reason-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.AddNewReason}</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Reason}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddNewReason: \"أضف سبب جديد\",\r\n        Reason: \"السبب\",\r\n        Add: \"أضف\",\r\n        ReasonError: \".السبب مطلوب\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddNewReason: \"Add New Reason\",\r\n        Reason: \"Reason\",\r\n        Add: \"Add\",\r\n        ReasonError: \"Reason is required.\"\r\n    };\r\n}\r\n\r\nexport default AddObjectionReasonDialog;","import React, { Component } from \"react\";\r\nimport TradersList from \"./TradersList\";\r\n\r\nclass Traders extends Component {\r\n    render() {\r\n        return <section>\r\n            <TradersList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Traders;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteTraderObjectionReason,\r\n    verifyTraderObjectionReason\r\n} from \"../../../../AdministratorFunctions\";\r\n\r\nclass ObjectionReasonListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onVerify = this.onVerify.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTraderObjectionReason = {\r\n            Token: sessionStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await deleteTraderObjectionReason(discardedTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is deleted.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    onVerify = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let verifiedTraderObjectionReason = {\r\n            Token: sessionStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await verifyTraderObjectionReason(verifiedTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is verified.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionReason\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>\r\n                {ObjectionReason.TraderID ?\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span> :\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>}\r\n            </td>\r\n            <td>{ObjectionReason.Reason}</td>\r\n            <td className=\"text-right\">\r\n                {ObjectionReason.TraderID ?\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#verify-trader-objection-reason-${Index}`}>{Dictionary.Verify}</button> : null}\r\n                <button className=\"btn btn-danger\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-trader-objection-reason-${Index}`}>{Dictionary.Delete}</button>\r\n\r\n                <div className=\"modal modal-center-vertical\" id={`delete-trader-objection-reason-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onDelete();\r\n                                                    }}>{Dictionary.Delete}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal modal-center-vertical\" id={`verify-trader-objection-reason-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.VerifyMessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-primary\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onVerify();\r\n                                                    }}>{Dictionary.Verify}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Verify: \"تحقق\",\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف سبب الاعتراض هذا؟\",\r\n        VerifyMessage: \"هل أنت متأكد أنك تريد التحقق من سبب الاعتراض هذا؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Verify: \"Verify\",\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this objection reason?\",\r\n        VerifyMessage: \"Are you sure you want to verify this objection reason?\",\r\n    };\r\n}\r\n\r\nexport default ObjectionReasonListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionReasonDialog from \"./AddObjectionReasonDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nimport ObjectionReasonListItem from \"./ObjectionReasonListItem\";\r\n\r\nclass ObjectionReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionReasons: [],\r\n            ObjectionReasons: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TraderObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader objection reasons found.\") {\r\n                    this.setState({\r\n                        AllObjectionReasons: response.ObjectionReasons,\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionReasons: [],\r\n                        ObjectionReasons: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionReasons: this.state.AllObjectionReasons\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionReasons = this.state.AllObjectionReasons;\r\n        let filteredObjectionReasons = [];\r\n        let count = 0;\r\n\r\n        for (let objectionReason of allObjectionReasons) {\r\n            if (objectionReason.Reason.includes(searchString)) {\r\n                filteredObjectionReasons[count++] = objectionReason;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionReasons: filteredObjectionReasons\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionReasons,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-comment-dots m-r-xxs m-l-xxs\"></span>{Dictionary.TraderObjectionReasons}</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-trader-objection-reason-dialog`}>{Dictionary.AddNew}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddObjectionReasonDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.ObjectionReasons}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.Search}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(ObjectionReasons.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.ObjectionReasons} /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.Verified}</th>\r\n                                <th>{Dictionary.Reason}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {ObjectionReasons.map((objectionReason, index) => {\r\n                                return <ObjectionReasonListItem key={index}\r\n                                    Index={index}\r\n                                    ObjectionReason={objectionReason}\r\n                                    OnObjectionReasonUpdated={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TraderObjectionReasons: \"أسباب اعتراض التاجر\",\r\n        AddNew: \"اضف جديد\",\r\n        ObjectionReasons: \"أسباب الاعتراض\",\r\n        Search: \"بحث\",\r\n        Number: \"رقم\",\r\n        Verified: \"تم التحقق\",\r\n        Reason: \"السبب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TraderObjectionReasons: \"Trader Objection Reasons\",\r\n        AddNew: \"Add New\",\r\n        ObjectionReasons: \"Objection Reasons\",\r\n        Search: \"Search\",\r\n        Number: \"NUMBER\",\r\n        Verified: \"VERIFIED\",\r\n        Reason: \"REASON\",\r\n    };\r\n}\r\n\r\nexport default ObjectionReasonsList;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addDriverObjectionReason } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddObjectionReasonDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"\",\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : Dictionary.ReasonError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverObjectionReason = {\r\n            Token: sessionStorage.Token,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await addDriverObjectionReason(newDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-driver-objection-reason-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.AddNewReason}</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Reason}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddNewReason: \"أضف سبب جديد\",\r\n        Reason: \"السبب\",\r\n        Add: \"أضف\",\r\n        ReasonError: \".السبب مطلوب\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddNewReason: \"Add New Reason\",\r\n        Reason: \"Reason\",\r\n        Add: \"Add\",\r\n        ReasonError: \"Reason is required.\"\r\n    };\r\n}\r\n\r\nexport default AddObjectionReasonDialog;","import React, { Component } from \"react\";\r\nimport ObjectionReasonsList from \"./ObjectionReasonsList\";\r\n\r\nclass TraderObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionReasonsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderObjectionReasons;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteDriverObjectionReason,\r\n    verifyDriverObjectionReason\r\n} from \"../../../../AdministratorFunctions\";\r\n\r\nclass ObjectionReasonListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onVerify = this.onVerify.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedDriverObjectionReason = {\r\n            Token: sessionStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await deleteDriverObjectionReason(discardedDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is deleted.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    onVerify = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let verifiedDriverObjectionReason = {\r\n            Token: sessionStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await verifyDriverObjectionReason(verifiedDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is verified.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionReason\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>\r\n                {ObjectionReason.DriverID ?\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span> :\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>}\r\n            </td>\r\n            <td>{ObjectionReason.Reason}</td>\r\n            <td className=\"text-right\">\r\n                {ObjectionReason.DriverID ?\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#verify-driver-objection-reason-${Index}`}>{Dictionary.Verify}</button> : null}\r\n                <button className=\"btn btn-danger\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-driver-objection-reason-${Index}`}>{Dictionary.Delete}</button>\r\n\r\n                <div className=\"modal modal-center-vertical\" id={`delete-driver-objection-reason-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onDelete();\r\n                                                    }}>{Dictionary.Delete}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal modal-center-vertical\" id={`verify-driver-objection-reason-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.VerifyMessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-primary\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onVerify();\r\n                                                    }}>{Dictionary.Verify}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Verify: \"تحقق\",\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف سبب الاعتراض هذا؟\",\r\n        VerifyMessage: \"هل أنت متأكد أنك تريد التحقق من سبب الاعتراض هذا؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Verify: \"Verify\",\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this objection reason?\",\r\n        VerifyMessage: \"Are you sure you want to verify this objection reason?\",\r\n    };\r\n}\r\n\r\nexport default ObjectionReasonListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionReasonDialog from \"./AddObjectionReasonDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nimport ObjectionReasonListItem from \"./ObjectionReasonListItem\";\r\n\r\nclass ObjectionReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionReasons: [],\r\n            ObjectionReasons: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"DriverObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver objection reasons found.\") {\r\n                    this.setState({\r\n                        AllObjectionReasons: response.ObjectionReasons,\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionReasons: [],\r\n                        ObjectionReasons: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionReasons: this.state.AllObjectionReasons\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionReasons = this.state.AllObjectionReasons;\r\n        let filteredObjectionReasons = [];\r\n        let count = 0;\r\n\r\n        for (let objectionReason of allObjectionReasons) {\r\n            if (objectionReason.Reason.includes(searchString)) {\r\n                filteredObjectionReasons[count++] = objectionReason;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionReasons: filteredObjectionReasons\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionReasons,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-comment-dots m-r-xxs m-l-xxs\"></span>{Dictionary.DriverObjectionReasons}</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-driver-objection-reason-dialog`}>{Dictionary.AddNew}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddObjectionReasonDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.ObjectionReasons}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.Search}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(ObjectionReasons.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.ObjectionReasons} /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.Verified}</th>\r\n                                <th>{Dictionary.Reason}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {ObjectionReasons.map((objectionReason, index) => {\r\n                                return <ObjectionReasonListItem key={index}\r\n                                    Index={index}\r\n                                    ObjectionReason={objectionReason}\r\n                                    OnObjectionReasonUpdated={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        DriverObjectionReasons: \"أسباب اعتراض السائق\",\r\n        AddNew: \"اضف جديد\",\r\n        ObjectionReasons: \"أسباب الاعتراض\",\r\n        Search: \"بحث\",\r\n        Number: \"رقم\",\r\n        Verified: \"تم التحقق\",\r\n        Reason: \"السبب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        DriverObjectionReasons: \"Driver Objection Reasons\",\r\n        AddNew: \"Add New\",\r\n        ObjectionReasons: \"Objection Reasons\",\r\n        Search: \"Search\",\r\n        Number: \"NUMBER\",\r\n        Verified: \"VERIFIED\",\r\n        Reason: \"REASON\",\r\n    };\r\n}\r\n\r\nexport default ObjectionReasonsList;","import React, { Component } from \"react\";\r\nimport TraderObjectionReasons from \"./traderObjectionReasons/TraderObjectionReasons\";\r\nimport DriverObjectionReasons from \"./driverObjectionReasons/DriverObjectionReasons\";\r\n\r\nclass ObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#trader-objection-reasons\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TraderObjectionReasons}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#driver-objection-reasons\" aria-controls=\"trader-tab\" role=\"tab\" data-toggle=\"tab\">{Dictionary.DriverObjectionReasons}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"trader-objection-reasons\">\r\n                    <TraderObjectionReasons />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-objection-reasons\">\r\n                    <DriverObjectionReasons />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TraderObjectionReasons: \"أسباب اعتراض التاجر\",\r\n        DriverObjectionReasons: \"أسباب اعتراض السائق\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TraderObjectionReasons: \"Trader Objection Reasons\",\r\n        DriverObjectionReasons: \"Driver Objection Reasons\",\r\n    };\r\n}\r\n\r\nexport default ObjectionReasons;","import React, { Component } from \"react\";\r\nimport ObjectionReasonsList from \"./ObjectionReasonsList\";\r\n\r\nclass DriverObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionReasonsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverObjectionReasons;","import React, { Component } from \"react\";\r\n\r\nclass JobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const onGoingJob = this.props.OnGoingJob;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            {(index !== null && (index >= 0)) ? `${index + 1}. ${Dictionary.JobDetails}` : Dictionary.JobDetails}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.LoadingPlace}</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.LoadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.UnloadingPlace}</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.UnloadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.TripType}</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.AcceptedDelay}</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.CargoType}</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.CargoWeight}</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.CargoWeight} KG.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.LoadingDate}</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.LoadingTime}</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.EntryExit}t</div>\r\n                                        <div className=\"content-text-secondary\">{(onGoingJob.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.StartedOn}</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.StartedAt}</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">{Dictionary.JobNumber}</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        JobDetails: \"تفاصيل الوظيفة\",\r\n        LoadingPlace: \"مكان التحميل\",\r\n        UnloadingPlace: \"مكان التفريغ\",\r\n        TripType: \"نوع الرحلة\",\r\n        AcceptedDelay: \"تأخير مقبول\",\r\n        CargoType: \"نوع البضائع\",\r\n        CargoWeight: \"وزن البضائع\",\r\n        LoadingDate: \"تاريخ التحميل\",\r\n        LoadingTime: \"وقت التحميل\",\r\n        EntryExit: \"الدخول / الخروج\",\r\n        StartedOn: \"بدأ في\",\r\n        StartedAt: \"بدأت في\",\r\n        JobNumber: \"رقم الوظيفة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        JobDetails: \"Job Details\",\r\n        LoadingPlace: \"Loading Place\",\r\n        UnloadingPlace: \"Unloading Place\",\r\n        TripType: \"Trip Type\",\r\n        AcceptedDelay: \"Accpeted Delay\",\r\n        CargoType: \"Cargo Type\",\r\n        CargoWeight: \"Cargo Weight\",\r\n        LoadingDate: \"Loading Date\",\r\n        LoadingTime: \"Loading Time\",\r\n        EntryExit: \"Entry/Exit\",\r\n        StartedOn: \"Started on\",\r\n        StartedAt: \"Started at\",\r\n        JobNumber: \"Job Number\"\r\n    };\r\n}\r\n\r\nexport default JobContainer;","import React, { Component } from \"react\";\r\n\r\nclass JobObjectionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            JobObjection\r\n        } = this.props;\r\n\r\n        let createdOn = new Date(JobObjection.Created);\r\n        let objectionBy = JobObjection.ObjectionBy;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}</div>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    {objectionBy.Type === \"Driver\" ? \r\n                                        <span className=\"fas fa-car m-r-xxxs\"></span> : \r\n                                        <span className=\"fas fa-briefcase m-r-xxxs\"></span>}\r\n                                    {`${objectionBy.FirstName} ${objectionBy.LastName}`}\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">{objectionBy.Username}</div>\r\n                                <div className=\"content-text-secondary\">{`${Dictionary.PostedOn} ${createdOn.toDateString()}.`}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-thumbs-down\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{Dictionary.Objection}</div>\r\n                                <div className=\"content-text-secondary\">{Dictionary.Reason}: {JobObjection.Reason}</div>\r\n                                <div className=\"content-text-secondary\">{`${Dictionary.Comment}: ${JobObjection.Comment}`}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Objection: \"اعتراض\",\r\n        PostedOn: \"نشر على\",\r\n        Reason: \"السبب\",\r\n        Comment: \"تعليق\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Objection: \"Objection\",\r\n        PostedOn: \"Posted on\",\r\n        Reason: \"Reason\",\r\n        Comment: \"Comment\"\r\n    };\r\n}\r\n\r\nexport default JobObjectionContainer;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjections: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objections found.\") {\r\n                    this.props.OnObjectionsFound(response.JobObjections.length);\r\n\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            JobObjections,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {(JobObjections.length === 0) ?\r\n                <SearchingContainer Searching={Searching}\r\n                    SearchingFor={Dictionary.JobObjections} /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {JobObjections.map((jobObjection, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index} JobObjection={jobObjection} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        JobObjections: \"اعتراضات الوظيفة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        JobObjections: \"Job Objections\"\r\n    };\r\n}\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { discardObjectionableJob } from \"../../../AdministratorFunctions\";\r\n\r\nclass DiscardObjectionableJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDiscard = this.onDiscard.bind(this);\r\n    }\r\n\r\n    onDiscard = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedObjectionableJob = {\r\n            Token: sessionStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID\r\n        };\r\n\r\n        await discardObjectionableJob(discardedObjectionableJob).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objectionable job is discarded.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            JobNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`discard-objectionable-job-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{`${Dictionary.DiscardJob} ${JobNumber}`}</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">{Dictionary.DiscardJobDetails}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-danger\" onClick={this.onDiscard}>{Dictionary.Discard}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        DiscardJob: \"تجاهل المهمة المرفوضة\",\r\n        DiscardJobDetails: \"تأكد من أنك اتخذت جميع الإجراءات الضرورية قبل تشويه سمعة هذه الوظيفة. هل انت متأكد انك تريد المتابعة؟\",\r\n        Discard: \"تجاهل\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        DiscardJob: \"Discard Objectionable Job\",\r\n        DiscardJobDetails: \"Make sure you have taken all the neccesary actions before discrding this job. Are you sure you want to proceed?\",\r\n        Discard: \"Discard\"\r\n    };\r\n}\r\n\r\nexport default DiscardObjectionableJobDialog;","import React, { Component } from \"react\";\r\nimport OnGoingJobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\nimport Objections from \"./jobObjections/Objections\";\r\nimport DiscardObjectionableJobDialog from \"./DiscardObjectionableJobDialog\";\r\n\r\nclass ObjectionableJobListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false,\r\n            NumberOfObjections: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NumberOfObjections\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionableJob\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <OnGoingJobContainer Index={Index} OnGoingJob={ObjectionableJob} />\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#discard-objectionable-job-dialog-${Index}`}>{Dictionary.Discard}</button>\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#objections-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxs\">{NumberOfObjections}</span>{Dictionary.Objections}\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`objections-${Index}`}>\r\n                <Objections OnGoingJobID={ObjectionableJob.OnGoingJobID}\r\n                    OnObjectionsFound={numberOfObjections => {\r\n                        this.setState({\r\n                            NumberOfObjections: numberOfObjections\r\n                        });\r\n                    }} />\r\n            </div>\r\n\r\n            <DiscardObjectionableJobDialog Index={Index}\r\n                OnGoingJobID={ObjectionableJob.OnGoingJobID}\r\n                JobNumber={ObjectionableJob.JobNumber}\r\n                OnOK={this.props.OnJobDiscarded}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Discard: \"تجاهل\",\r\n        Objections: \"اعتراضات\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Discard: \"Discard\",\r\n        Objections: \"Objections\"\r\n    };\r\n}\r\n\r\nexport default ObjectionableJobListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport ObjectionableJobListItem from \"./ObjectionableJobListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass ObjectionableJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionableJobs: [],\r\n            ObjectionableJobs: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"ObjectionableJobs\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objectionable jobs found.\") {\r\n                    this.setState({\r\n                        AllObjectionableJobs: response.ObjectionableJobs,\r\n                        ObjectionableJobs: response.ObjectionableJobs,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionableJobs: [],\r\n                        ObjectionableJobs: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionableJobs: this.state.AllObjectionableJobs\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionableJobs = this.state.AllObjectionableJobs;\r\n        let filteredObjectionableJobs = [];\r\n        let count = 0;\r\n\r\n        for (let objectionableJob of allObjectionableJobs) {\r\n            if (objectionableJob.JobNumber.includes(searchString)) {\r\n                filteredObjectionableJobs[count++] = objectionableJob;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionableJobs: filteredObjectionableJobs\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionableJobs,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down m-r-xxs m-l-xxs\"></span>{Dictionary.ObjectionableJobs}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.ObjectionableJobs}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchByJobNumber}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(ObjectionableJobs.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.ObjectionableJobs} /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {ObjectionableJobs.map((objectionableJob, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <ObjectionableJobListItem Index={index}\r\n                                ObjectionableJob={objectionableJob}\r\n                                OnJobDiscarded={async () => { await this.onComponentUpdated(); }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ObjectionableJobs: \"الوظائف المرفوضة\",\r\n        SearchByJobNumber: \"البحث برقم الوظيفة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ObjectionableJobs: \"Objectionable Jobs\",\r\n        SearchByJobNumber: \"Search by Job Number\",\r\n    };\r\n}\r\n\r\nexport default ObjectionableJobsList;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteWaitingTime\r\n} from \"../../../AdministratorFunctions\";\r\n\r\nclass WaitingTimeRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedWaitingTime = {\r\n            Token: sessionStorage.Token,\r\n            WaitingTimeID: this.props.WaitingTime.WaitingTimeID\r\n        };\r\n\r\n        await deleteWaitingTime(discardedWaitingTime).then(response => {\r\n            console.log(\"DELETE RESPONSE\");\r\n            console.log(response);\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Waiting time is deleted.\") {\r\n                this.props.OnWaitingTimeDeleted();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            WaitingTime\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>{`${WaitingTime.WaitingTime} ${Dictionary.Hours}`}</td>\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-danger\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-waiting-time-dialog-${Index}`}>{Dictionary.Delete}</button>\r\n\r\n                <div className=\"modal modal-center-vertical\" id={`delete-waiting-time-dialog-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onDelete();\r\n                                                    }}>{Dictionary.Delete}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Hours: \"ساعات\",\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف وقت الانتظار هذا؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Hours: \"Hours\",\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this waiting time?\",\r\n    };\r\n}\r\n\r\nexport default WaitingTimeRow;","import React, { Component } from \"react\";\r\nimport ObjectionableJobsList from \"./ObjectionableJobsList\";\r\n\r\nclass ObjectionableJobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionableJobsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionableJobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addWaitingTime } from \"../../../AdministratorFunctions\";\r\n\r\nclass AddWaitingTimeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            WaitingTime: \"\",\r\n            ValidWaitingTime: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                WaitingTime: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidWaitingTime\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"WaitingTime\":\r\n                ValidWaitingTime = (value !== \"\");\r\n                Errors.WaitingTime = ValidWaitingTime ? \"\" : Dictionary.WaitingTimeError1;\r\n\r\n                if (!ValidWaitingTime) {\r\n                    break;\r\n                }\r\n\r\n                ValidWaitingTime = (value >= 48);\r\n                Errors.WaitingTime = ValidWaitingTime ? \"\" : Dictionary.WaitingTimeError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidWaitingTime: ValidWaitingTime,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidWaitingTime\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newWaitingTime = {\r\n            Token: sessionStorage.Token,\r\n            WaitingTime: this.state.WaitingTime\r\n        };\r\n\r\n        await addWaitingTime(newWaitingTime).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Waiting time is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                this.setState({\r\n                    WaitingTime: \"\",\r\n                    ValidWaitingTime: false,\r\n        \r\n                    ValidForm: false,\r\n                    ShowPreloader: false,\r\n        \r\n                    Errors: {\r\n                        WaitingTime: \"\"\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            WaitingTime,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-waiting-time-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.AddNewWaitingTime}</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.WaitingTime}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"WaitingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={WaitingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.WaitingTime}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddNewWaitingTime: \"أضف وقت انتظار جديد\",\r\n        WaitingTime: \"وقت الانتظار\",\r\n        Add: \"أضف\",\r\n        WaitingTimeError1: \".مطلوب وقت الانتظار\",\r\n        WaitingTimeError2: \".يجب أن يكون وقت الانتظار أكبر من 47 ساعة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddNewWaitingTime: \"Add New Waiting Time\",\r\n        WaitingTime: \"Waiting Time\",\r\n        Add: \"Add\",\r\n        WaitingTimeError1: \"Waiting time is required.\",\r\n        WaitingTimeError2: \"Waiting time must be greater than 47 hours.\"\r\n    };\r\n}\r\n\r\nexport default AddWaitingTimeDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport WaitingTimeRow from \"./WaitingTimeRow\";\r\nimport AddWaitingTimeDialog from \"./AddWaitingTimeDialog\";\r\nimport { getPublicData } from \"../../../../shared/UserFunctions\";\r\n\r\nclass WaitingTimesTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            WaitingTimes: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"WaitingTimes\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Waiting times found.\") {\r\n                    this.setState({\r\n                        WaitingTimes: response.WaitingTimes,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        WaitingTimes: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            WaitingTimes,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-hourglass m-r-xxs m-l-xxs\"></span>{Dictionary.JobWaitingTimes}</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-waiting-time-dialog`}>{Dictionary.AddNew}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddWaitingTimeDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.WaitingTimes}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(WaitingTimes.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.WaitingTimes} /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.WaitingTime}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {WaitingTimes.map((waitingTime, index) => {\r\n                                return <WaitingTimeRow key={index}\r\n                                    Index={index}\r\n                                    WaitingTime={waitingTime}\r\n                                    OnWaitingTimeDeleted={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        JobWaitingTimes: \"أوقات انتظار الوظيفة\",\r\n        AddNew: \"اضف جديد\",\r\n        WaitingTimes: \"أوقات الانتظار\",\r\n        Number: \"رقم\",\r\n        WaitingTime: \"وقت الانتظار\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        JobWaitingTimes: \"Job Waiting Times\",\r\n        AddNew: \"Add New\",\r\n        WaitingTimes: \"Waiting Times\",\r\n        Number: \"NUMBER\",\r\n        WaitingTime: \"WAITING TIME\"\r\n    };\r\n}\r\n\r\nexport default WaitingTimesTable;","import React, { Component } from \"react\";\r\nimport ObjectionReasons from \"./objectionReasons/ObjectionReasons\";\r\nimport ObjectionableJobs from \"./objectionableJobs/ObjectionableJobs\";\r\nimport WaitingTimes from \"./waitingTImes/WaitingTimes\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#objection-reasons\" aria-controls=\"objection-reasons\" role=\"tab\" data-toggle=\"tab\">{Dictionary.ObjectionReasons}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#objectionable-jobs\" aria-controls=\"objectionable-jobs\" role=\"tab\" data-toggle=\"tab\">{Dictionary.ObjectionableJobs}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#waiting-times\" aria-controls=\"waiting-times\" role=\"tab\" data-toggle=\"tab\">{Dictionary.WaitingTimes}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"objection-reasons\">\r\n                    <ObjectionReasons />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"objectionable-jobs\">\r\n                    <ObjectionableJobs />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"waiting-times\">\r\n                    <WaitingTimes />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ObjectionReasons: \"أسباب الاعتراض\",\r\n        ObjectionableJobs: \"الوظائف المرفوضة\",\r\n        WaitingTimes: \"أوقات انتظار الوظيفة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ObjectionReasons: \"Objection Reasons\",\r\n        ObjectionableJobs: \"Objectionable Jobs\",\r\n        WaitingTimes: \"Job Waiting Times\"\r\n    };\r\n}\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport WaitingTimesTable from \"./WaitingTimesTable\";\r\n\r\nclass WaitingTimes extends Component {\r\n    render() {\r\n        return <section>\r\n            <WaitingTimesTable />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default WaitingTimes;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteTruckSize\r\n} from \"../../../AdministratorFunctions\";\r\n\r\nclass TruckSizeRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTruckSize = {\r\n            Token: sessionStorage.Token,\r\n            TruckSizeID: this.props.TruckSize.TruckSizeID\r\n        };\r\n\r\n        await deleteTruckSize(discardedTruckSize).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Truck size is deleted.\") {\r\n                this.props.OnTruckSizeDeleted();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ShowDeleteButton,\r\n            TruckSize\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>{`${TruckSize.TruckSize} KG`}</td>\r\n            <td className=\"text-right\">\r\n                {ShowDeleteButton ? \r\n                <button className=\"btn btn-danger\"\r\n                data-toggle=\"modal\"\r\n                data-target={`#delete-truck-size-dialog-${Index}`}>{Dictionary.Delete}</button> : null}\r\n\r\n                {ShowDeleteButton ? \r\n                <div className=\"modal modal-center-vertical\" id={`delete-truck-size-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <button className=\"btn btn-danger\"\r\n                                                onClick={async () => {\r\n                                                    this.cancelButton.click();\r\n                                                    await this.onDelete();\r\n                                                }}>{Dictionary.Delete}</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف حجم الشاحنة هذا؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this truck size?\",\r\n    };\r\n}\r\n\r\nexport default TruckSizeRow;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTruckSize } from \"../../../AdministratorFunctions\";\r\n\r\nclass AddTruckSizeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckSize: \"\",\r\n            ValidTruckSize: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                TruckSize: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidTruckSize\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"TruckSize\":\r\n                ValidTruckSize = (value !== \"\");\r\n                Errors.TruckSize = ValidTruckSize ? \"\" : Dictionary.TruckSizeError1;\r\n\r\n                if (!ValidTruckSize) {\r\n                    break;\r\n                }\r\n\r\n                ValidTruckSize = (value >= 700);\r\n                Errors.TruckSize = ValidTruckSize ? \"\" : Dictionary.TruckSizeError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidTruckSize: ValidTruckSize,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidTruckSize\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTruckSize = {\r\n            Token: sessionStorage.Token,\r\n            TruckSize: this.state.TruckSize\r\n        };\r\n\r\n        await addTruckSize(newTruckSize).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Truck size is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                this.setState({\r\n                    TruckSize: \"\",\r\n                    ValidTruckSize: false,\r\n        \r\n                    ValidForm: false,\r\n                    ShowPreloader: false,\r\n        \r\n                    Errors: {\r\n                        TruckSize: \"\"\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TruckSize,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-truck-size-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.AddNewTruckSize}</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.TruckSize}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"TruckSize\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={TruckSize} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.TruckSize}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddNewTruckSize: \"إضافة حجم شاحنة جديد\",\r\n        TruckSize: \"(حجم الشاحنة (كغالعلامة\",\r\n        Add: \"أضف\",\r\n        TruckSizeError1: \".حجم الشاحنة مطلوب\",\r\n        TruckSizeError2: \".يجب أن يكون حجم الشاحنة أكبر من 699 كجم\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddNewTruckSize: \"Add New Truck Size\",\r\n        TruckSize: \"Truck Size (KG)\",\r\n        Add: \"Add\",\r\n        TruckSizeError1: \"Truck size is required.\",\r\n        TruckSizeError2: \"Truck size must be greater than 699 KG.\"\r\n    };\r\n}\r\n\r\nexport default AddTruckSizeDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TruckSizeRow from \"./TruckSizeRow\";\r\nimport AddTruckSizeDialog from \"./AddTruckSizeDialog\";\r\nimport { getPublicData } from \"../../../../shared/UserFunctions\";\r\n\r\nclass TruckSizesTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckSizes: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TruckSizes\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck sizes found.\") {\r\n                    this.setState({\r\n                        TruckSizes: response.TruckSizes,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckSizes: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            TruckSizes,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const ShowDeleteButton = TruckSizes.length > 1 ? true : false;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck m-r-xxs m-l-xxs\"></span>{Dictionary.TruckSizes}</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-truck-size-dialog`}>{Dictionary.AddNew}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddTruckSizeDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.TruckSizes}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(TruckSizes.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.TruckSizes} /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.Size}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {TruckSizes.map((truckSize, index) => {\r\n                                return <TruckSizeRow key={index}\r\n                                    Index={index}\r\n                                    TruckSize={truckSize}\r\n                                    ShowDeleteButton={ShowDeleteButton}\r\n                                    OnTruckSizeDeleted={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TruckSizes: \"أحجام الشاحنات\",\r\n        AddNew: \"اضف جديد\",\r\n        Number: \"رقم\",\r\n        Size: \"بحجم\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TruckSizes: \"Truck Sizes\",\r\n        AddNew: \"Add New\",\r\n        Number: \"NUMBER\",\r\n        Size: \"SIZE\"\r\n    };\r\n}\r\n\r\nexport default TruckSizesTable;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteTruckType\r\n} from \"../../../AdministratorFunctions\";\r\n\r\nclass TruckTypeRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTruckType = {\r\n            Token: sessionStorage.Token,\r\n            TruckTypeID: this.props.TruckType.TruckTypeID\r\n        };\r\n\r\n        await deleteTruckType(discardedTruckType).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Truck type is deleted.\") {\r\n                this.props.OnTruckTypeDeleted();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ShowDeleteButton,\r\n            TruckType\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>{TruckType.TruckType}</td>\r\n            <td className=\"text-right\">\r\n                {ShowDeleteButton ? \r\n                <button className=\"btn btn-danger\"\r\n                data-toggle=\"modal\"\r\n                data-target={`#delete-truck-type-dialog-${Index}`}>{Dictionary.Delete}</button> : null}\r\n\r\n                {ShowDeleteButton ? \r\n                <div className=\"modal modal-center-vertical\" id={`delete-truck-type-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <button className=\"btn btn-danger\"\r\n                                                onClick={async () => {\r\n                                                    this.cancelButton.click();\r\n                                                    await this.onDelete();\r\n                                                }}>{Dictionary.Delete}</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف هذا النوع من الشاحنات؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this truck type?\",\r\n    };\r\n}\r\n\r\nexport default TruckTypeRow;","import React, { Component } from \"react\";\r\nimport TruckSizesTable from \"./TruckSizesTable\";\r\n\r\nclass TruckSizes extends Component {\r\n    render() {\r\n        return <section>\r\n            <TruckSizesTable />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckSizes;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTruckType } from \"../../../AdministratorFunctions\";\r\n\r\nclass AddTruckTypeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckType: \"\",\r\n            ValidTruckType: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                TruckType: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidTruckType\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"TruckType\":\r\n                ValidTruckType = (value !== \"\");\r\n                Errors.TruckType = ValidTruckType ? \"\" : Dictionary.TruckTypeError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidTruckType: ValidTruckType,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidTruckType\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTruckType = {\r\n            Token: sessionStorage.Token,\r\n            TruckType: this.state.TruckType\r\n        };\r\n\r\n        await addTruckType(newTruckType).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Truck type is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                this.setState({\r\n                    TruckType: \"\",\r\n                    ValidTruckType: false,\r\n        \r\n                    ValidForm: false,\r\n                    ShowPreloader: false,\r\n        \r\n                    Errors: {\r\n                        TruckType: \"\"\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TruckType,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-truck-type-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.AddNewWaitingTime}</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.TruckType}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"TruckType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={TruckType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.TruckType}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddNewWaitingTime: \"إضافة نوع شاحنة جديدة\",\r\n        TruckType: \"نوع الشاحنة\",\r\n        Add: \"أضف\",\r\n        WaitingTimeError1: \".نوع الشاحنة مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddNewWaitingTime: \"Add New Truck Type\",\r\n        TruckType: \"Truck Type\",\r\n        Add: \"Add\",\r\n        WaitingTimeError1: \"Truck type is required.\",\r\n    };\r\n}\r\n\r\nexport default AddTruckTypeDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TruckTypeRow from \"./TruckTypeRow\";\r\nimport AddTruckTypeDialog from \"./AddTruckTypeDialog\";\r\nimport { getPublicData } from \"../../../../shared/UserFunctions\";\r\n\r\nclass TruckTypesTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckTypes: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TruckTypes\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck types found.\") {\r\n                    this.setState({\r\n                        TruckTypes: response.TruckTypes,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckTypes: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            TruckTypes,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const ShowDeleteButton = TruckTypes.length > 1 ? true : false;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck m-r-xxs m-l-xxs\"></span>{Dictionary.TruckTypes}</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-truck-type-dialog`}>{Dictionary.AddNew}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddTruckTypeDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.TruckTypes}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(TruckTypes.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.TruckTypes} /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.Type}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {TruckTypes.map((truckType, index) => {\r\n                                return <TruckTypeRow key={index}\r\n                                    Index={index}\r\n                                    TruckType={truckType}\r\n                                    ShowDeleteButton={ShowDeleteButton}\r\n                                    OnTruckTypeDeleted={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TruckTypes: \"أنواع الشاحنات\",\r\n        AddNew: \"اضف جديد\",\r\n        WaitingTimes: \"أوقات الانتظار\",\r\n        Number: \"رقم\",\r\n        Type: \"اكتب\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TruckTypes: \"Truck Types\",\r\n        AddNew: \"Add New\",\r\n        Number: \"NUMBER\",\r\n        Type: \"TYPE\"\r\n    };\r\n}\r\n\r\nexport default TruckTypesTable;","import React, { Component } from \"react\";\r\nimport TruckSizes from \"./truckSizes/TruckSizes\";\r\nimport TruckTypes from \"./truckTypes/TruckTypes\";\r\n\r\nclass Trucks extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#truck-sizes\" aria-controls=\"truck-sizes\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TruckSizes}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#truck-types\" aria-controls=\"truck-types\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TruckTypes}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"truck-sizes\">\r\n                    <TruckSizes />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"truck-types\">\r\n                    <TruckTypes />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TruckSizes: \"أحجام الشاحنات\",\r\n        TruckTypes: \"أنواع الشاحنات\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TruckSizes: \"Truck Sizes\",\r\n        TruckTypes: \"Truck Types\"\r\n    };\r\n}\r\n\r\nexport default Trucks;","import React, { Component } from \"react\";\r\nimport TruckTypesTable from \"./TruckTypesTable\";\r\n\r\nclass TruckTypes extends Component {\r\n    render() {\r\n        return <section>\r\n            <TruckTypesTable />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckTypes;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deletePermitType\r\n} from \"../../../AdministratorFunctions\";\r\n\r\nclass PermitTypeRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedPermitType = {\r\n            Token: sessionStorage.Token,\r\n            PermitTypeID: this.props.PermitType.PermitTypeID\r\n        };\r\n\r\n        await deletePermitType(discardedPermitType).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Permit type is deleted.\") {\r\n                this.props.OnPermitTypeDeleted();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ShowDeleteButton,\r\n            PermitType\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>{PermitType.PermitType}</td>\r\n            <td className=\"text-right\">\r\n                {ShowDeleteButton ? \r\n                <button className=\"btn btn-danger\"\r\n                data-toggle=\"modal\"\r\n                data-target={`#delete-permit-type-dialog-${Index}`}>{Dictionary.Delete}</button> : null}\r\n\r\n                {ShowDeleteButton ? \r\n                <div className=\"modal modal-center-vertical\" id={`delete-permit-type-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <button className=\"btn btn-danger\"\r\n                                                onClick={async () => {\r\n                                                    this.cancelButton.click();\r\n                                                    await this.onDelete();\r\n                                                }}>{Dictionary.Delete}</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف نوع التصريح هذا؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this permit type?\",\r\n    };\r\n}\r\n\r\nexport default PermitTypeRow;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addPermitType } from \"../../../AdministratorFunctions\";\r\n\r\nclass AddPermitTypeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitType: \"\",\r\n            ValidPermitType: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PermitType: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidPermitType\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"PermitType\":\r\n                ValidPermitType = (value !== \"\");\r\n                Errors.PermitType = ValidPermitType ? \"\" : Dictionary.PermitTypeError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitType: ValidPermitType,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidPermitType\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newPermitType = {\r\n            Token: sessionStorage.Token,\r\n            PermitType: this.state.PermitType\r\n        };\r\n\r\n        await addPermitType(newPermitType).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Permit type is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                this.setState({\r\n                    PermitType: \"\",\r\n                    ValidPermitType: false,\r\n        \r\n                    ValidForm: false,\r\n                    ShowPreloader: false,\r\n        \r\n                    Errors: {\r\n                        PermitType: \"\"\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            PermitType,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-permit-type-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n p-b-xxxs\">{Dictionary.AddNewPermitType}</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.PermitType}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"PermitType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={PermitType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.PermitType}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddNewPermitType: \"إضافة نوع جديد من التصريح\",\r\n        PermitType: \"نوع التصريح\",\r\n        Add: \"أضف\",\r\n        PermitTypeError1: \".نوع التصريح مطلوب\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddNewPermitType: \"Add New Permit Type\",\r\n        PermitType: \"Permit Type\",\r\n        Add: \"Add\",\r\n        PermitTypeError1: \"Permit type is required.\",\r\n    };\r\n}\r\n\r\nexport default AddPermitTypeDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport PermitTypeRow from \"./PermitTypeRow\";\r\nimport AddPermitTypeDialog from \"./AddPermitTypeDialog\";\r\nimport { getPublicData } from \"../../../../shared/UserFunctions\";\r\n\r\nclass PermitTypesTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitTypes: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"PermitTypes\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Permit types found.\") {\r\n                    this.setState({\r\n                        PermitTypes: response.PermitTypes,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PermitTypes: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PermitTypes,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const ShowDeleteButton = PermitTypes.length > 1 ? true : false;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-cog m-r-xxs m-l-xxs\"></span>{Dictionary.PermitTypes}</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-permit-type-dialog`}>{Dictionary.AddNew}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddPermitTypeDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.PermitTypes}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(PermitTypes.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.PermitTypes} /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.Type}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {PermitTypes.map((permitType, index) => {\r\n                                return <PermitTypeRow key={index}\r\n                                    Index={index}\r\n                                    PermitType={permitType}\r\n                                    ShowDeleteButton={ShowDeleteButton}\r\n                                    OnPermitTypeDeleted={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        PermitTypes: \"أنواع التصاريح\",\r\n        AddNew: \"اضف جديد\",\r\n        Number: \"رقم\",\r\n        Type: \"اكتب\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        PermitTypes: \"Permit Types\",\r\n        AddNew: \"Add New\",\r\n        Number: \"NUMBER\",\r\n        Type: \"TYPE\"\r\n    };\r\n}\r\n\r\nexport default PermitTypesTable;","import React, { Component } from \"react\";\r\n\r\nclass DriverQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const driverAnswer = Question.DriverAnswer;\r\n        const answeredOn = driverAnswer ? new Date(driverAnswer.Created) : null;\r\n        const answeredBy = driverAnswer ? driverAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\" dir={GetDirection()}>{`${Index + 1}. ${Dictionary.QuestionID}: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-car m-r-xxxs\"></span>\r\n                                            {`${askedBy.FirstName} ${askedBy.LastName}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{askedBy.Username}</div>\r\n                                        <div className=\"content-text-secondary\" dir={GetDirection()}>{`${askedOn.toDateString()} ${Dictionary.At} ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">{Dictionary.Question}</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {driverAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{answeredBy.Username}</div>\r\n                                            <div className=\"content-text-secondary\" dir={GetDirection()}>{`${answeredOn.toDateString()} ${Dictionary.At} ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">{Dictionary.Answer}</span>\r\n                                                {driverAnswer.Edited ? <span className=\"color-default\">{Dictionary.Edited}</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{driverAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">{Dictionary.Answer}</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{Dictionary.AnswerDetails}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        QuestionID: \"معرف السؤال\",\r\n        At: \"في\",\r\n        Question: \"سؤال\",\r\n        Answer: \"إجابة\",\r\n        Edited: \"محررة\",\r\n        AnswerDetails: \".هذا السؤال مازال لم يجب عليه حتى الان\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        QuestionID: \"Question ID\",\r\n        At: \"at\",\r\n        Question: \"Question\",\r\n        Answer: \"Answer\",\r\n        Edited: \"EDITED\",\r\n        AnswerDetails: \"This question has not been answered yet.\"\r\n    };\r\n}\r\n\r\nexport default DriverQuestionContainer;","import React, { Component } from \"react\";\r\nimport PermitTypesTable from \"./PermitTypesTable\";\r\n\r\nclass PermitTypes extends Component {\r\n    render() {\r\n        return <section>\r\n            <PermitTypesTable />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PermitTypes;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addDriverAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerDriverQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : Dictionary.AnswerError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const driverAnswer = {\r\n            Token: sessionStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addDriverAnswer(driverAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\" dir={GetDirection()}>{Dictionary.AnswerQuestion}\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Answer}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Share} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AnswerQuestion: \"الجواب لمعرف السؤال:\",\r\n        Answer: \"إجابة\",\r\n        Share: \"شارك\",\r\n        AnswerError: \".مطلوب الإجابة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AnswerQuestion: \"Answer for Question ID:\",\r\n        Answer: \"Answer\",\r\n        Share: \"Share\",\r\n        AnswerError: \"Answer is required.\"\r\n    };\r\n}\r\n\r\nexport default AnswerDriverQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addDriverQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass DriverQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: Dictionary.NoError,\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"DriverQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? Dictionary.NoError : Dictionary.NewClassError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newDriverQuestionClass = {\r\n            Token: sessionStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addDriverQuestionClass(newDriverQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = Dictionary.NoError;\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{Dictionary.AddAClass}</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>{Dictionary.Select}</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddAClass: \"أضف فصل دراسي\",\r\n        Add: \"أضف\",\r\n        Select: \"تحديد\",\r\n        NoError: \".لا يوجد خطأ\",\r\n        NewClassError: \".مطلوب فئة جديدة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddAClass: \"Add a Class\",\r\n        Add: \"Add\",\r\n        Select: \"Select\",\r\n        NoError: \"No Error.\",\r\n        NewClassError: \"New class in required.\",\r\n    };\r\n}\r\n\r\nexport default DriverQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport DriverQuestionClasses from \"./DriverQuestionClasses\";\r\nimport { classifyDriverQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyDriverQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedDriverQuestion = {\r\n            Token: sessionStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyDriverQuestion(classifiedDriverQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{Dictionary.ClassifyTheQuestion}</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\" dir={GetDirection()}>{Class ? `${Dictionary.CurrentClass}: ${Class}` : `${Dictionary.CurrentClass}: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <DriverQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ClassifyTheQuestion: \"صنف السؤال\",\r\n        CurrentClass: \"الفصل الحالي\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ClassifyTheQuestion: \"Classify the Question\",\r\n        CurrentClass: \"Current Class\"\r\n    };\r\n}\r\n\r\nexport default ClassifyDriverQuestionDialog;","import React, { Component } from \"react\";\r\nimport DriverQuestionContainer from \"../../../../../containers/driverQuestion/DriverQuestionContainer\";\r\nimport AnswerDriverQuestionDialog from \"./AnswerDriverQuestionDialog\";\r\nimport ClassifyDriberQuestionDialog from \"./ClassifyDriverQuestionDialog\";\r\n\r\nclass DriverQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <DriverQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-driver-question-dialog-${Index}`}>{Dictionary.Classify}</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-driver-question-dialog-${Index}`}>{Question.DriverAnswer ? Dictionary.UpdateAnswer : Dictionary.Answer}</button>\r\n            </div>\r\n\r\n            <AnswerDriverQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.DriverAnswer ? Question.DriverAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyDriberQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Classify: \"صنف\",\r\n        UpdateAnswer: \"إجابة التحديث\",\r\n        Answer: \"إجابة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Classify: \"Classify\",\r\n        UpdateAnswer: \"Update Answer\",\r\n        Answer: \"Answer\"\r\n    };\r\n}\r\n\r\nexport default DriverQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport DriverQuestionListItem from \"./DriverQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass DriverQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"DriverQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs m-l-xxs\"></span>{Dictionary.Questions}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.DriversQuestions}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchAQuestion}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.Questions} /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <DriverQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Questions: \"الأسئلة\",\r\n        DriversQuestions: \"أسئلة السائق\",\r\n        SearchAQuestion: \"ابحث عن سؤال\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Questions: \"Questions\",\r\n        DriversQuestions: \"Driver's Questions\",\r\n        SearchAQuestion: \"Search a Question\",\r\n    };\r\n}\r\n\r\nexport default DriverQuestionsList;","import React, { Component } from \"react\";\r\n\r\nclass TraderQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const traderAnswer = Question.TraderAnswer;\r\n        const answeredOn = traderAnswer ? new Date(traderAnswer.Created) : null;\r\n        const answeredBy = traderAnswer ? traderAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\" dir={GetDirection()}>{`${Index + 1}. ${Dictionary.QuestionID}: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-briefcase m-r-xxxs\"></span>\r\n                                            {`${askedBy.FirstName} ${askedBy.LastName}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{askedBy.Username}</div>\r\n                                        <div className=\"content-text-secondary\" dir={GetDirection()}>{`${askedOn.toDateString()} ${Dictionary.At} ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">{Dictionary.Question}</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {traderAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{answeredBy.Username}</div>\r\n                                            <div className=\"content-text-secondary\" dir={GetDirection()}>{`${answeredOn.toDateString()} ${Dictionary.At} ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">{Dictionary.Answer}</span>\r\n                                                {traderAnswer.Edited ? <span className=\"color-default\">{Dictionary.Edited}</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{traderAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">{Dictionary.Answer}</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{Dictionary.AnswerDetails}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        QuestionID: \"معرف السؤال\",\r\n        At: \"في\",\r\n        Question: \"سؤال\",\r\n        Answer: \"إجابة\",\r\n        Edited: \"محررة\",\r\n        AnswerDetails: \".هذا السؤال مازال لم يجب عليه حتى الان\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        QuestionID: \"Question ID\",\r\n        At: \"at\",\r\n        Question: \"Question\",\r\n        Answer: \"Answer\",\r\n        Edited: \"EDITED\",\r\n        AnswerDetails: \"This question has not been answered yet.\"\r\n    };\r\n}\r\n\r\nexport default TraderQuestionContainer;","import React, { Component } from \"react\";\r\nimport DriverQuestionsList from \"./DriverQuestionsList\";\r\n\r\nclass DriverQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriverQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTraderAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerTraderQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : Dictionary.AnswerError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const traderAnswer = {\r\n            Token: sessionStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addTraderAnswer(traderAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\" dir={GetDirection()}>{Dictionary.AnswerQuestion}\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Answer}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Share} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AnswerQuestion: \"الجواب لمعرف السؤال:\",\r\n        Answer: \"إجابة\",\r\n        Share: \"شارك\",\r\n        AnswerError: \".مطلوب الإجابة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AnswerQuestion: \"Answer for Question ID:\",\r\n        Answer: \"Answer\",\r\n        Share: \"Share\",\r\n        AnswerError: \"Answer is required.\"\r\n    };\r\n}\r\n\r\nexport default AnswerTraderQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addTraderQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: Dictionary.NoError,\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TraderQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? Dictionary.NoError : Dictionary.NewClassError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newTraderQuestionClass = {\r\n            Token: sessionStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addTraderQuestionClass(newTraderQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = Dictionary.NoError;\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{Dictionary.AddAClass}</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>{Dictionary.Select}</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddAClass: \"أضف فصل دراسي\",\r\n        Add: \"أضف\",\r\n        Select: \"تحديد\",\r\n        NoError: \".لا يوجد خطأ\",\r\n        NewClassError: \".مطلوب فئة جديدة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddAClass: \"Add a Class\",\r\n        Add: \"Add\",\r\n        Select: \"Select\",\r\n        NoError: \"No Error.\",\r\n        NewClassError: \"New class in required.\",\r\n    };\r\n}\r\n\r\nexport default TraderQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport TraderQuestionClasses from \"./TraderQuestionClasses\";\r\nimport { classifyTraderQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyTraderQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedTraderQuestion = {\r\n            Token: sessionStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyTraderQuestion(classifiedTraderQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{Dictionary.ClassifyTheQuestion}</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\">{Class ? `${Dictionary.CurrentClass}: ${Class}` : `${Dictionary.CurrentClass}: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <TraderQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ClassifyTheQuestion: \"صنف السؤال\",\r\n        CurrentClass: \"الفصل الحالي\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ClassifyTheQuestion: \"Classify the Question\",\r\n        CurrentClass: \"Current Class\"\r\n    };\r\n}\r\n\r\nexport default ClassifyTraderQuestionDialog;","import React, { Component } from \"react\";\r\nimport TraderQuestionContainer from \"../../../../../containers/traderQuestion/TraderQuestionContainer\";\r\nimport AnswerTraderQuestionDialog from \"./AnswerTraderQuestionDialog\";\r\nimport ClassifyTraderQuestionDialog from \"./ClassifyTraderQuestionDialog\";\r\n\r\nclass TraderQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <TraderQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-trader-question-dialog-${Index}`}>{Dictionary.Classify}</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-trader-question-dialog-${Index}`}>{Question.TraderAnswer ? Dictionary.UpdateAnswer : Dictionary.Answer}</button>\r\n            </div>\r\n\r\n            <AnswerTraderQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.TraderAnswer ? Question.TraderAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyTraderQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Classify: \"صنف\",\r\n        UpdateAnswer: \"إجابة التحديث\",\r\n        Answer: \"إجابة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Classify: \"Classify\",\r\n        UpdateAnswer: \"Update Answer\",\r\n        Answer: \"Answer\"\r\n    };\r\n}\r\n\r\nexport default TraderQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport TraderQuestionListItem from \"./TraderQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TraderQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs m-l-xxs\"></span>{Dictionary.Questions}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.TradersQuestions}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchAQuestion}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.Questions} /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <TraderQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Questions: \"الأسئلة\",\r\n        TradersQuestions: \"أسئلة التاجر\",\r\n        SearchAQuestion: \"ابحث عن سؤال\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Questions: \"Questions\",\r\n        TradersQuestions: \"Trader's Questions\",\r\n        SearchAQuestion: \"Search a Question\",\r\n    };\r\n}\r\n\r\nexport default TraderQuestionsList;","import React, { Component } from \"react\";\r\n\r\nclass ResponsibleQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const responsibleAnswer = Question.ResponsibleAnswer;\r\n        const answeredOn = responsibleAnswer ? new Date(responsibleAnswer.Created) : null;\r\n        const answeredBy = responsibleAnswer ? responsibleAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\" dir={GetDirection()}>{`${Index + 1}. ${Dictionary.QuestionID}: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-copyright m-r-xxxs\"></span>\r\n                                            {`${askedBy.Name}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{`@${askedBy.Username}`}</div>\r\n                                        <div className=\"content-text-secondary\" dir={GetDirection()}>{`${askedOn.toDateString()} ${Dictionary.At} ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">Question</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {responsibleAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{`@${answeredBy.Username}`}</div>\r\n                                            <div className=\"content-text-secondary\" dir={GetDirection()}>{`${answeredOn.toDateString()} ${Dictionary.At} ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">{Dictionary.Answer}</span>\r\n                                                {responsibleAnswer.Edited ? <span className=\"color-default\">{Dictionary.Edited}</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{responsibleAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">{Dictionary.Answer}</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{Dictionary.AnswerDetails}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        QuestionID: \"معرف السؤال\",\r\n        At: \"في\",\r\n        Question: \"سؤال\",\r\n        Answer: \"إجابة\",\r\n        Edited: \"محررة\",\r\n        AnswerDetails: \".هذا السؤال مازال لم يجب عليه حتى الان\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        QuestionID: \"Question ID\",\r\n        At: \"at\",\r\n        Question: \"Question\",\r\n        Answer: \"Answer\",\r\n        Edited: \"EDITED\",\r\n        AnswerDetails: \"This question has not been answered yet.\"\r\n    };\r\n}\r\n\r\nexport default ResponsibleQuestionContainer;","import React, { Component } from \"react\";\r\nimport TraderQuestionsList from \"./TraderQuestionsList\";\r\n\r\nclass TraderQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addResponsibleAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerResponsibleQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : Dictionary.AnswerError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const responsibleAnswer = {\r\n            Token: sessionStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addResponsibleAnswer(responsibleAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\" dir={GetDirection()}>{Dictionary.AnswerQuestion}\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.Answer}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Share} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AnswerQuestion: \"الجواب لمعرف السؤال:\",\r\n        Answer: \"إجابة\",\r\n        Share: \"شارك\",\r\n        AnswerError: \".مطلوب الإجابة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AnswerQuestion: \"Answer for Question ID:\",\r\n        Answer: \"Answer\",\r\n        Share: \"Share\",\r\n        AnswerError: \"Answer is required.\"\r\n    };\r\n}\r\n\r\nexport default AnswerResponsibleQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addResponsibleQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass ResponsibleQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: Dictionary.NoError,\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"ResponsibleQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? Dictionary.NoError : Dictionary.NewClassError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newResponsibleQuestionClass = {\r\n            Token: sessionStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addResponsibleQuestionClass(newResponsibleQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = Dictionary.NoError;\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{Dictionary.AddAClass}</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>{Dictionary.Select}</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddAClass: \"أضف فصل دراسي\",\r\n        Add: \"أضف\",\r\n        Select: \"تحديد\",\r\n        NoError: \".لا يوجد خطأ\",\r\n        NewClassError: \".مطلوب فئة جديدة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddAClass: \"Add a Class\",\r\n        Add: \"Add\",\r\n        Select: \"Select\",\r\n        NoError: \"No Error.\",\r\n        NewClassError: \"New class in required.\",\r\n    };\r\n}\r\n\r\nexport default ResponsibleQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport ResponsibleQuestionClasses from \"./ResponsibleQuestionClasses\";\r\nimport { classifyResponsibleQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyResponsibleQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedResponsibleQuestion = {\r\n            Token: sessionStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyResponsibleQuestion(classifiedResponsibleQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{Dictionary.ClassifyTheQuestion}</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\" dir={GetDirection()}>{Class ? `${Dictionary.CurrentClass}: ${Class}` : `${Dictionary.CurrentClass}: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <ResponsibleQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ClassifyTheQuestion: \"صنف السؤال\",\r\n        CurrentClass: \"الفصل الحالي\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ClassifyTheQuestion: \"Classify the Question\",\r\n        CurrentClass: \"Current Class\"\r\n    };\r\n}\r\n\r\nexport default ClassifyResponsibleQuestionDialog;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionContainer from \"../../../../../containers/responsibleQuestion/ResponsibleQuestionContainer\";\r\nimport AnswerResponsibleQuestionDialog from \"./AnswerResponsibleQuestionDialog\";\r\nimport ClassifyResponsibleQuestionDialog from \"./ClassifyResponsibleQuestionDialog\";\r\n\r\nclass ResponsibleQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <ResponsibleQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-responsible-question-dialog-${Index}`}>{Dictionary.Classify}</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-responsible-question-dialog-${Index}`}>{Question.ResponsibleAnswer ? Dictionary.UpdateAnswer : Dictionary.Answer}</button>\r\n            </div>\r\n\r\n            <AnswerResponsibleQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.ResponsibleAnswer ? Question.ResponsibleAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyResponsibleQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Classify: \"صنف\",\r\n        UpdateAnswer: \"إجابة التحديث\",\r\n        Answer: \"إجابة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Classify: \"Classify\",\r\n        UpdateAnswer: \"Update Answer\",\r\n        Answer: \"Answer\"\r\n    };\r\n}\r\n\r\nexport default ResponsibleQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport ResponsibleQuestionListItem from \"./ResponsibleQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass ResponsibleQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"ResponsibleQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs m-l-xxs\"></span>{Dictionary.Questions}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.ResponsiblesQuestions}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchAQuestion}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.Questions} /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <ResponsibleQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Questions: \"الأسئلة\",\r\n        ResponsiblesQuestions: \"أسئلة المسؤولين عن شركة النقل\",\r\n        SearchAQuestion: \"ابحث عن سؤال\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Questions: \"Questions\",\r\n        ResponsiblesQuestions: \"TC Responsible's Questions\",\r\n        SearchAQuestion: \"Search a Question\",\r\n    };\r\n}\r\n\r\nexport default ResponsibleQuestionsList;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport DriverQuestions from \"./driverQuestions/DriverQuestions\";\r\nimport TraderQuestions from \"./traderQuestions/TraderQuestions\";\r\nimport ResponsibleQuestions from \"./responsibleQuestions/ResponsibleQuestions\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"QUESTIONS\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#driver-questions\" aria-controls=\"driver-questions\" role=\"tab\" data-toggle=\"tab\">{Dictionary.DriversQuestions}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trader-questions\" aria-controls=\"trader-questions\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TradersQuestions}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#responsible-questions\" aria-controls=\"responsible-questions\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TCResponsiblesQuestions}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"driver-questions\">\r\n                    <DriverQuestions />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trader-questions\">\r\n                    <TraderQuestions />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"responsible-questions\">\r\n                    <ResponsibleQuestions />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        DriversQuestions: \"أسئلة السائق\",\r\n        TradersQuestions: \"أسئلة التاجر\",\r\n        TCResponsiblesQuestions: \"أسئلة المسؤولين عن شركة النقل\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        DriversQuestions: \"Driver's Questions\",\r\n        TradersQuestions: \"Trader's Questions\",\r\n        TCResponsiblesQuestions: \"TC Responsible's Questions\"\r\n    };\r\n}\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionsList from \"./ResponsibleQuestionsList\";\r\n\r\nclass ResponsibleQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <ResponsibleQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { setGlobalFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass SetGlobalFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: \"\",\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError1;\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const feeRate = {\r\n            Token: sessionStorage.Token,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await setGlobalFeeRate(feeRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Global fee rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-global-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.SetGlobalFeeRate}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.GlobalFeeRate}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Set} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        SetGlobalFeeRate: \"تعيين معدل الرسوم العالمية\",\r\n        GlobalFeeRate: \"(٪) معدل الرسوم العالمية\",\r\n        Set: \"جلس\",\r\n        FeeRateError1: \".مطلوب معدل الرسوم\",\r\n        FeeRateError2: \".يمكن أن يكون معدل الرسوم بين 1 و 100\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        SetGlobalFeeRate: \"Set Global Fee Rate\",\r\n        GlobalFeeRate: \"Global Fee Rate (%)\",\r\n        Set: \"Set\",\r\n        FeeRateError1: \"Fee rate is required.\",\r\n        FeeRateError2: \"Fee Rate can be between 1 and 100.\"\r\n    };\r\n}\r\n\r\nexport default SetGlobalFeeRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { setTemporaryFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass SetTemporaryFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: \"\",\r\n            Date: \"\",\r\n\r\n            ValidFeeRate: false,\r\n            ValidDate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\",\r\n                Date: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n        let ValidDate = this.state.ValidDate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError1;\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError2;\r\n                break;\r\n            case \"Date\":\r\n                ValidDate = (value !== \"\");\r\n                Errors.Date = ValidDate ? \"\" : Dictionary.DateError1;\r\n\r\n                if (Errors.Date !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.Date = ValidDate ? \"\" : Dictionary.DateError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n            ValidDate: ValidDate\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate &&\r\n                        this.state.ValidDate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const temporaryFeeRateData = {\r\n            Token: sessionStorage.Token,\r\n            FeeRate: this.state.FeeRate,\r\n            Date: this.state.Date\r\n        };\r\n\r\n        await setTemporaryFeeRate(temporaryFeeRateData).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Temporary fee rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            Date,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-temporary-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.SetTemporaryFeeRate}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.TemporaryFeeRate}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.DateUpTo}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"Date\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Date} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Date}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Set} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        SetTemporaryFeeRate: \"تعيين معدل الرسوم المؤقتة\",\r\n        TemporaryFeeRate: \"(٪) معدل الرسوم المؤقتة\",\r\n        DateUpTo: \"التاريخ حتى\",\r\n        Set: \"جلس\",\r\n        FeeRateError1: \".مطلوب معدل الرسوم\",\r\n        FeeRateError2: \".يمكن أن يكون معدل الرسوم بين 1 و 100\",\r\n        DateError1: \".التاريخ مطلوب\",\r\n        DateError2: \".يجب أن يكون التاريخ بعد يوم أمس\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        SetTemporaryFeeRate: \"Set Temporary Fee Rate\",\r\n        TemporaryFeeRate: \"Temporary Fee Rate (%)\",\r\n        DateUpTo: \"Date Up To\",\r\n        Set: \"Set\",\r\n        FeeRateError1: \"Fee rate is required.\",\r\n        FeeRateError2: \"Fee Rate can be between 1 and 100.\",\r\n        DateError1: \"Date is required.\",\r\n        DateError2: \"Date must be later than yesterday.\",\r\n    };\r\n}\r\n\r\nexport default SetTemporaryFeeRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { clearTemporaryFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass ClearTemporaryFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClear = this.onClear.bind(this);\r\n    }\r\n\r\n    onClear = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const clearedTemporaryFeeRate = {\r\n            Token: sessionStorage.Token\r\n        };\r\n\r\n        await clearTemporaryFeeRate(clearedTemporaryFeeRate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Temporary fee rate is cleared.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`clear-temporary-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{Dictionary.ClearFeeRate}</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">{Dictionary.ClearFeeRateDetails}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-danger\" onClick={this.onClear}>{Dictionary.Clear}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ClearFeeRate: \"مسح معدل الرسوم المؤقتة\",\r\n        ClearFeeRateDetails: \"هل أنت متأكد أنك تريد مسح سعر الرسوم المؤقتة قبل تاريخ استحقاقها؟\",\r\n        Clear: \"واضح\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ClearFeeRate: \"Clear Temporary Fee Rate\",\r\n        ClearFeeRateDetails: \"Are you sure you want to clear temporary fee rate before its due date?\",\r\n        Clear: \"Clear\"\r\n    };\r\n}\r\n\r\nexport default ClearTemporaryFeeRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"./../../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\nimport SetGlobalFeeRateDialog from \"./SetGlobalFeeRateDialog\";\r\nimport SetTemporaryFeeRateDialog from \"./SetTemporaryFeeRateDialog\";\r\nimport ClearTemporaryFeeRateDialog from \"./ClearTemporaryFeeRateDialog\";\r\n\r\nclass GlobalAndTemporaryRates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            GlobalFeeRate: 0.00,\r\n            TemporaryFeeRateData: null, \r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"GlobalAndTemporaryFeeRates\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Global and temporary fee rates found.\") {\r\n                    this.setState({\r\n                        GlobalFeeRate: response.GlobalFeeRate,\r\n                        TemporaryFeeRateData: response.TemporaryFeeRateData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        GlobalFeeRate: 0.00,\r\n                        TemporaryFeeRateData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            GlobalFeeRate,\r\n            TemporaryFeeRateData,\r\n            Searching\r\n        } = this.state;\r\n\r\n        const dateUpTo = TemporaryFeeRateData ? new Date(TemporaryFeeRateData.Date) : null;\r\n\r\n        return <section>\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#E5E5E5\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-tag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">{Dictionary.GlobalFeeRate}\r\n                                        {Searching ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                    </div>\r\n                                    <div className=\"content-text-secondary\">{GlobalFeeRate ? `${GlobalFeeRate}%` : Dictionary.NotFound}</div>\r\n                                    <button className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#set-global-fee-rate-dialog`}>{Dictionary.Set}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#E5E5E5\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-tag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">{Dictionary.TemporaryFeeRate}\r\n                                        {Searching ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                    </div>\r\n\r\n                                    {TemporaryFeeRateData ?\r\n                                        <section>\r\n                                            <div className=\"content-text-secondary\">{`${TemporaryFeeRateData.FeeRate}%`}</div>\r\n                                            <div className=\"content-text-secondary\">{`${Dictionary.UpTo}: ${dateUpTo.toDateString()}`}</div>\r\n                                            <button className=\"btn btn-danger\"\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#clear-temporary-fee-rate-dialog`}>{Dictionary.Clear}</button>\r\n                                        </section> :\r\n                                        <section>\r\n                                            <div className=\"content-text-secondary\">{Dictionary.NotFound}</div>\r\n                                            <button className=\"btn btn-primary\"\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#set-temporary-fee-rate-dialog`}>{Dictionary.Set}</button>\r\n                                        </section>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <SetGlobalFeeRateDialog OnOK={this.onComponentUpdated} />\r\n            <SetTemporaryFeeRateDialog OnOK={this.onComponentUpdated} />\r\n            <ClearTemporaryFeeRateDialog OnOK={this.onComponentUpdated} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        GlobalFeeRate: \"معدل الرسوم العالمية\",\r\n        NotFound: \".غير موجود\",\r\n        Set: \"جلس\",\r\n        Clear: \"واضح\",\r\n        TemporaryFeeRate: \"معدل الرسوم المؤقتة\",\r\n        UpTo: \"يصل إلى\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        GlobalFeeRate: \"Global Fee Rate\",\r\n        NotFound: \"Not Found.\",\r\n        Set: \"Set\",\r\n        Clear: \"Clear\",\r\n        TemporaryFeeRate: \"Temporary Fee Rate\",\r\n        UpTo: \"UP TO\"\r\n    };\r\n}\r\n\r\nexport default GlobalAndTemporaryRates;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { updatePriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass UpdatePriceRangeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: this.props.FeeRate,\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError1;\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedPriceRange = {\r\n            Token: sessionStorage.Token,\r\n            PriceRangeID: this.props.PriceRangeID,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await updatePriceRange(updatedPriceRange).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(this.state.FeeRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`update-fee-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.UpdateFeeRate}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.FeeRate}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Set} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        UpdateFeeRate: \"تحديث معدل الرسوم\",\r\n        FeeRate: \"(٪) معدل الرسوم\",\r\n        Set: \"جلس\",\r\n        FeeRateError1: \".مطلوب معدل الرسوم\",\r\n        FeeRateError2: \".يمكن أن يكون معدل الرسوم بين 1 و 100\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        UpdateFeeRate: \"Update Fee Rate\",\r\n        FeeRate: \"Fee Rate (%)\",\r\n        Set: \"Set\",\r\n        FeeRateError1: \"Fee rate is required\",\r\n        FeeRateError2: \"Fee Rate can be between 1 and 100.\"\r\n    };\r\n}\r\n\r\nexport default UpdatePriceRangeDialog;","import React, { Component } from \"react\";\r\nimport UpdatePriceRangeDialog from \"./UpdatePriceRangeDialog\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { deletePriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PriceRangeListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedPriceRange = {\r\n            Token: sessionStorage.Token,\r\n            PriceRangeID: this.props.PriceRange.PriceRangeID\r\n        };\r\n\r\n        await deletePriceRange(discardedPriceRange).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is deleted.\") {\r\n                this.props.OnPriceRangeDeleted(this.props.PriceRange);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            PriceRange\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ?\r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n\r\n            <td>{`$${parseFloat(PriceRange.StartRange).toFixed(2)}`}</td>\r\n            <td>{`$${parseFloat(PriceRange.EndRange).toFixed(2)}`}</td>\r\n            <td>{`${PriceRange.FeeRate}%`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#update-fee-rate-dialog-${Index}`}>{Dictionary.EditFeeRate}</button>\r\n                <button className=\"btn btn-danger\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-price-range-dialog-${Index}`}>{Dictionary.Delete}</button>\r\n\r\n                <UpdatePriceRangeDialog Index={Index}\r\n                    FeeRate={PriceRange.FeeRate}\r\n                    PriceRangeID={PriceRange.PriceRangeID}\r\n                    OnOK={this.props.OnPriceRangeUpdated} />\r\n\r\n                <div className=\"modal modal-center-vertical\" id={`delete-price-range-dialog-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onDelete();\r\n                                                    }}>{Dictionary.Delete}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        EditFeeRate: \"تحرير معدل الرسوم\",\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف هذا النطاق السعري؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        EditFeeRate: \"Edit Fee Rate\",\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this price range?\",\r\n    };\r\n}\r\n\r\nexport default PriceRangeListItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addPriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddPriceRangeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            StartRange: \"\",\r\n            EndRange: \"\",\r\n            FeeRate: \"\",\r\n\r\n            ValidStartRange: false,\r\n            ValidEndRange: false,\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                StartRange: \"\",\r\n                EndRange: \"\",\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidStartRange = this.state.ValidStartRange;\r\n        let ValidEndRange = this.state.ValidEndRange;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"StartRange\":\r\n                ValidStartRange = (value !== \"\");\r\n                Errors.StartRange = ValidStartRange ? \"\" : Dictionary.StartingPriceError1;\r\n\r\n                if (Errors.StartRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                if (this.state.EndRange !== \"\") {\r\n                    ValidStartRange = (value <= parseFloat(this.state.EndRange));\r\n                    Errors.StartRange = ValidStartRange ? \"\" : Dictionary.StartingPriceError2;\r\n\r\n                    if (Errors.StartRange !== \"\") {\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                ValidEndRange = (parseFloat(this.state.EndRange) >= value);\r\n                Errors.EndRange = ValidEndRange ? \"\" : Dictionary.EndingPriceError2;\r\n                break;\r\n            case \"EndRange\":\r\n                ValidEndRange = (value !== \"\");\r\n                Errors.EndRange = ValidEndRange ? \"\" : Dictionary.EndingPriceError1;\r\n\r\n                if (Errors.EndRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidEndRange = (value >= parseFloat(this.state.StartRange));\r\n                Errors.EndRange = ValidEndRange ? \"\" : Dictionary.EndingPriceError2;\r\n\r\n                if (Errors.EndRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidStartRange = (parseFloat(this.state.StartRange) <= value);\r\n                Errors.StartRange = ValidStartRange ? \"\" : Dictionary.StartingPriceError2;\r\n                break;\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError1;\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidStartRange: ValidStartRange,\r\n            ValidEndRange: ValidEndRange,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidStartRange &&\r\n                        this.state.ValidEndRange &&\r\n                        this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newPriceRange = {\r\n            Token: sessionStorage.Token,\r\n            StartRange: this.state.StartRange,\r\n            EndRange: this.state.EndRange,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await addPriceRange(newPriceRange).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.PriceRange);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            StartRange,\r\n            EndRange,\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-price-range-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n m-b-xxs\">{Dictionary.AddPriceRange}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.StartingPrice}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0\" name=\"StartRange\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartRange} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.StartRange}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.EndingPrice}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0\" name=\"EndRange\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndRange} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.EndRange}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.FeeRate}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddPriceRange: \"إضافة نطاق السعر\",\r\n        StartingPrice: \"(السعر المبدئي (ريال\",\r\n        EndingPrice: \"(السعر النهائي (ريال\",\r\n        FeeRate: \"(٪) معدل الرسوم\",\r\n        Add: \"أضف\",\r\n        StartingPriceError1: \".السعر المبدئي مطلوب\",\r\n        StartingPriceError2: \".يجب أن يكون السعر المبدئي أقل من السعر النهائي\",\r\n        EndingPriceError1: \".مطلوب السعر النهائي\",\r\n        EndingPriceError2: \".يجب أن يكون السعر النهائي أكبر من السعر المبدئي\",\r\n        FeeRateError1: \".مطلوب معدل الرسوم\",\r\n        FeeRateError2: \".يمكن أن يكون معدل الرسوم بين 1 و 100\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddPriceRange: \"Add Price Range\",\r\n        StartingPrice: \"Starting Price (SR)\",\r\n        EndingPrice: \"Ending Price (SR)\",\r\n        FeeRate: \"Fee Rate (%)\",\r\n        Add: \"Add\",\r\n        StartingPriceError1: \"Starting price is required.\",\r\n        StartingPriceError2: \"Starting price must be less than Ending price.\",\r\n        EndingPriceError1: \"Ending price is required.\",\r\n        EndingPriceError2: \"Ending price must be greater than Starting price.\",\r\n        FeeRateError1: \"Fee rate is required.\",\r\n        FeeRateError2: \"Fee Rate can be between 1 and 100.\",\r\n    };\r\n}\r\n\r\nexport default AddPriceRangeDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport PriceRangeListItem from \"./PriceRangeListItem\";\r\nimport AddPriceRangeDialog from \"./AddPriceRangeDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PriceRangesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PriceRanges: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"PriceRanges\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Price ranges found.\") {\r\n                    this.setState({\r\n                        PriceRanges: response.PriceRanges,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PriceRanges: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PriceRanges,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.PriceRanges}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#add-price-range-dialog`}>{Dictionary.AddNewRange}</button>\r\n            </div>\r\n\r\n            <AddPriceRangeDialog OnOK={priceRange => {\r\n                let priceRanges = PriceRanges;\r\n                priceRanges.push(priceRange);\r\n\r\n                this.setState({\r\n                    PriceRanges: priceRanges\r\n                });\r\n            }} />\r\n\r\n            {(PriceRanges.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.PriceRanges} /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.StartingPrice}</th>\r\n                                <th>{Dictionary.EndingPrice}</th>\r\n                                <th>{Dictionary.FeeRate}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {PriceRanges.map((priceRange, index) => {\r\n                                return <PriceRangeListItem key={index}\r\n                                    Index={index}\r\n                                    PriceRange={priceRange}\r\n                                    OnPriceRangeUpdated={feeRate => {\r\n                                        let priceRanges = PriceRanges;\r\n\r\n                                        for (let priceRangeItem of priceRanges) {\r\n                                            if (priceRangeItem === priceRange) {\r\n                                                priceRange.FeeRate = feeRate;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            PriceRanges: priceRanges\r\n                                        });\r\n                                    }}\r\n                                    OnPriceRangeDeleted={priceRange => {\r\n                                        let priceRanges = [];\r\n\r\n                                        for (let priceRangeItem of PriceRanges) {\r\n                                            if (priceRangeItem !== priceRange) {\r\n                                                priceRanges.push(priceRangeItem);\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            PriceRanges: priceRanges\r\n                                        });\r\n                                    }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        PriceRanges: \"يتراوح السعر\",\r\n        AddNewRange: \"إضافة نطاق جديد\",\r\n        Number: \"رقم\",\r\n        StartingPrice: \"سعر البدء\",\r\n        EndingPrice: \"السعر النهائي\",\r\n        FeeRate: \"معدل الرسوم\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        PriceRanges: \"Price Ranges\",\r\n        AddNewRange: \"Add New Range\",\r\n        Number: \"NUMBER\",\r\n        StartingPrice: \"STARTING PRICE\",\r\n        EndingPrice: \"ENDING PRICE\",\r\n        FeeRate: \"FEE RATE\",\r\n    };\r\n}\r\n\r\nexport default PriceRangesList;","import React, { Component } from \"react\";\r\nimport GlobalAndTemporaryRates from \"./globalAndTemporayRates/GlobalAndTemporaryRates\";\r\nimport PriceRanges from \"./priceRanges/PriceRanges\";\r\n\r\nclass GeneralRates extends Component {\r\n    render() {\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-tag m-r-xxs m-l-xxs\"></span>{Dictionary.GeneralRates}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <GlobalAndTemporaryRates />\r\n            <PriceRanges />\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        GeneralRates: \"الأسعار العامة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        GeneralRates: \"General Rates\",\r\n    };\r\n}\r\n\r\nexport default GeneralRates;","import React, { Component } from \"react\";\r\nimport PriceRangesList from \"./PriceRangesList\";\r\n\r\nclass PriceRanges extends Component {\r\n    render() {\r\n        return <section>\r\n            <PriceRangesList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PriceRanges;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { updateTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass UpdateTraderRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: this.props.FeeRate,\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError1;\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedTraderRate = {\r\n            Token: sessionStorage.Token,\r\n            TraderRateID: this.props.TraderRateID,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await updateTraderRate(updatedTraderRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(this.state.FeeRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`update-trader-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">{Dictionary.UpdateFeeRate}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.FeeRate}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Set} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        UpdateFeeRate: \"تحديث معدل الرسوم\",\r\n        FeeRate: \"(٪) معدل الرسوم\",\r\n        Set: \"جلس\",\r\n        FeeRateError1: \".مطلوب معدل الرسوم\",\r\n        FeeRateError2: \".يمكن أن يكون معدل الرسوم بين 1 و 100\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        UpdateFeeRate: \"Update Fee Rate\",\r\n        FeeRate: \"Fee Rate (%)\",\r\n        Set: \"Set\",\r\n        FeeRateError1: \"Fee rate is required.\",\r\n        FeeRateError2: \"Fee Rate can be between 1 and 100.\"\r\n    };\r\n}\r\n\r\nexport default UpdateTraderRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport UpdateTraderRateDialog from \"./UpdateTraderRateDialog\";\r\nimport { deleteTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderRateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTraderRate = {\r\n            Token: sessionStorage.Token,\r\n            TraderRateID: this.props.TraderRate.TraderRateID\r\n        };\r\n\r\n        await deleteTraderRate(discardedTraderRate).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is deleted.\") {\r\n                this.props.OnTraderRateDeleted(this.props.TraderRate);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            TraderRate\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n\r\n            <td>{TraderRate.Username}</td>\r\n            <td>{`${TraderRate.FeeRate}%`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#update-trader-rate-dialog-${Index}`}>{Dictionary.EditFeeRate}</button>\r\n                <button className=\"btn btn-danger\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-trader-rate-dialog-${Index}`}>{Dictionary.Delete}</button>\r\n\r\n                <UpdateTraderRateDialog Index={Index}\r\n                    FeeRate={TraderRate.FeeRate}\r\n                    TraderRateID={TraderRate.TraderRateID}\r\n                    OnOK={this.props.OnTraderRateUpdated} />\r\n\r\n                <div className=\"modal modal-center-vertical\" id={`delete-trader-rate-dialog-${Index}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                        <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                        data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                        <span className=\"fas fa-times\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"jumbotron theme-default\" dir={GetDirection()}>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-sh3 m-b-xxs\">{Dictionary.DeleteMessage}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <button className=\"btn btn-danger\"\r\n                                                    onClick={async () => {\r\n                                                        this.cancelButton.click();\r\n                                                        await this.onDelete();\r\n                                                    }}>{Dictionary.Delete}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        EditFeeRate: \"تحرير معدل الرسوم\",\r\n        Delete: \"حذف\",\r\n        DeleteMessage: \"هل أنت متأكد أنك تريد حذف معدل الرسوم هذا؟\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        EditFeeRate: \"Edit Fee Rate\",\r\n        Delete: \"Delete\",\r\n        DeleteMessage: \"Are you sure you want to delete this fee rate?\",\r\n    };\r\n}\r\n\r\nexport default TraderRateListItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass AddTraderRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            FeeRate: \"\",\r\n\r\n            ValidUsername: false,\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Username: \"\",\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidUsername = this.state.ValidUsername\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"Username\":\r\n                ValidUsername = (value !== \"\");\r\n                Errors.Username = ValidUsername ? \"\" : Dictionary.UsernameError1;\r\n\r\n                if (Errors.Username != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.Username = ValidUsername ? \"\" : Dictionary.UsernameError2;\r\n                break;\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError1;\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : Dictionary.FeeRateError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidUsername: ValidUsername,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidUsername &&\r\n                        this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTraderRate = {\r\n            Token: sessionStorage.Token,\r\n            Username: this.state.Username,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await addTraderRate(newTraderRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.TraderRate);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Username,\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-trader-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n m-b-xxs\">{Dictionary.AddTraderRate}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.TradersUsername}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Username\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Username} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Username}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{Dictionary.FeeRate}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={Dictionary.Add} className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AddTraderRate: \"أضف سعر التاجر\",\r\n        TradersUsername: \"اسم مستخدم التاجر\",\r\n        FeeRate: \"(٪) معدل الرسوم\",\r\n        Add: \"أضف\",\r\n        FeeRateError1: \".مطلوب معدل الرسوم\",\r\n        FeeRateError2: \".يمكن أن يكون معدل الرسوم بين 1 و 100\",\r\n        UsernameError1: \".اسم المستخدم مطلوب\",\r\n        UsernameError2: \".إسم المستخدم غير صحيح\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AddTraderRate: \"Add Trader Rate\",\r\n        TradersUsername: \"Trader's Username\",\r\n        FeeRate: \"Fee Rate (%)\",\r\n        Add: \"Add\",\r\n        FeeRateError1: \"Fee rate is required\",\r\n        FeeRateError2: \"Fee Rate can be between 1 and 100.\",\r\n        UsernameError1: \"Username is required.\",\r\n        UsernameError2: \"Username is invalid.\"\r\n    };\r\n}\r\n\r\nexport default AddTraderRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TraderRateListItem from \"./TraderRateListItem\";\r\nimport AddTraderRateDialog from \"./AddTraderRateDialog\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderRatesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTraderRates: [],\r\n            TraderRates: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TraderRates\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader rates found.\") {\r\n                    this.setState({\r\n                        AllTraderRates: response.TraderRates,\r\n                        TraderRates: response.TraderRates,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTraderRates: [],\r\n                        TraderRates: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                TraderRates: this.state.AllTraderRates\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allTraderRates = this.state.AllTraderRates;\r\n        let filteredTraderRates = [];\r\n        let count = 0;\r\n\r\n        for (let traderRate of allTraderRates) {\r\n            if (traderRate.Username.includes(searchString)) {\r\n                filteredTraderRates[count++] = traderRate;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            TraderRates: filteredTraderRates\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TraderRates,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-tag m-r-xxs m-l-xxs\"></span>{Dictionary.TraderFeeRates}</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-trader-rate-dialog`}>{Dictionary.AddNew}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddTraderRateDialog OnOK={traderRate => {\r\n                let traderRates = TraderRates;\r\n                traderRates.push(traderRate);\r\n\r\n                this.setState({\r\n                    TraderRates: traderRates\r\n                });\r\n            }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.FeeRates}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.Search}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(TraderRates.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.FeeRates} /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Number}</th>\r\n                                <th>{Dictionary.TraderOrBroker}</th>\r\n                                <th>{Dictionary.FeeRate}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {TraderRates.map((traderRate, index) => {\r\n                                return <TraderRateListItem key={index}\r\n                                    Index={index}\r\n                                    TraderRate={traderRate}\r\n                                    OnTraderRateUpdated={feeRate => {\r\n                                        let traderRates = TraderRates;\r\n\r\n                                        for (let traderRateItem of traderRates) {\r\n                                            if (traderRateItem === traderRate) {\r\n                                                traderRateItem.FeeRate = feeRate;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            TraderRates: traderRates\r\n                                        });\r\n                                    }}\r\n                                    OnTraderRateDeleted={traderRate => {\r\n                                        let traderRates = [];\r\n\r\n                                        for (let traderRateItem of TraderRates) {\r\n                                            if (traderRateItem !== traderRate) {\r\n                                                traderRates.push(traderRateItem);\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            TraderRates: traderRates\r\n                                        });\r\n                                    }}/>;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TraderFeeRates: \"معدلات رسوم التاجر\",\r\n        AddNew: \"اضف جديد\",\r\n        FeeRates: \"معدلات الرسوم\",\r\n        Search: \"بحث\",\r\n        Number: \"رقم\",\r\n        TraderOrBroker: \"تاجر أو وسيط\",\r\n        FeeRate: \"معدل الرسوم\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TraderFeeRates: \"Trader Fee Rates\",\r\n        AddNew: \"Add New\",\r\n        FeeRates: \"Fee Rates\",\r\n        Search: \"Search\",\r\n        Number: \"NUMBER\",\r\n        TraderOrBroker: \"TRADER OR BROKER\",\r\n        FeeRate: \"FEE RATE\",\r\n    };\r\n}\r\n\r\nexport default TraderRatesList;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport GeneralRates from \"./generalRates/GeneralRates\";\r\nimport TraderRates from \"./traderRates/TraderRates\";\r\n\r\nclass FeeRates extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"FEE RATES\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#general-rates\" aria-controls=\"general-rates\" role=\"tab\" data-toggle=\"tab\">{Dictionary.GeneralRates}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trader-rates\" aria-controls=\"trader-rates\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TraderRates}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"general-rates\">\r\n                    <GeneralRates />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trader-rates\">\r\n                    <TraderRates />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        GeneralRates: \"الأسعار العامة\",\r\n        TraderRates: \"أسعار التجار\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        GeneralRates: \"General Rates\",\r\n        TraderRates: \"Trader Rates\"\r\n    };\r\n}\r\n\r\nexport default FeeRates;","import React, { Component } from \"react\";\r\nimport TraderRatesList from \"./TraderRatesList\";\r\n\r\nclass TraderRates extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderRatesList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRates;","import React, { Component } from \"react\";\r\nimport PayProofDialog from \"./PayProofDialog\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport PayDetailsDialog from \"./PayDetailsDialog\";\r\n\r\nclass TradersBillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Bill.BillNumber}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.Username}</td>\r\n\r\n            <td>{`${Bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Bill.FeeRate}%`}</td>\r\n\r\n            <td>{`${new Date(Bill.Created).toDateString()}`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                {Bill.TraderPayProof ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#trader-pay-proof-dialog-${Index}`}>{Dictionary.PayProof}</button> : null}\r\n\r\n                {Bill.TraderPayDetails ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#trader-pay-details-dialog-${Index}`}>{Dictionary.PayDetails}</button> : null}\r\n\r\n                {Bill.TraderPayProof ? \r\n                    <PayProofDialog Index={Index}\r\n                        PayProof={Bill.TraderPayProof} /> : null}\r\n\r\n                {Bill.TraderPayDetails ?\r\n                    <PayDetailsDialog Index={Index}\r\n                        PayDetails={Bill.TraderPayDetails} /> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        PayProof: \"إثبات الدفع\",\r\n        PayDetails: \"تفاصيل الدفع\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        PayProof: \"Pay Proof\",\r\n        PayDetails: \"Pay Details\"\r\n    };\r\n}\r\n\r\n\r\nexport default TradersBillListItem;","import React, { Component } from \"react\";\r\n\r\nclass PayProofContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const payProof = this.props.PayProof;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={payProof.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Payment Proof</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-certificate\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Approved</div>\r\n                                                <div className=\"content-text-secondary\">{payProof.Approved ?\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Uploaded On</div>\r\n                                                <div className=\"content-text-secondary\">{`DATE: ${new Date(payProof.Created).toDateString()}`}</div>\r\n                                                <div className=\"content-text-secondary\">{`TIME: ${new Date(payProof.Created).toLocaleTimeString()}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofContainer;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\n\r\nclass PayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayProof\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-pay-proof-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayProofContainer PayProof={PayProof} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDialog;","import React, { Component } from \"react\";\r\n\r\nclass PayDetailsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Credit Card Payment</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-user\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Owner Name</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.OwnerName}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Owner Email</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.OwnerEmail}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-credit-card\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Payment Method</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.CardType.toUpperCase()}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-certificate\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Approved</div>\r\n                                                <div className=\"content-text-secondary\">\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Paid On</div>\r\n                                                <div className=\"content-text-secondary\">{`DATE: ${new Date(PayDetails.Created).toDateString()}`}</div>\r\n                                                <div className=\"content-text-secondary\">{`TIME: ${new Date(PayDetails.Created).toLocaleTimeString()}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsContainer;","import React, { Component } from \"react\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\n\r\nclass PayDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-pay-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayDetailsContainer PayDetails={PayDetails} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport TradersBillListItem from \"./TradersBillListItem\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass TradersBillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllBills: [],\r\n            Bills: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TradersBills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        AllBills: response.Bills,\r\n                        Bills: response.Bills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllBills: [],\r\n                        Bills: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Bills: this.state.AllBills\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allBills = this.state.AllBills;\r\n        let filteredBills = [];\r\n        let count = 0;\r\n\r\n        for (let bill of allBills) {\r\n            if (bill.BillNumber.includes(searchString)) {\r\n                filteredBills[count++] = bill;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Bills: filteredBills\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Bills,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xxs m-l-xxs\"></span>{Dictionary.TradersBills}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.Bills}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.Search}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Bills.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.Bills} /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.BillNumber}</th>\r\n                                <th>{Dictionary.Paid}</th>\r\n                                <th>{Dictionary.Payee}</th>\r\n                                <th>{Dictionary.Amount}</th>\r\n                                <th>{Dictionary.FeeRate}</th>\r\n                                <th>{Dictionary.GeneratedOn}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Bills.map((bill, index) => {\r\n                                return <TradersBillListItem key={index}\r\n                                    Index={index}\r\n                                    Bill={bill} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TradersBills: \"فواتير التجار\",\r\n        Bills: \"فواتير\",\r\n        Search: \"بحث\",\r\n        BillNumber: \"رقم الفاتوره\",\r\n        Paid: \"دفع؟\",\r\n        Payee: \"المستفيد\",\r\n        Amount: \"كمية\",\r\n        FeeRate: \"معدل الرسوم\",\r\n        GeneratedOn: \"تم إنشاؤه في\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TradersBills: \"Traders' Bills\",\r\n        Bills: \"Bills\",\r\n        Search: \"Search\",\r\n        BillNumber: \"BILL NUMBER\",\r\n        Paid: \"PAID?\",\r\n        Payee: \"PAYEE\",\r\n        Amount: \"AMOUNT\",\r\n        FeeRate: \"FEE RATE\",\r\n        GeneratedOn: \"GENERATED ON\"\r\n    };\r\n}\r\n\r\nexport default TradersBillsList;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\nimport { approveDriverPayProof } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprove = this.onApprove.bind(this);\r\n    }\r\n\r\n    onApprove = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const approvedDriverPayProof = {\r\n            Token: sessionStorage.Token,\r\n            DriverPayProofID: this.props.PayProof.DriverPayProofID,\r\n        };\r\n\r\n        await approveDriverPayProof(approvedDriverPayProof).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver pay proof is approved.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            PayProof\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-pay-proof-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayProofContainer PayProof={PayProof} />\r\n                            {PayProof.Approved ? null : \r\n                                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                                    <button className=\"btn btn-primary m-t-n\" onClick={this.onApprove}>{Dictionary.Approve}</button>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Approve: \"يوافق\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Approve: \"Approve\"\r\n    };\r\n}\r\n\r\nexport default PayProofDialog;","import React, { Component } from \"react\";\r\nimport TradersBillsList from \"./TradersBillsList\";\r\n\r\nclass TradersBills extends Component {\r\n    render() {\r\n        return <section>\r\n            <TradersBillsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TradersBills;","import React, { Component } from \"react\";\r\nimport PayProofDialog from \"./PayProofDialog\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport PayDetailsDialog from \"./PayDetailsDialog\";\r\n\r\nclass DriversBillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Bill.BillNumber}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.Username}</td>\r\n\r\n            <td>{`${Bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${new Date(Bill.Created).toDateString()}`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                {Bill.DriverPayProof ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#driver-pay-proof-dialog-${Index}`}>{Dictionary.PayProof}</button> : null}\r\n\r\n                {Bill.DriverPayDetails ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#driver-pay-details-dialog-${Index}`}>{Dictionary.PayDetails}</button> : null}\r\n\r\n                {Bill.DriverPayProof ?\r\n                    <PayProofDialog Index={Index}\r\n                        PayProof={Bill.DriverPayProof}\r\n                        OnOK={() => { this.props.OnPayProofApproved(Bill); }} /> : null}\r\n\r\n                {Bill.DriverPayDetails ?\r\n                    <PayDetailsDialog Index={Index}\r\n                        PayDetails={Bill.DriverPayDetails} /> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        PayProof: \"إثبات الدفع\",\r\n        PayDetails: \"تفاصيل الدفع\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        PayProof: \"Pay Proof\",\r\n        PayDetails: \"Pay Details\"\r\n    };\r\n}\r\n\r\nexport default DriversBillListItem;","import React, { Component } from \"react\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\n\r\nclass PayDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-pay-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayDetailsContainer PayDetails={PayDetails} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport DriversBillListItem from \"./DriversBillListItem\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass DriversBillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllBills: [],\r\n            Bills: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"DriversBills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        AllBills: response.Bills,\r\n                        Bills: response.Bills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllBills: [],\r\n                        Bills: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Bills: this.state.AllBills\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allBills = this.state.AllBills;\r\n        let filteredBills = [];\r\n        let count = 0;\r\n\r\n        for (let bill of allBills) {\r\n            if (bill.BillNumber.includes(searchString)) {\r\n                filteredBills[count++] = bill;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Bills: filteredBills\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Bills,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xxs m-l-xxs\"></span>{Dictionary.DriversBills}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.Bills}\r\n                    {Refreshing ? <span className=\"m-l-xxs m-r-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.Search}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Bills.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor={Dictionary.Bills} /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.BillNumber}</th>\r\n                                <th>{Dictionary.Paid}</th>\r\n                                <th>{Dictionary.Payee}</th>\r\n                                <th>{Dictionary.Amount}</th>\r\n                                <th>{Dictionary.GeneratedOn}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Bills.map((bill, index) => {\r\n                                return <DriversBillListItem key={index}\r\n                                    Index={index}\r\n                                    Bill={bill}\r\n                                    OnPayProofApproved={bill => {\r\n                                        let bills = Bills;\r\n\r\n                                        for (let billItem of bills) {\r\n                                            if (billItem === bill) {\r\n                                                billItem.Paid = true;\r\n                                                billItem.DriverPayProof.Approved = true;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            Bills: bills\r\n                                        });\r\n                                    }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        DriversBills: \"فواتير السائقين\",\r\n        Bills: \"فواتير\",\r\n        Search: \"بحث\",\r\n        BillNumber: \"رقم الفاتوره\",\r\n        Paid: \"دفع؟\",\r\n        Payee: \"المستفيد\",\r\n        Amount: \"كمية\",\r\n        GeneratedOn: \"تم إنشاؤه في\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        DriversBills: \"Drivers' Bills\",\r\n        Bills: \"Bills\",\r\n        Search: \"Search\",\r\n        BillNumber: \"BILL NUMBER\",\r\n        Paid: \"PAID?\",\r\n        Payee: \"PAYEE\",\r\n        Amount: \"AMOUNT\",\r\n        GeneratedOn: \"GENERATED ON\"\r\n    };\r\n}\r\n\r\nexport default DriversBillsList;","import React, { Component } from \"react\";\r\nimport TradersBills from \"./tradersBills/TradersBills\";\r\nimport DriversBills from \"./driversBills/DriversBills\";\r\n\r\nclass Bills extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#traders-bills\" aria-controls=\"traders-bills\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TradersBills}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#drivers-bills\" aria-controls=\"drivers-bills\" role=\"tab\" data-toggle=\"tab\">{Dictionary.DriversBills}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"traders-bills\">\r\n                    <TradersBills />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"drivers-bills\">\r\n                    <DriversBills />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TradersBills: \"فواتير التجار\",\r\n        DriversBills: \"فواتير السائقين\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TradersBills: \"Traders' Bills\",\r\n        DriversBills: \"Drivers' Bills\"\r\n    };\r\n}\r\n\r\nexport default Bills;","import React, { Component } from \"react\";\r\nimport DriversBillsList from \"./DriversBillsList\";\r\n\r\nclass DriversBills extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriversBillsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriversBills;","import React, { Component } from \"react\";\r\nimport RowData from \"./RowData\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const trader = AccountStatement.Trader;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Bills.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs m-l-xxs\" style={{ color: \"#FFBF15\" }}></span>{Dictionary.NoBillingDetails}.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\" dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs m-l-xxxs\"></span>{Dictionary.Naqel}</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{`${trader.FirstName} ${trader.LastName}`}</div>\r\n                                <div className=\"type-t9\">{`@${trader.Username}`}</div>\r\n                                <div className=\"type-t8\">{trader.Type}</div>\r\n                                <div className=\"type-t8\">{trader.Address}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{Dictionary.Date}</th>\r\n                                    <th>{Dictionary.BillNumber}</th>\r\n                                    <th>{Dictionary.Paid}</th>\r\n                                    <th>{Dictionary.FeeRate}</th>\r\n                                    <th>{Dictionary.PayMethod}</th>\r\n                                    <th>{Dictionary.RecipientCharges}</th>\r\n                                    <th>{Dictionary.NaqelCharges}</th>\r\n                                    <th>{Dictionary.Amount}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Bills.map((bill, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Bill={bill} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>{Dictionary.Total}</td>\r\n                                    <td>{`${AccountStatement.TotalRecipientAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                    <td>{`${AccountStatement.TotalChargedAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                    <td>{`${AccountStatement.TotalAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        NoBillingDetails: \"لم يتم العثور على تفاصيل الفوترة\",\r\n        Naqel: \"نا قل\",\r\n        Date: \"تاريخ\",\r\n        BillNumber: \"رقم الفاتوره\",\r\n        Paid: \"دفع؟\",\r\n        FeeRate: \"معدل الرسوم\",\r\n        PayMethod: \"طريقة الدفع\",\r\n        RecipientCharges: \"رسوم المتلقي\",\r\n        NaqelCharges: \"تهم نا قل\",\r\n        Amount: \"كمية\",\r\n        Total: \"مجموع\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        NoBillingDetails: \"No billing details found\",\r\n        Naqel: \"NAQEL\",\r\n        Driver: \"Driver\",\r\n        Date: \"DATE\",\r\n        BillNumber: \"BILL NUMBER\",\r\n        Paid: \"PAID?\",\r\n        FeeRate: \"FEE RATE\",\r\n        PayMethod: \"PAY METHOD\",\r\n        RecipientCharges: \"RECIPIENT CHARGES\",\r\n        NaqelCharges: \"NAQEL CHARGES\",\r\n        Amount: \"AMOUNT\",\r\n        Total: \"TOTAL\"\r\n    };\r\n}\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Bill.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Bill.BillNumber}</td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{`${Bill.FeeRate}%`}</td>\r\n\r\n            <td>{Bill.PaymentMethod}</td>\r\n\r\n            <td>{`${Bill.RecipientAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Bill.ChargedAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"TraderAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">{Dictionary.Searching}</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-search m-r-xxs m-l-xxs\"></span>{Dictionary.NoAccountStatementFound}.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-n\">{Dictionary.Print}</button>}\r\n                        content={() => this.TraderAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={traderAccountStatement => (this.TraderAccountStatement = traderAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Searching: \"يبحث\",\r\n        NoAccountStatementFound: \"لا يوجد بيان حساب لعرضه. ابحث في التاجر أو الوسيط عن طريق اسم المستخدم لعرض كشف حسابه\",\r\n        Print: \"طباعة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Searching: \"Searching\",\r\n        NoAccountStatementFound: \"No account statement to display. Search the trader or broker by username to view his account statement\",\r\n        Print: \"Print\",\r\n    };\r\n}\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass TraderAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs m-l-xxs\"></span>{Dictionary.TraderAccountStatements}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.AccountStatement}</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchUsername}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TraderAccountStatements: \"كشوف حساب التاجر\",\r\n        AccountStatement: \"كشف حساب\",\r\n        SearchUsername: \"بحث اسم المستخدم\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TraderAccountStatements: \"Trader Account Statements\",\r\n        AccountStatement: \"Account Statement\",\r\n        SearchUsername: \"Search Username\"\r\n    };\r\n}\r\n\r\nexport default TraderAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const driver = AccountStatement.Driver;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Bills.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs m-l-xxs\" style={{ color: \"#FFBF15\" }}></span>{Dictionary.NoBillingDetails}.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\" dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs m-l-xxxs\"></span>{Dictionary.Naqel}</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{`${driver.FirstName} ${driver.LastName}`}</div>\r\n                                <div className=\"type-t9\">{`@${driver.Username}`}</div>\r\n                                <div className=\"type-t8\">Driver</div>\r\n                                <div className=\"type-t8\">{driver.Address}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{Dictionary.Date}</th>\r\n                                    <th>{Dictionary.JobNumber}</th>\r\n                                    <th>{Dictionary.Earned}</th>\r\n                                    <th>{Dictionary.BillNumber}</th>\r\n                                    <th>{Dictionary.Paid}</th>\r\n                                    <th>{Dictionary.PayMethod}</th>\r\n                                    <th>{Dictionary.AmountCharged}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Bills.map((bill, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Bill={bill} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td>{Dictionary.NetEarning}</td>\r\n                                    <td>{`${AccountStatement.NetEarning.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>{Dictionary.Total}</td>\r\n                                    <td>{`$${AccountStatement.NetAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        NoBillingDetails: \"لم يتم العثور على تفاصيل الفوترة\",\r\n        Naqel: \"نا قل\",\r\n        Driver: \"سائق\",\r\n        Date: \"تاريخ\",\r\n        JobNumber: \"رقم الوظيفة\",\r\n        Earned: \"حصل\",\r\n        BillNumber: \"رقم الفاتوره\",\r\n        Paid: \"دفع؟\",\r\n        PayMethod: \"طريقة الدفع\",\r\n        AmountCharged: \"المبلغ المطلوب\",\r\n        NetEarning: \"صافي ربح\",\r\n        Total: \"مجموع\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        NoBillingDetails: \"No billing details found\",\r\n        Naqel: \"NAQEL\",\r\n        Driver: \"Driver\",\r\n        Date: \"DATE\",\r\n        JobNumber: \"JOB NUMBER\",\r\n        Earned: \"EARNED\",\r\n        BillNumber: \"BILL NUMBER\",\r\n        Paid: \"PAID?\",\r\n        PayMethod: \"PAY METHOD\",\r\n        AmountCharged: \"AMOUNT CHARGED\",\r\n        NetEarning: \"NET EARNING\",\r\n        Total: \"TOTAL\"\r\n    };\r\n}\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport TraderAccountStatementBrowser from \"./TraderAccountStatementBrowser\";\r\n\r\nclass TraderAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderAccountStatements;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Bill.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Bill.JobNumber}</td>\r\n\r\n            <td>{`${Bill.AmountEarned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{Bill.BillNumber}</td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.PaymentMethod}</td>\r\n\r\n            <td>{`${Bill.AmountCharged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"DriverAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">{Dictionary.Searching}</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-search m-r-xxs m-l-xxs\"></span>{Dictionary.NoAccountStatementFound}.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-n\">{Dictionary.Print}</button>}\r\n                        content={() => this.DriverAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={driverAccountStatement => (this.DriverAccountStatement = driverAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Searching: \"يبحث\",\r\n        NoAccountStatementFound: \"لا يوجد بيان حساب لعرضه. ابحث في السائق عن طريق اسم المستخدم لعرض كشف حسابه\",\r\n        Print: \"طباعة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Searching: \"Searching\",\r\n        NoAccountStatementFound: \"No account statement to display. Search the driver by username to view his account statement\",\r\n        Print: \"Print\",\r\n    };\r\n}\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass DriverAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs m-l-xxs\"></span>{Dictionary.DriverAccountStatements}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.AccountStatement}</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchUsername}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        DriverAccountStatements: \"كشوف حساب السائق\",\r\n        AccountStatement: \"كشف حساب\",\r\n        SearchUsername: \"بحث اسم المستخدم\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        DriverAccountStatements: \"Driver Account Statements\",\r\n        AccountStatement: \"Account Statement\",\r\n        SearchUsername: \"Search Username\"\r\n    };\r\n}\r\n\r\nexport default DriverAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const transportCompany = AccountStatement.TransportCompany;\r\n\r\n        let netAmount = 0.0;\r\n        let netEarned = 0.0;\r\n        let netCharged = 0.0;\r\n\r\n        for (let transaction of AccountStatement.Transactions) {\r\n            netAmount += transaction.Amount;\r\n            netEarned += transaction.Earned;\r\n            netCharged += transaction.Charged;\r\n        }\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default back-color-light\" dir={GetDirection()}>\r\n                <div className=\"container\">\r\n                    <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs m-l-xxxs\"></span>{Dictionary.Naqel}</div>\r\n\r\n                    <div className=\"p-t-xxs\">\r\n                        <div className=\"type-t8 m-b-xxs\">{Dictionary.TransportComapanyDetails}</div>\r\n                        <div className=\"type-t8\">{`${Dictionary.CompanyName}: ${transportCompany.Name}`}</div>\r\n                        <div className=\"type-t8\">{`${Dictionary.Username}: ${transportCompany.Username}`}</div>\r\n                        <div className=\"type-t8\">{`${Dictionary.InternalNumber}: ${transportCompany.InternalNumber}`}</div>\r\n                        <div className=\"type-t8\">{`${Dictionary.CommercialRegisterNumber}: ${transportCompany.CommercialRegisterNumber}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {AccountStatement.Transactions.length === 0 ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs m-l-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>{Dictionary.NoTransactionFound}.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{Dictionary.Date}</th>\r\n                                <th>{Dictionary.TruckNumber}</th>\r\n                                <th>{Dictionary.JobNumber}</th>\r\n                                <th>{Dictionary.TraderBillNumber}</th>\r\n                                <th>{Dictionary.TraderBillPaid}</th>\r\n                                <th>{Dictionary.TradePayMethod}</th>\r\n                                <th>{Dictionary.DriverBillNumber}</th>\r\n                                <th>{Dictionary.DriverBillPaid}</th>\r\n                                <th>{Dictionary.DriverPayMethod}</th>\r\n                                <th>{Dictionary.FeeRate}</th>\r\n                                <th>{Dictionary.Earned}</th>\r\n                                <th>{Dictionary.Charged}</th>\r\n                                <th>{Dictionary.TotalAmount}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AccountStatement.Transactions.map((transaction, index) => {\r\n                                return <RowData key={index}\r\n                                    Index={index}\r\n                                    Transaction={transaction} />;\r\n                            })}\r\n                            <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>{Dictionary.Total}:</td>\r\n                                <td>{`${netEarned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netCharged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Naqel: \"نا قل\",\r\n        TransportComapanyDetails: \"تفاصيل شركة النقل\",\r\n        CompanyName: \"اسم الشركة\",\r\n        Username: \"اسم المستخدم\",\r\n        InternalNumber: \"الرقم الداخلي\",\r\n        CommercialRegisterNumber: \"رقم السجل التجاري\",\r\n        NoTransactionFound: \"لم يتم العثور على معاملات\",\r\n        Date: \"تاريخ\",\r\n        TruckNumber: \"رقم الشاحنة\",\r\n        JobNumber: \"رقم الوظيفة\",\r\n        TraderBillNumber: \"رقم فاتورة التاجر\",\r\n        TraderBillPaid: \"دفع فاتورة التاجر؟\",\r\n        TradePayMethod: \"طريقة دفع التاجر\",\r\n        DriverBillNumber: \"رقم فاتورة السائق\",\r\n        DriverBillPaid: \"مدفوع فاتورة السائق؟\",\r\n        DriverPayMethod: \"طريقة دفع السائق\",\r\n        FeeRate: \"معدل الرسوم\",\r\n        Earned: \"حصل\",\r\n        Charged: \"متهم\",\r\n        TotalAmount: \"المبلغ الإجمالي\",\r\n        Total: \"مجموع\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Naqel: \"NAQEL\",\r\n        TransportComapanyDetails: \"TRANSPORT COMPANY DETAILS\",\r\n        CompanyName: \"Company Name\",\r\n        Username: \"Username\",\r\n        InternalNumber: \"Internal Number\",\r\n        CommercialRegisterNumber: \"Commercial Register Number\",\r\n        NoTransactionFound: \"No transactions found\",\r\n        Date: \"DATE\",\r\n        TruckNumber: \"TRUCK NUMBER\",\r\n        JobNumber: \"JOB NUMBER\",\r\n        TraderBillNumber: \"TRADER BILL NUMBER\",\r\n        TraderBillPaid: \"TRADER BILL PAID?\",\r\n        TradePayMethod: \"TRADER PAY METHOD\",\r\n        DriverBillNumber: \"DRIVER BILL NUMBER\",\r\n        DriverBillPaid: \"DRIVER BILL PAID?\",\r\n        DriverPayMethod: \"DRIVER PAY METHOD\",\r\n        FeeRate: \"FEE RATE\",\r\n        Earned: \"EARNED\",\r\n        Charged: \"CHARGED\",\r\n        TotalAmount: \"TOTAL AMOUNT\",\r\n        Total: \"TOTAL\"\r\n    };\r\n}\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport DriverAccountStatementBrowser from \"./DriverAccountStatementBrowser\";\r\n\r\nclass DriverAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriverAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverAccountStatements;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Date).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.TruckNumber}</td>\r\n\r\n            <td>{Transaction.JobNumber}</td>\r\n\r\n            <td>{Transaction.TraderBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.TraderBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.TraderPaymentMethod}</td>\r\n\r\n            <td>{Transaction.DriverBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.DriverBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.DriverPaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.FeeRate}%`}</td>\r\n\r\n            <td>{`${Transaction.Earned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Charged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"ResponsibleAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">{Dictionary.Searching}</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-search m-r-xxs m-l-xxs\"></span>{Dictionary.NoAccountStatementFound}.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-t-n\">{Dictionary.Print}</button>}\r\n                        content={() => this.ResponsibleAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={responsibleAccountStatement => (this.ResponsibleAccountStatement = responsibleAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Searching: \"يبحث\",\r\n        NoAccountStatementFound: \"لا يوجد بيان حساب لعرضه. ابحث في شركة النقل المسؤولة عن اسم المستخدم لعرض كشف حسابه\",\r\n        Print: \"طباعة\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Searching: \"Searching\",\r\n        NoAccountStatementFound: \"No account statement to display. Search the transport company responsible by username to view his account statement\",\r\n        Print: \"Print\",\r\n    };\r\n}\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass ResponsibleAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs m-l-xxs\"></span>{Dictionary.TCResponsibleAccountStatements}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }} dir={GetDirection()}>{Dictionary.AccountStatement}</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder={Dictionary.SearchUsername}\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TCResponsibleAccountStatements: \"كشوف الحساب المسؤول لشركة النقل\",\r\n        AccountStatement: \"كشف حساب\",\r\n        SearchUsername: \"بحث اسم المستخدم\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TCResponsibleAccountStatements: \"TC Responsible Account Statements\",\r\n        AccountStatement: \"Account Statement\",\r\n        SearchUsername: \"Search Username\"\r\n    };\r\n}\r\n\r\nexport default ResponsibleAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport TraderAccountStatements from \"./traderAccountStatements/TraderAccountStatements\";\r\nimport DriverAccountStatements from \"./driverAccountStatements/DriverAccountStatements\";\r\nimport ResponsibleAccountStatements from \"./responsibleAccountStatements/ResponsibleAccountStatements\";\r\n\r\nclass UserAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#trader-account-statements\" aria-controls=\"trader-account-statements\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TraderAccountStatements}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#driver-account-statements\" aria-controls=\"driver-account-statements\" role=\"tab\" data-toggle=\"tab\">{Dictionary.DriverAccountStatements}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#responsible-account-statements\" aria-controls=\"responsible-account-statements\" role=\"tab\" data-toggle=\"tab\">{Dictionary.TCResponsibleAccountStatement}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"trader-account-statements\">\r\n                    <TraderAccountStatements />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-account-statements\">\r\n                    <DriverAccountStatements />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"responsible-account-statements\">\r\n                    <ResponsibleAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        TraderAccountStatements: \"كشوف حساب التاجر\",\r\n        DriverAccountStatements: \"كشوف حساب السائق\",\r\n        TCResponsibleAccountStatement: \"كشف حساب مسؤول لشركة النقل\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        TraderAccountStatements: \"Trader Account Statements\",\r\n        DriverAccountStatements: \"Driver Account Statements\",\r\n        TCResponsibleAccountStatement: \"TC Responsible Account Statement\"\r\n    };\r\n}\r\n\r\nexport default UserAccountStatements;","import React, { Component } from \"react\";\r\nimport ResponsibleAccountStatementBrowser from \"./ResponsibleAccountStatementBrowser\";\r\n\r\nclass ResponsibleAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <ResponsibleAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleAccountStatements;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const naqelSettings = AccountStatement.NaqelSettings;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Transactions.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs m-l-xxs\" style={{ color: \"#FFBF15\" }}></span>{Dictionary.NoTransactionsFound}.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\" dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>{Dictionary.Naqel}</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{naqelSettings.Street}</div>\r\n                                <div className=\"type-t8\">{`${naqelSettings.City}, ${naqelSettings.Country}.`}</div>\r\n                                <div className=\"type-t8\">{`${Dictionary.ZIPs} ${naqelSettings.ZIPCode}`}</div>\r\n                            </div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{naqelSettings.PhoneNumber}</div>\r\n                                <div className=\"type-t8\">{naqelSettings.Website}</div>\r\n                                <div className=\"type-t8\">{naqelSettings.BusinessName}</div>\r\n                            </div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{Dictionary.BankName}</div>\r\n                                <div className=\"type-t8\">{naqelSettings.BankName}</div>\r\n                                <div className=\"type-t8 p-t-xxxs\">{Dictionary.AccountNumber} #</div>\r\n                                <div className=\"type-t8\">{naqelSettings.AccountNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{Dictionary.Date}</th>\r\n                                    <th>{Dictionary.BillNumber}</th>\r\n                                    <th>{Dictionary.Payee}</th>\r\n                                    <th>{Dictionary.PayeeType}</th>\r\n                                    <th>{Dictionary.PayMethod}</th>\r\n                                    <th>{Dictionary.Amount}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Transactions.map((transaction, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Transaction={transaction} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>{Dictionary.Total}</td>\r\n                                    <td>{`${AccountStatement.NetAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        NoTransactionsFound: \"لم يتم العثور على معاملات\",\r\n        Naqel: \"نا قل\",\r\n        ZIP: \"الرمز البريدي\",\r\n        BankName: \"اسم البنك\",\r\n        AccountNumber: \"الحساب\",\r\n        Date: \"تاريخ\",\r\n        BillNumber: \"رقم الفاتوره\",\r\n        Payee: \"المستفيد\",\r\n        PayeeType: \"نوع الدفع\",\r\n        PayMethod: \"طريقة الدفع\",\r\n        Amount: \"كمية\",\r\n        Total: \"مجموع\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        NoTransactionsFound: \"No transactions found\",\r\n        Naqel: \"NAQEL\",\r\n        ZIP: \"ZIP\",\r\n        BankName: \"BANK NAME\",\r\n        AccountNumber: \"Account\",\r\n        Date: \"DATE\",\r\n        BillNumber: \"BILL NUMBER\",\r\n        Payee: \"PAYEE\",\r\n        PayeeType: \"PAYEE TYPE\",\r\n        PayMethod: \"PAY METHOD\",\r\n        Amount: \"AMOUNT\",\r\n        Total: \"TOTAL\",\r\n    };\r\n}\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.BillNumber}</td>\r\n\r\n            <td>{Transaction.Payee}</td>\r\n\r\n            <td>{Transaction.PayeeType}</td>\r\n\r\n            <td>{Transaction.PaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (sessionStorage.Token) {\r\n            let request = {\r\n                Token: sessionStorage.Token,\r\n                Get: \"AccountStatement\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }} dir={GetDirection()}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs m-l-xxs\"></span>{Dictionary.NaqelAccountStatement}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {(Searching || !AccountStatement) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                        <div className=\"container\">\r\n                            {Searching ? <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4 color-default\">{Dictionary.Searching}</div>\r\n                                <ProgressBar />\r\n                            </div> : <div className=\"text-center p-xxs\">\r\n                                    <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs m-l-xxs\" style={{ color: \"#FFBF15\" }}></span>{Dictionary.NoAccountStatement}.</div>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <ReactToPrint\r\n                            trigger={() => <button className=\"btn btn-primary m-n\">{Dictionary.Print}</button>}\r\n                            content={() => this.AccountStatement} />\r\n                    </div>\r\n                    <AccountStatementData AccountStatement={AccountStatement}\r\n                        ref={accountStatement => (this.AccountStatement = accountStatement)} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        NaqelAccountStatement: \"كشف حساب ناقل\",\r\n        Searching: \"يبحث\",\r\n        NoAccountStatement: \"لا يوجد بيان حساب لعرضه\",\r\n        Print: \"طباعة\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        NaqelAccountStatement: \"Naqel Account Statement\",\r\n        Searching: \"Searching\",\r\n        NoAccountStatement: \"No account statement to display\",\r\n        Print: \"Print\"\r\n    };\r\n}\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport Bills from \"./bills/Bills\";\r\nimport UserAccountStatements from \"./userAccountStatements/UserAccountStatements\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass FinancialAccounts extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"FINANCIAL ACCOUNTS\" /> */}\r\n\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#account-statement\" aria-controls=\"account-statement\" role=\"tab\" data-toggle=\"tab\">{Dictionary.AccountStatement}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#bills\" aria-controls=\"bills\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Bills}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#user-account-statements\" aria-controls=\"user-account-statements\" role=\"tab\" data-toggle=\"tab\">{Dictionary.UserAccountStatements}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"account-statement\">\r\n                    <AccountStatement />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"bills\">\r\n                    <Bills />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"user-account-statements\">\r\n                    <UserAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        AccountStatement: \"كشف حساب\",\r\n        Bills: \"فواتير\",\r\n        UserAccountStatements: \"كشوف حساب المستخدم\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        AccountStatement: \"Account Statement\",\r\n        Bills: \"Bills\",\r\n        UserAccountStatements: \"User Account Statements\"\r\n    };\r\n}\r\n\r\nexport default FinancialAccounts;","import React, { Component } from \"react\";\r\n\r\nclass PageNotFoundContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            BlockedUser\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\" style={{ height: \"100vh\" }} dir={GetDirection()}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"park.svg\" src=\"./images/park.svg\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-20\">\r\n                            <div className=\"type-h3 color-default\">404</div>\r\n                            <div className=\"type-sh3 color-default\">{Dictionary.PageNotFound}</div>\r\n                            <div className=\"type-sh4\">{Dictionary.Details}</div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        PageNotFound: \"الصفحة غير موجودة\",\r\n        Details: \"هذه الصفحة غير موجودة. يرجى مراعاة أنك قد تعرض هذه الصفحة لأن الرمز المميز قد يكون منتهي الصلاحية. سيؤدي تسجيل الدخول إلى حسابك مرة أخرى إلى إصلاح المشكلة. يعتمد توفر الصفحات أيضًا على نوع المستخدم الذي قمت بتسجيل الدخول باسمه ، لذلك قد تعرض هذه الصفحة لأنك قمت بتسجيل الدخول كمستخدم مختلف.\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        PageNotFound: \"Page Not Found\",\r\n        Details: \"This page does not exist. Please consider that you might be viewing this page because your token might be expired. Logging in to your account again will fix the issue. Availability of pages also depends upon which type of user you are logged in as, so you might be viewing this page because you might be logged in as a different user.\"\r\n    };\r\n}\r\n\r\nexport default PageNotFoundContainer;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Drivers from \"./Drivers/Drivers\";\r\nimport Traders from \"./traders/Traders\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Trucks from \"./Trucks/Trucks\";\r\nimport Permits from \"./Permits/permitTypes/PermitTypes\";\r\nimport Questions from \"./questions/Questions\";\r\nimport FeeRates from \"./feeRates/FeeRates\";\r\nimport FinancialAccounts from \"./financialAccounts/financialAccounts\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport PageNotFoundContainer from \"../../../containers/404/404\";\r\n\r\nclass AdministratorsDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (!sessionStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else if (!jwt_decode(sessionStorage.Token).AdministratorID) {\r\n            return <PageNotFoundContainer />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#133F4F\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#drivers\" aria-controls=\"drivers\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Drivers}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#traders\" aria-controls=\"traders\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Traders}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Jobs}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Trucks}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Permits}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Questions}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#fee-rates\" aria-controls=\"fee-rates\" role=\"tab\" data-toggle=\"tab\">{Dictionary.FeeRates}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">{Dictionary.Profile}</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#financial-accounts\" aria-controls=\"financial-accounts\" role=\"tab\" data-toggle=\"tab\">{Dictionary.FinancialAccounts}</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"drivers\">\r\n                        <Drivers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"traders\">\r\n                        <Traders />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                        <Trucks />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"permits\">\r\n                        <Permits />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                        <Questions />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"fee-rates\">\r\n                        <FeeRates />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financial-accounts\">\r\n                        <FinancialAccounts />\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nconst GetDirection = () => {\r\n    return (!LLanguage || LLanguage === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst LLanguage = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (LLanguage === \"Arabic\") {\r\n    Dictionary = {\r\n        Drivers: \"السائقين\",\r\n        Traders: \"التجار\",\r\n        Jobs: \"وظائف\",\r\n        Trucks: \"الشاحنات\",\r\n        Permits: \"تسمح\",\r\n        Questions: \"الأسئلة\",\r\n        FeeRates: \"معدلات الرسوم\",\r\n        Profile: \"الملف الشخصي\",\r\n        FinancialAccounts: \"الحسابات المالية\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Drivers: \"Drivers\",\r\n        Traders: \"Traders\",\r\n        Jobs: \"Jobs\",\r\n        Trucks: \"Trucks\",\r\n        Permits: \"Permits\",\r\n        Questions: \"Questions\",\r\n        FeeRates: \"Fee Rates\",\r\n        Profile: \"Profile\",\r\n        FinancialAccounts: \"Financial Accounts\"\r\n    };\r\n}\r\n\r\nexport default AdministratorsDashboard;","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../res/FirebaseApp\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { validatePhoneNumber } from \"../administrators/AdministratorFunctions\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PhoneNumber: \"\",\r\n            RegisteredAs: \"Administrator\",\r\n\r\n            ValidPhoneNumber: false,\r\n\r\n            ConfirmationResult: null,\r\n            PhoneCodeVerified: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhoneNumber: \"\",\r\n                Password: \"\",\r\n                Form: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            ValidPhoneNumber,\r\n            Errors\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value !== \"\";\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : Dictionary.PhoneNumberError1;\r\n\r\n                if (!ValidPhoneNumber) {\r\n                    break;\r\n                }\r\n\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : Dictionary.PhoneNumberError2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    handleResponse = (response, forgotPasswordPackage) => {\r\n        if (response.Message === \"Phone number is already used.\") {\r\n            sessionStorage.setItem(\"ForgotPasswordPackageToken\", JSON.stringify(forgotPasswordPackage));\r\n            this.props.history.push(\"/recoverPassword\");\r\n        }\r\n        else {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.Form = Dictionary.FormError;\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n        }\r\n    };\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.PhoneCodeVerified) {\r\n            const forgotPasswordPackage = {\r\n                PhoneNumber: this.state.PhoneNumber,\r\n                RegisteredAs: this.state.RegisteredAs,\r\n            };\r\n\r\n            await validatePhoneNumber(forgotPasswordPackage.PhoneNumber).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.handleResponse(response, forgotPasswordPackage);\r\n            });\r\n\r\n        }\r\n        else {\r\n            const appVerifier = window.recaptchaVerifier;\r\n\r\n            FirebaseApp.auth().languageCode = \"en\";\r\n            FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    ConfirmationResult: confirmationResult\r\n                });\r\n\r\n                this.SendCodeButton.click();\r\n            }).catch(error => {\r\n                let {\r\n                    Errors\r\n                } = this.state;\r\n\r\n                Errors.Form = error.message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: Errors\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            PhoneNumber,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors,\r\n        } = this.state;\r\n\r\n        return <div>\r\n            <div class=\"middle\" style={RegisterCardBack}>\r\n                <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                    <div style={CardChild}>\r\n                        <img src=\"./images/more.svg\" alt=\"more.svg\" height=\"60\" />\r\n                        <div class=\"type-h3\" style={CardTitle}>{Dictionary.ForgotPassword}</div>\r\n                        <br />\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"PhoneNumber\" class=\"control-label\">{Dictionary.PhoneNumber}</label>\r\n                                <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                    placeholder=\"+966501234567\" value={PhoneNumber} onChange={this.onChange} />\r\n                                <span class=\"text-danger\">{Errors.PhoneNumber}</span>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                {Errors.Form ? <div>\r\n                                    <label class=\"text-danger\">{Errors.Form}</label>\r\n                                    <br />\r\n                                </div> : null}\r\n                            </div>\r\n\r\n                            <input type=\"submit\" value={Dictionary.Next} class=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                style={{ display: \"none\" }}\r\n                data-toggle=\"modal\"\r\n                data-target=\"#phone-confirmation-dialog\"\r\n                ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n\r\n            <PhoneConfirmationDialog ConfirmationResult={this.state.ConfirmationResult}\r\n                PhoneNumber={this.state.PhoneNumber}\r\n                OnOK={phoneCodeVerified => {\r\n                    if (phoneCodeVerified) {\r\n                        this.setState({\r\n                            PhoneCodeVerified: true\r\n                        });\r\n\r\n                        this.onSubmit();\r\n                    }\r\n                    else {\r\n                        let {\r\n                            Errors\r\n                        } = this.state;\r\n\r\n                        Errors.Form = \"Confirmation code is invalid.\";\r\n\r\n                        this.setState({\r\n                            ValidForm: false,\r\n                            Errors: Errors\r\n                        });\r\n                    }\r\n                }} />\r\n\r\n            <div id=\"recaptcha\" />\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </div>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        ForgotPassword: \"هل نسيت كلمة المرور\",\r\n        PhoneNumber: \"رقم الهاتف\",\r\n        Next: \"التالى\",\r\n        PhoneNumberError1: \".رقم الهاتف مطلوب\",\r\n        PhoneNumberError2: \".رقم الهاتف غير صالح\",\r\n        CodeError: \".رمز التأكيد غير صالح\",\r\n        FormError: \".فشل في العثور على رقم الهاتف هذا\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        ForgotPassword: \"Forgot Password\",\r\n        PhoneNumber: \"Phone Number\",\r\n        Next: \"Next\",\r\n        PhoneNumberError1: \"Phone number is required.\",\r\n        PhoneNumberError2: \"Phone number is invalid.\",\r\n        CodeError: \"Confirmation code is invalid.\",\r\n        FormError: \"Failed to find this phone number.\",\r\n    };\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport {recoverPassword } from \"../administrators/AdministratorFunctions\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass RecoverPassword extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Agreed: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Form: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            ValidPassword,\r\n            ValidConfirmPassword,\r\n            Errors\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                Errors.Password = ValidPassword ? \"\" : Dictionary.Password;\r\n\r\n                if (!ValidPassword) {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmPassword = value === this.state.ConfirmPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : Dictionary.ConfirmPasswordError;\r\n                break;\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.Password;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : Dictionary.ConfirmPasswordError;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPassword: ValidPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidPassword &&\r\n                        ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    handleResponse = (response) => {\r\n        if (response.Message === \"Password is updated.\") {\r\n            sessionStorage.removeItem(\"ForgotPasswordPackageToken\");\r\n            this.props.history.push(\"/passwordRecovered\");\r\n        }\r\n        else {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.Form = Dictionary.FormError;\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n        }\r\n    };\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const ForgotPasswordPackage = JSON.parse(sessionStorage.ForgotPasswordPackageToken);\r\n\r\n        const recoverPasswordPackage = {\r\n            PhoneNumber: ForgotPasswordPackage.PhoneNumber,\r\n            Password: this.state.Password,\r\n        };\r\n\r\n        await recoverPassword(recoverPasswordPackage).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            this.handleResponse(response);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!sessionStorage.ForgotPasswordPackageToken) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            const {\r\n                Password,\r\n                ConfirmPassword,\r\n                ValidForm,\r\n                ShowPreloader,\r\n                Errors,\r\n            } = this.state;\r\n\r\n            return <div>\r\n            <div class=\"middle\" style={RegisterCardBack}>\r\n                <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                    <div style={CardChild}>\r\n                        <img src=\"./images/more.svg\" alt=\"more.svg\" height=\"60\" />\r\n                        <div class=\"type-h3\" style={CardTitle}>{Dictionary.RecoverPassword}</div>\r\n                        <br />\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"Password\" class=\"control-label\">{Dictionary.Password}</label>\r\n                                <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                    value={Password} onChange={this.onChange} />\r\n                                <span class=\"text-danger\">{Errors.Password}</span>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"ConfirmPassword\" class=\"control-label\">{Dictionary.ConfirmPassword}</label>\r\n                                <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                    value={ConfirmPassword} onChange={this.onChange} />\r\n                                <span class=\"text-danger\">{Errors.ConfirmPassword}</span>\r\n                            </div>\r\n\r\n                            {Errors.Form ?\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"text-danger\">{Errors.Form}</label>\r\n                                </div> : null}\r\n\r\n                            <input type=\"submit\" value={Dictionary.Submit} class=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </div>;\r\n        }\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        RecoverPassword: \"إستعادة كلمة المرور\",\r\n        Password: \"كلمه السر\",\r\n        ConfirmPassword: \"تأكيد كلمة المرور\",\r\n        Submit: \"إرسال\",\r\n        PasswordError: \"كلمة المرور قصيرة جدا.\",\r\n        ConfirmPasswordError: \"كلمتا المرور غير متطابقتين.\",\r\n        FormError: \"فشل تحديث كلمة المرور. يرجى المحاولة لاحقًا!\",\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        RecoverPassword: \"Recover Password\",\r\n        Password: \"Password\",\r\n        ConfirmPassword: \"Confirm Password\",\r\n        Submit: \"Submit\",\r\n        PasswordError: \"Password is too short.\",\r\n        ConfirmPasswordError: \"Passwords did not match.\",\r\n        FormError: \"Failed to update the password. Please try later!\",\r\n    };\r\n}\r\n\r\nexport default RecoverPassword;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass PasswordRecovered extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        return <div class=\"middle\" style={CongratulationsCardBack} dir={GetDirection()}>\r\n            <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"congrats.svg\" src=\"./images/congrats.png\" data-source-index=\"2\" style={{ maxWidth: \"70%\" }} />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\">{Dictionary.Congratulations}</div>\r\n                            <div class=\"type-sh3\">{Dictionary.CongratulationsSubtitle}</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"submit\" value={Dictionary.SignIn} class=\"btn btn-primary\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nconst GetDirection = () => {\r\n    return (!Language || Language === \"English\") ? \"ltr\" : \"rtl\";\r\n};\r\n\r\nconst Language = sessionStorage.Language;\r\nlet Dictionary;\r\n\r\nif (Language === \"Arabic\") {\r\n    Dictionary = {\r\n        Congratulations: \"تهانينا\",\r\n        CongratulationsSubtitle: \"لقد تم تحديث كلمة السر الخاصة بك بنجاح.\",\r\n        SignIn: \"تسجيل الدخول\"\r\n    };\r\n}\r\nelse {\r\n    Dictionary = {\r\n        Congratulations: \"Congratulations\",\r\n        CongratulationsSubtitle: \"Your password has been updated successfully.\",\r\n        SignIn: \"Sign In\"\r\n    };\r\n}\r\n\r\nexport default PasswordRecovered;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", left: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\nimport LanguageDispatcher from \"../../res/LanguageDispatcher\";\r\n\r\nconst Language = LanguageDispatcher.GetLanguage();\r\n\r\nconst LinkStyle = {\r\n    textDecoration: \"none\",\r\n    cursor: \"pointer\"\r\n};\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n            <div className=\"container\">\r\n                &copy; {new Date().getFullYear()} - {Language.ApplicationName} - <a style={LinkStyle}\r\n                    onClick={() => {\r\n                        LanguageDispatcher.SetLanguage(\"English\");\r\n                        window.location.reload(false);\r\n                    }}>English</a> | <a style={LinkStyle}\r\n                    onClick={() => {\r\n                        LanguageDispatcher.SetLanguage(\"Arabic\");\r\n                        window.location.reload(false);\r\n                    }}>العربية</a>\r\n            </div>\r\n        </footer>;\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport SetupAdministratorAccount from \"./components/register/SetupAdministratorAccount\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport AdministratorsDashboard from \"./components/administrators/dashboard/AdministratorsDashboard\";\r\nimport ForgotPassword from \"./components/forgotPassword/ForgotPassword\";\r\nimport RecoverPassword from \"./components/forgotPassword/RecoverPassword\";\r\nimport PasswordRecovered from \"./components/forgotPassword/PasswordRecovered\";\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return <Router basename=\"/\">\r\n            <div className=\"App\">\r\n                <Header />\r\n                <Route exact path=\"/\" component={Landing} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/setupAdministratorAccount\" component={SetupAdministratorAccount} />\r\n                <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\r\n                <Route exact path=\"/recoverPassword\" component={RecoverPassword} />\r\n                <Route exact path=\"/passwordRecovered\" component={PasswordRecovered} />\r\n                <Route exact path=\"/administrators\" component={AdministratorsDashboard} />\r\n                <BackToTop />\r\n                <Footer />\r\n            </div>\r\n        </Router>;\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}